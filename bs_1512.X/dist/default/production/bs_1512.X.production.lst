

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Dec 02 15:25:02 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1512
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.05
    46                           ; Generated 20/12/2018 GMT
    47                           ; 
    48                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F1512 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009B                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  0116                     	;# 
   129  0117                     	;# 
   130  011D                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  018E                     	;# 
   134  0191                     	;# 
   135  0191                     	;# 
   136  0192                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0194                     	;# 
   140  0195                     	;# 
   141  0196                     	;# 
   142  0197                     	;# 
   143  0199                     	;# 
   144  019A                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019C                     	;# 
   150  019C                     	;# 
   151  019D                     	;# 
   152  019E                     	;# 
   153  019F                     	;# 
   154  020D                     	;# 
   155  0210                     	;# 
   156  0211                     	;# 
   157  0211                     	;# 
   158  0212                     	;# 
   159  0212                     	;# 
   160  0213                     	;# 
   161  0213                     	;# 
   162  0214                     	;# 
   163  0214                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0216                     	;# 
   168  0216                     	;# 
   169  0217                     	;# 
   170  0217                     	;# 
   171  0291                     	;# 
   172  0291                     	;# 
   173  0292                     	;# 
   174  0293                     	;# 
   175  0298                     	;# 
   176  0298                     	;# 
   177  0299                     	;# 
   178  029A                     	;# 
   179  0394                     	;# 
   180  0395                     	;# 
   181  0396                     	;# 
   182  0FE4                     	;# 
   183  0FE5                     	;# 
   184  0FE6                     	;# 
   185  0FE7                     	;# 
   186  0FE8                     	;# 
   187  0FE9                     	;# 
   188  0FEA                     	;# 
   189  0FEB                     	;# 
   190  0FED                     	;# 
   191  0FEE                     	;# 
   192  0FEF                     	;# 
   193  0711                     	;# 
   194  0712                     	;# 
   195  0713                     	;# 
   196  0714                     	;# 
   197  0715                     	;# 
   198  0716                     	;# 
   199  0717                     	;# 
   200  0718                     	;# 
   201  0719                     	;# 
   202  071A                     	;# 
   203  071A                     	;# 
   204  071A                     	;# 
   205  071B                     	;# 
   206  071C                     	;# 
   207  071C                     	;# 
   208  071C                     	;# 
   209  071D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  008C                     	;# 
   238  008D                     	;# 
   239  008E                     	;# 
   240  0090                     	;# 
   241  0091                     	;# 
   242  0092                     	;# 
   243  0095                     	;# 
   244  0096                     	;# 
   245  0097                     	;# 
   246  0099                     	;# 
   247  009A                     	;# 
   248  009B                     	;# 
   249  009B                     	;# 
   250  009B                     	;# 
   251  009B                     	;# 
   252  009C                     	;# 
   253  009C                     	;# 
   254  009D                     	;# 
   255  009E                     	;# 
   256  010C                     	;# 
   257  010D                     	;# 
   258  010E                     	;# 
   259  0116                     	;# 
   260  0117                     	;# 
   261  011D                     	;# 
   262  018C                     	;# 
   263  018D                     	;# 
   264  018E                     	;# 
   265  0191                     	;# 
   266  0191                     	;# 
   267  0192                     	;# 
   268  0193                     	;# 
   269  0193                     	;# 
   270  0194                     	;# 
   271  0195                     	;# 
   272  0196                     	;# 
   273  0197                     	;# 
   274  0199                     	;# 
   275  019A                     	;# 
   276  019B                     	;# 
   277  019B                     	;# 
   278  019B                     	;# 
   279  019B                     	;# 
   280  019C                     	;# 
   281  019C                     	;# 
   282  019D                     	;# 
   283  019E                     	;# 
   284  019F                     	;# 
   285  020D                     	;# 
   286  0210                     	;# 
   287  0211                     	;# 
   288  0211                     	;# 
   289  0212                     	;# 
   290  0212                     	;# 
   291  0213                     	;# 
   292  0213                     	;# 
   293  0214                     	;# 
   294  0214                     	;# 
   295  0215                     	;# 
   296  0215                     	;# 
   297  0215                     	;# 
   298  0216                     	;# 
   299  0216                     	;# 
   300  0217                     	;# 
   301  0217                     	;# 
   302  0291                     	;# 
   303  0291                     	;# 
   304  0292                     	;# 
   305  0293                     	;# 
   306  0298                     	;# 
   307  0298                     	;# 
   308  0299                     	;# 
   309  029A                     	;# 
   310  0394                     	;# 
   311  0395                     	;# 
   312  0396                     	;# 
   313  0FE4                     	;# 
   314  0FE5                     	;# 
   315  0FE6                     	;# 
   316  0FE7                     	;# 
   317  0FE8                     	;# 
   318  0FE9                     	;# 
   319  0FEA                     	;# 
   320  0FEB                     	;# 
   321  0FED                     	;# 
   322  0FEE                     	;# 
   323  0FEF                     	;# 
   324  0711                     	;# 
   325  0712                     	;# 
   326  0713                     	;# 
   327  0714                     	;# 
   328  0715                     	;# 
   329  0716                     	;# 
   330  0717                     	;# 
   331  0718                     	;# 
   332  0719                     	;# 
   333  071A                     	;# 
   334  071A                     	;# 
   335  071A                     	;# 
   336  071B                     	;# 
   337  071C                     	;# 
   338  071C                     	;# 
   339  071C                     	;# 
   340  071D                     	;# 
   341  0000                     	;# 
   342  0001                     	;# 
   343  0002                     	;# 
   344  0003                     	;# 
   345  0004                     	;# 
   346  0005                     	;# 
   347  0006                     	;# 
   348  0007                     	;# 
   349  0008                     	;# 
   350  0009                     	;# 
   351  000A                     	;# 
   352  000B                     	;# 
   353  000C                     	;# 
   354  000D                     	;# 
   355  000E                     	;# 
   356  0010                     	;# 
   357  0011                     	;# 
   358  0012                     	;# 
   359  0015                     	;# 
   360  0016                     	;# 
   361  0016                     	;# 
   362  0017                     	;# 
   363  0018                     	;# 
   364  0019                     	;# 
   365  001A                     	;# 
   366  001B                     	;# 
   367  001C                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0095                     	;# 
   375  0096                     	;# 
   376  0097                     	;# 
   377  0099                     	;# 
   378  009A                     	;# 
   379  009B                     	;# 
   380  009B                     	;# 
   381  009B                     	;# 
   382  009B                     	;# 
   383  009C                     	;# 
   384  009C                     	;# 
   385  009D                     	;# 
   386  009E                     	;# 
   387  010C                     	;# 
   388  010D                     	;# 
   389  010E                     	;# 
   390  0116                     	;# 
   391  0117                     	;# 
   392  011D                     	;# 
   393  018C                     	;# 
   394  018D                     	;# 
   395  018E                     	;# 
   396  0191                     	;# 
   397  0191                     	;# 
   398  0192                     	;# 
   399  0193                     	;# 
   400  0193                     	;# 
   401  0194                     	;# 
   402  0195                     	;# 
   403  0196                     	;# 
   404  0197                     	;# 
   405  0199                     	;# 
   406  019A                     	;# 
   407  019B                     	;# 
   408  019B                     	;# 
   409  019B                     	;# 
   410  019B                     	;# 
   411  019C                     	;# 
   412  019C                     	;# 
   413  019D                     	;# 
   414  019E                     	;# 
   415  019F                     	;# 
   416  020D                     	;# 
   417  0210                     	;# 
   418  0211                     	;# 
   419  0211                     	;# 
   420  0212                     	;# 
   421  0212                     	;# 
   422  0213                     	;# 
   423  0213                     	;# 
   424  0214                     	;# 
   425  0214                     	;# 
   426  0215                     	;# 
   427  0215                     	;# 
   428  0215                     	;# 
   429  0216                     	;# 
   430  0216                     	;# 
   431  0217                     	;# 
   432  0217                     	;# 
   433  0291                     	;# 
   434  0291                     	;# 
   435  0292                     	;# 
   436  0293                     	;# 
   437  0298                     	;# 
   438  0298                     	;# 
   439  0299                     	;# 
   440  029A                     	;# 
   441  0394                     	;# 
   442  0395                     	;# 
   443  0396                     	;# 
   444  0FE4                     	;# 
   445  0FE5                     	;# 
   446  0FE6                     	;# 
   447  0FE7                     	;# 
   448  0FE8                     	;# 
   449  0FE9                     	;# 
   450  0FEA                     	;# 
   451  0FEB                     	;# 
   452  0FED                     	;# 
   453  0FEE                     	;# 
   454  0FEF                     	;# 
   455  0711                     	;# 
   456  0712                     	;# 
   457  0713                     	;# 
   458  0714                     	;# 
   459  0715                     	;# 
   460  0716                     	;# 
   461  0717                     	;# 
   462  0718                     	;# 
   463  0719                     	;# 
   464  071A                     	;# 
   465  071A                     	;# 
   466  071A                     	;# 
   467  071B                     	;# 
   468  071C                     	;# 
   469  071C                     	;# 
   470  071C                     	;# 
   471  071D                     	;# 
   472  0000                     	;# 
   473  0001                     	;# 
   474  0002                     	;# 
   475  0003                     	;# 
   476  0004                     	;# 
   477  0005                     	;# 
   478  0006                     	;# 
   479  0007                     	;# 
   480  0008                     	;# 
   481  0009                     	;# 
   482  000A                     	;# 
   483  000B                     	;# 
   484  000C                     	;# 
   485  000D                     	;# 
   486  000E                     	;# 
   487  0010                     	;# 
   488  0011                     	;# 
   489  0012                     	;# 
   490  0015                     	;# 
   491  0016                     	;# 
   492  0016                     	;# 
   493  0017                     	;# 
   494  0018                     	;# 
   495  0019                     	;# 
   496  001A                     	;# 
   497  001B                     	;# 
   498  001C                     	;# 
   499  008C                     	;# 
   500  008D                     	;# 
   501  008E                     	;# 
   502  0090                     	;# 
   503  0091                     	;# 
   504  0092                     	;# 
   505  0095                     	;# 
   506  0096                     	;# 
   507  0097                     	;# 
   508  0099                     	;# 
   509  009A                     	;# 
   510  009B                     	;# 
   511  009B                     	;# 
   512  009B                     	;# 
   513  009B                     	;# 
   514  009C                     	;# 
   515  009C                     	;# 
   516  009D                     	;# 
   517  009E                     	;# 
   518  010C                     	;# 
   519  010D                     	;# 
   520  010E                     	;# 
   521  0116                     	;# 
   522  0117                     	;# 
   523  011D                     	;# 
   524  018C                     	;# 
   525  018D                     	;# 
   526  018E                     	;# 
   527  0191                     	;# 
   528  0191                     	;# 
   529  0192                     	;# 
   530  0193                     	;# 
   531  0193                     	;# 
   532  0194                     	;# 
   533  0195                     	;# 
   534  0196                     	;# 
   535  0197                     	;# 
   536  0199                     	;# 
   537  019A                     	;# 
   538  019B                     	;# 
   539  019B                     	;# 
   540  019B                     	;# 
   541  019B                     	;# 
   542  019C                     	;# 
   543  019C                     	;# 
   544  019D                     	;# 
   545  019E                     	;# 
   546  019F                     	;# 
   547  020D                     	;# 
   548  0210                     	;# 
   549  0211                     	;# 
   550  0211                     	;# 
   551  0212                     	;# 
   552  0212                     	;# 
   553  0213                     	;# 
   554  0213                     	;# 
   555  0214                     	;# 
   556  0214                     	;# 
   557  0215                     	;# 
   558  0215                     	;# 
   559  0215                     	;# 
   560  0216                     	;# 
   561  0216                     	;# 
   562  0217                     	;# 
   563  0217                     	;# 
   564  0291                     	;# 
   565  0291                     	;# 
   566  0292                     	;# 
   567  0293                     	;# 
   568  0298                     	;# 
   569  0298                     	;# 
   570  0299                     	;# 
   571  029A                     	;# 
   572  0394                     	;# 
   573  0395                     	;# 
   574  0396                     	;# 
   575  0FE4                     	;# 
   576  0FE5                     	;# 
   577  0FE6                     	;# 
   578  0FE7                     	;# 
   579  0FE8                     	;# 
   580  0FE9                     	;# 
   581  0FEA                     	;# 
   582  0FEB                     	;# 
   583  0FED                     	;# 
   584  0FEE                     	;# 
   585  0FEF                     	;# 
   586  0711                     	;# 
   587  0712                     	;# 
   588  0713                     	;# 
   589  0714                     	;# 
   590  0715                     	;# 
   591  0716                     	;# 
   592  0717                     	;# 
   593  0718                     	;# 
   594  0719                     	;# 
   595  071A                     	;# 
   596  071A                     	;# 
   597  071A                     	;# 
   598  071B                     	;# 
   599  071C                     	;# 
   600  071C                     	;# 
   601  071C                     	;# 
   602  071D                     	;# 
   603  0000                     	;# 
   604  0001                     	;# 
   605  0002                     	;# 
   606  0003                     	;# 
   607  0004                     	;# 
   608  0005                     	;# 
   609  0006                     	;# 
   610  0007                     	;# 
   611  0008                     	;# 
   612  0009                     	;# 
   613  000A                     	;# 
   614  000B                     	;# 
   615  000C                     	;# 
   616  000D                     	;# 
   617  000E                     	;# 
   618  0010                     	;# 
   619  0011                     	;# 
   620  0012                     	;# 
   621  0015                     	;# 
   622  0016                     	;# 
   623  0016                     	;# 
   624  0017                     	;# 
   625  0018                     	;# 
   626  0019                     	;# 
   627  001A                     	;# 
   628  001B                     	;# 
   629  001C                     	;# 
   630  008C                     	;# 
   631  008D                     	;# 
   632  008E                     	;# 
   633  0090                     	;# 
   634  0091                     	;# 
   635  0092                     	;# 
   636  0095                     	;# 
   637  0096                     	;# 
   638  0097                     	;# 
   639  0099                     	;# 
   640  009A                     	;# 
   641  009B                     	;# 
   642  009B                     	;# 
   643  009B                     	;# 
   644  009B                     	;# 
   645  009C                     	;# 
   646  009C                     	;# 
   647  009D                     	;# 
   648  009E                     	;# 
   649  010C                     	;# 
   650  010D                     	;# 
   651  010E                     	;# 
   652  0116                     	;# 
   653  0117                     	;# 
   654  011D                     	;# 
   655  018C                     	;# 
   656  018D                     	;# 
   657  018E                     	;# 
   658  0191                     	;# 
   659  0191                     	;# 
   660  0192                     	;# 
   661  0193                     	;# 
   662  0193                     	;# 
   663  0194                     	;# 
   664  0195                     	;# 
   665  0196                     	;# 
   666  0197                     	;# 
   667  0199                     	;# 
   668  019A                     	;# 
   669  019B                     	;# 
   670  019B                     	;# 
   671  019B                     	;# 
   672  019B                     	;# 
   673  019C                     	;# 
   674  019C                     	;# 
   675  019D                     	;# 
   676  019E                     	;# 
   677  019F                     	;# 
   678  020D                     	;# 
   679  0210                     	;# 
   680  0211                     	;# 
   681  0211                     	;# 
   682  0212                     	;# 
   683  0212                     	;# 
   684  0213                     	;# 
   685  0213                     	;# 
   686  0214                     	;# 
   687  0214                     	;# 
   688  0215                     	;# 
   689  0215                     	;# 
   690  0215                     	;# 
   691  0216                     	;# 
   692  0216                     	;# 
   693  0217                     	;# 
   694  0217                     	;# 
   695  0291                     	;# 
   696  0291                     	;# 
   697  0292                     	;# 
   698  0293                     	;# 
   699  0298                     	;# 
   700  0298                     	;# 
   701  0299                     	;# 
   702  029A                     	;# 
   703  0394                     	;# 
   704  0395                     	;# 
   705  0396                     	;# 
   706  0FE4                     	;# 
   707  0FE5                     	;# 
   708  0FE6                     	;# 
   709  0FE7                     	;# 
   710  0FE8                     	;# 
   711  0FE9                     	;# 
   712  0FEA                     	;# 
   713  0FEB                     	;# 
   714  0FED                     	;# 
   715  0FEE                     	;# 
   716  0FEF                     	;# 
   717  0711                     	;# 
   718  0712                     	;# 
   719  0713                     	;# 
   720  0714                     	;# 
   721  0715                     	;# 
   722  0716                     	;# 
   723  0717                     	;# 
   724  0718                     	;# 
   725  0719                     	;# 
   726  071A                     	;# 
   727  071A                     	;# 
   728  071A                     	;# 
   729  071B                     	;# 
   730  071C                     	;# 
   731  071C                     	;# 
   732  071C                     	;# 
   733  071D                     	;# 
   734  0000                     	;# 
   735  0001                     	;# 
   736  0002                     	;# 
   737  0003                     	;# 
   738  0004                     	;# 
   739  0005                     	;# 
   740  0006                     	;# 
   741  0007                     	;# 
   742  0008                     	;# 
   743  0009                     	;# 
   744  000A                     	;# 
   745  000B                     	;# 
   746  000C                     	;# 
   747  000D                     	;# 
   748  000E                     	;# 
   749  0010                     	;# 
   750  0011                     	;# 
   751  0012                     	;# 
   752  0015                     	;# 
   753  0016                     	;# 
   754  0016                     	;# 
   755  0017                     	;# 
   756  0018                     	;# 
   757  0019                     	;# 
   758  001A                     	;# 
   759  001B                     	;# 
   760  001C                     	;# 
   761  008C                     	;# 
   762  008D                     	;# 
   763  008E                     	;# 
   764  0090                     	;# 
   765  0091                     	;# 
   766  0092                     	;# 
   767  0095                     	;# 
   768  0096                     	;# 
   769  0097                     	;# 
   770  0099                     	;# 
   771  009A                     	;# 
   772  009B                     	;# 
   773  009B                     	;# 
   774  009B                     	;# 
   775  009B                     	;# 
   776  009C                     	;# 
   777  009C                     	;# 
   778  009D                     	;# 
   779  009E                     	;# 
   780  010C                     	;# 
   781  010D                     	;# 
   782  010E                     	;# 
   783  0116                     	;# 
   784  0117                     	;# 
   785  011D                     	;# 
   786  018C                     	;# 
   787  018D                     	;# 
   788  018E                     	;# 
   789  0191                     	;# 
   790  0191                     	;# 
   791  0192                     	;# 
   792  0193                     	;# 
   793  0193                     	;# 
   794  0194                     	;# 
   795  0195                     	;# 
   796  0196                     	;# 
   797  0197                     	;# 
   798  0199                     	;# 
   799  019A                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019B                     	;# 
   804  019C                     	;# 
   805  019C                     	;# 
   806  019D                     	;# 
   807  019E                     	;# 
   808  019F                     	;# 
   809  020D                     	;# 
   810  0210                     	;# 
   811  0211                     	;# 
   812  0211                     	;# 
   813  0212                     	;# 
   814  0212                     	;# 
   815  0213                     	;# 
   816  0213                     	;# 
   817  0214                     	;# 
   818  0214                     	;# 
   819  0215                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0216                     	;# 
   823  0216                     	;# 
   824  0217                     	;# 
   825  0217                     	;# 
   826  0291                     	;# 
   827  0291                     	;# 
   828  0292                     	;# 
   829  0293                     	;# 
   830  0298                     	;# 
   831  0298                     	;# 
   832  0299                     	;# 
   833  029A                     	;# 
   834  0394                     	;# 
   835  0395                     	;# 
   836  0396                     	;# 
   837  0FE4                     	;# 
   838  0FE5                     	;# 
   839  0FE6                     	;# 
   840  0FE7                     	;# 
   841  0FE8                     	;# 
   842  0FE9                     	;# 
   843  0FEA                     	;# 
   844  0FEB                     	;# 
   845  0FED                     	;# 
   846  0FEE                     	;# 
   847  0FEF                     	;# 
   848  0711                     	;# 
   849  0712                     	;# 
   850  0713                     	;# 
   851  0714                     	;# 
   852  0715                     	;# 
   853  0716                     	;# 
   854  0717                     	;# 
   855  0718                     	;# 
   856  0719                     	;# 
   857  071A                     	;# 
   858  071A                     	;# 
   859  071A                     	;# 
   860  071B                     	;# 
   861  071C                     	;# 
   862  071C                     	;# 
   863  071C                     	;# 
   864  071D                     	;# 
   865                           
   866                           	psect	nvBANK0
   867  0053                     __pnvBANK0:	
   868  0053                     _dab:	
   869  0053                     	ds	2
   870  0055                     _p_disp:	
   871  0055                     	ds	1
   872  000D                     _PORTBbits	set	13
   873  0011                     _PIR1bits	set	17
   874  0015                     _TMR0	set	21
   875  000B                     _INTCONbits	set	11
   876  005A                     _T0IF	set	90
   877  008B                     _SSPIF	set	139
   878  005D                     _T0IE	set	93
   879  0095                     _OPTION_REGbits	set	149
   880  008E                     _TRISCbits	set	142
   881  008D                     _TRISBbits	set	141
   882  008E                     _TRISC	set	142
   883  008D                     _TRISB	set	141
   884  008C                     _TRISA	set	140
   885  0099                     _OSCCONbits	set	153
   886  010E                     _LATCbits	set	270
   887  010E                     _LATC	set	270
   888  010C                     _LATA	set	268
   889  010D                     _LATB	set	269
   890  018E                     _ANSELC	set	398
   891  018D                     _ANSELB	set	397
   892  018C                     _ANSELA	set	396
   893  0214                     _SSPSTATbits	set	532
   894  0211                     _SSPBUF	set	529
   895  0216                     _SSPCON2bits	set	534
   896  0215                     _SSPCON1	set	533
   897  0212                     _SSPADD	set	530
   898  10B4                     _ACKEN	set	4276
   899  10B1                     _RSEN	set	4273
   900  10B2                     _PEN	set	4274
   901  10B0                     _SEN	set	4272
   902                           
   903                           ; #config settings
   904  0000                     
   905                           	psect	cinit
   906  000E                     start_initialization:	
   907  000E                     __initialization:	
   908                           
   909                           ; Clear objects allocated to BANK0
   910  000E  3020               	movlw	low __pbssBANK0
   911  000F  0084               	movwf	4
   912  0010  3000               	movlw	high __pbssBANK0
   913  0011  0085               	movwf	5
   914  0012  3025               	movlw	37
   915  0013  2532               	fcall	clear_ram0
   916  0014                     end_of_initialization:	
   917                           ;End of C runtime variable initialization code
   918                           
   919  0014                     __end_of__initialization:	
   920  0014  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   921  0015  0020               	movlb	0
   922  0016  2A33               	ljmp	_main	;jump to C main() function
   923                           
   924                           	psect	bssBANK0
   925  0020                     __pbssBANK0:	
   926  0020                     _old_btns:	
   927  0020                     	ds	5
   928  0025                     _p_btns:	
   929  0025                     	ds	5
   930  002A                     _last_save_val:	
   931  002A                     	ds	2
   932  002C                     _extended_rst_streak:	
   933  002C                     	ds	2
   934  002E                     _cur_val:	
   935  002E                     	ds	2
   936  0030                     _seg_disp_save:	
   937  0030                     	ds	2
   938  0032                     _seg_disp_sleep:	
   939  0032                     	ds	2
   940  0034                     _last_save_cat:	
   941  0034                     	ds	1
   942  0035                     _scene:	
   943  0035                     	ds	1
   944  0036                     _rst_flag:	
   945  0036                     	ds	1
   946  0037                     _cur_cat:	
   947  0037                     	ds	1
   948  0038                     _INT_FLAGS:	
   949  0038                     	ds	1
   950  0039                     _v_btns:	
   951  0039                     	ds	5
   952  003E                     _ee_seq_4:	
   953  003E                     	ds	4
   954  0042                     _v_disp:	
   955  0042                     	ds	3
   956                           
   957                           	psect	clrtext
   958  0532                     clear_ram0:	
   959                           ;	Called with FSR0 containing the base address, and
   960                           ;	WREG with the size to clear
   961                           
   962  0532  0064               	clrwdt	;clear the watchdog before getting into this loop
   963  0533                     clrloop0:	
   964  0533  0180               	clrf	0	;clear RAM location pointed to by FSR
   965  0534  3101               	addfsr 0,1
   966  0535  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   967  0536  2D33               	goto	clrloop0	;have we reached the end yet?
   968  0537  3400               	retlw	0	;all done for this memory range, return
   969                           
   970                           	psect	cstackCOMMON
   971  0070                     __pcstackCOMMON:	
   972  0070                     ?_init_oscillerator:	
   973  0070                     ??_init_oscillerator:	
   974                           ; 1 bytes @ 0x0
   975                           
   976  0070                     ?_init_ports:	
   977                           ; 1 bytes @ 0x0
   978                           
   979  0070                     ??_init_ports:	
   980                           ; 1 bytes @ 0x0
   981                           
   982  0070                     ?_init_i2c:	
   983                           ; 1 bytes @ 0x0
   984                           
   985  0070                     ??_init_i2c:	
   986                           ; 1 bytes @ 0x0
   987                           
   988  0070                     ?_init_interrupt:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  0070                     ??_init_interrupt:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  0070                     ?_res_ports:	
   995                           ; 1 bytes @ 0x0
   996                           
   997  0070                     ??_res_ports:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000  0070                     ?_set_ports:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0070                     ??_set_ports:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0070                     ?_init_interrupt_timer:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009  0070                     ??_init_interrupt_timer:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012  0070                     ?_seg_disp_47_set_val:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015  0070                     ?_init_structs:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0070                     ?_rst_storage:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021  0070                     ?_change_category:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0070                     ?_update_switches:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0070                     ?_update_int_flags:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030  0070                     ?_cat_auto_save:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033  0070                     ?_init:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036  0070                     ??_init:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039  0070                     ?_create_switch:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042  0070                     ??_create_switch:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045  0070                     ?_update_switch:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048  0070                     ?_get_switch_toggle:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051  0070                     ?_eeprom_write_16:	
  1052                           ; 1 bytes @ 0x0
  1053                           
  1054  0070                     ?_eeprom_read_16:	
  1055                           ; 1 bytes @ 0x0
  1056                           
  1057  0070                     ?_on_interrupt_timer_0:	
  1058                           ; 1 bytes @ 0x0
  1059                           
  1060  0070                     ??_on_interrupt_timer_0:	
  1061                           ; 1 bytes @ 0x0
  1062                           
  1063  0070                     ?_interruptHandler:	
  1064                           ; 1 bytes @ 0x0
  1065                           
  1066  0070                     ??_interruptHandler:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069  0070                     ?_vis_next_digit:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072  0070                     ?_create_seg_disp_47:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075  0070                     ??_create_seg_disp_47:	
  1076                           ; 1 bytes @ 0x0
  1077                           
  1078  0070                     ?_seg_disp_47_on:	
  1079                           ; 1 bytes @ 0x0
  1080                           
  1081  0070                     ??_seg_disp_47_on:	
  1082                           ; 1 bytes @ 0x0
  1083                           
  1084  0070                     ?_main:	
  1085                           ; 1 bytes @ 0x0
  1086                           
  1087  0070                     ?_seg_disp_47_get_val:	
  1088                           ; 1 bytes @ 0x0
  1089                           
  1090  0070                     ?___wmul:	
  1091                           ; 2 bytes @ 0x0
  1092                           
  1093  0070                     ?___lwdiv:	
  1094                           ; 2 bytes @ 0x0
  1095                           
  1096  0070                     update_switch@sbtn:	
  1097                           ; 2 bytes @ 0x0
  1098                           
  1099  0070                     get_switch_toggle@new_s_t:	
  1100                           ; 1 bytes @ 0x0
  1101                           
  1102  0070                     create_seg_disp_47@s_t:	
  1103                           ; 1 bytes @ 0x0
  1104                           
  1105  0070                     seg_disp_47_on@s_t:	
  1106                           ; 1 bytes @ 0x0
  1107                           
  1108  0070                     eeprom_write_16@add:	
  1109                           ; 1 bytes @ 0x0
  1110                           
  1111  0070                     eeprom_read_16@add:	
  1112                           ; 2 bytes @ 0x0
  1113                           
  1114  0070                     seg_disp_47_set_val@value:	
  1115                           ; 2 bytes @ 0x0
  1116                           
  1117  0070                     ___wmul@multiplier:	
  1118                           ; 2 bytes @ 0x0
  1119                           
  1120  0070                     ___lwdiv@divisor:	
  1121                           ; 2 bytes @ 0x0
  1122                           
  1123                           
  1124                           ; 2 bytes @ 0x0
  1125  0070                     	ds	1
  1126  0071                     ??_get_switch_toggle:	
  1127  0071                     create_switch@s_t:	
  1128                           ; 1 bytes @ 0x1
  1129                           
  1130  0071                     update_switch@streak:	
  1131                           ; 1 bytes @ 0x1
  1132                           
  1133                           
  1134                           ; 4 bytes @ 0x1
  1135  0071                     	ds	1
  1136  0072                     ??_seg_disp_47_get_val:	
  1137  0072                     ??_seg_disp_47_set_val:	
  1138                           ; 1 bytes @ 0x2
  1139                           
  1140  0072                     ??_init_structs:	
  1141                           ; 1 bytes @ 0x2
  1142                           
  1143  0072                     ??_eeprom_read_16:	
  1144                           ; 1 bytes @ 0x2
  1145                           
  1146  0072                     get_switch_toggle@old_s_t:	
  1147                           ; 1 bytes @ 0x2
  1148                           
  1149  0072                     eeprom_write_16@eeData:	
  1150                           ; 1 bytes @ 0x2
  1151                           
  1152  0072                     ___wmul@multiplicand:	
  1153                           ; 1 bytes @ 0x2
  1154                           
  1155  0072                     ___lwdiv@dividend:	
  1156                           ; 2 bytes @ 0x2
  1157                           
  1158                           
  1159                           ; 2 bytes @ 0x2
  1160  0072                     	ds	1
  1161  0073                     ??_eeprom_write_16:	
  1162  0073                     get_switch_toggle@val:	
  1163                           ; 1 bytes @ 0x3
  1164                           
  1165  0073                     eeprom_read_16@addHigh:	
  1166                           ; 1 bytes @ 0x3
  1167                           
  1168                           
  1169                           ; 1 bytes @ 0x3
  1170  0073                     	ds	1
  1171  0074                     ??___wmul:	
  1172  0074                     ??___lwdiv:	
  1173                           ; 1 bytes @ 0x4
  1174                           
  1175  0074                     eeprom_write_16@slaveAdd:	
  1176                           ; 1 bytes @ 0x4
  1177                           
  1178  0074                     eeprom_read_16@addLow:	
  1179                           ; 1 bytes @ 0x4
  1180                           
  1181  0074                     seg_disp_47_set_val@s_t:	
  1182                           ; 1 bytes @ 0x4
  1183                           
  1184  0074                     ___wmul@product:	
  1185                           ; 1 bytes @ 0x4
  1186                           
  1187                           
  1188                           ; 2 bytes @ 0x4
  1189  0074                     	ds	1
  1190  0075                     ??_update_switch:	
  1191  0075                     ?_update_seg_disp_47:	
  1192                           ; 1 bytes @ 0x5
  1193                           
  1194  0075                     eeprom_write_16@addHigh:	
  1195                           ; 1 bytes @ 0x5
  1196                           
  1197  0075                     eeprom_read_16@tempData:	
  1198                           ; 1 bytes @ 0x5
  1199                           
  1200  0075                     update_seg_disp_47@cur_val:	
  1201                           ; 1 bytes @ 0x5
  1202                           
  1203  0075                     seg_disp_47_get_val@val:	
  1204                           ; 2 bytes @ 0x5
  1205                           
  1206  0075                     ___lwdiv@quotient:	
  1207                           ; 2 bytes @ 0x5
  1208                           
  1209                           
  1210                           ; 2 bytes @ 0x5
  1211  0075                     	ds	1
  1212  0076                     eeprom_write_16@addLow:	
  1213  0076                     eeprom_read_16@slaveAdd:	
  1214                           ; 1 bytes @ 0x6
  1215                           
  1216                           
  1217                           ; 1 bytes @ 0x6
  1218  0076                     	ds	1
  1219  0077                     ??_update_seg_disp_47:	
  1220  0077                     ?_set_cat_val:	
  1221                           ; 1 bytes @ 0x7
  1222                           
  1223  0077                     ?_get_cat_val:	
  1224                           ; 1 bytes @ 0x7
  1225                           
  1226  0077                     update_seg_disp_47@s_t:	
  1227                           ; 2 bytes @ 0x7
  1228                           
  1229  0077                     seg_disp_47_get_val@s_t:	
  1230                           ; 1 bytes @ 0x7
  1231                           
  1232  0077                     ___lwdiv@counter:	
  1233                           ; 1 bytes @ 0x7
  1234                           
  1235  0077                     set_cat_val@val:	
  1236                           ; 1 bytes @ 0x7
  1237                           
  1238                           
  1239                           ; 2 bytes @ 0x7
  1240  0077                     	ds	1
  1241  0078                     ?___lwmod:	
  1242  0078                     ___lwmod@divisor:	
  1243                           ; 2 bytes @ 0x8
  1244                           
  1245                           
  1246                           ; 2 bytes @ 0x8
  1247  0078                     	ds	1
  1248  0079                     ??_get_cat_val:	
  1249  0079                     ??_set_cat_val:	
  1250                           ; 1 bytes @ 0x9
  1251                           
  1252  0079                     update_switch@s_t:	
  1253                           ; 1 bytes @ 0x9
  1254                           
  1255                           
  1256                           ; 1 bytes @ 0x9
  1257  0079                     	ds	1
  1258  007A                     ??_update_switches:	
  1259  007A                     ___lwmod@dividend:	
  1260                           ; 1 bytes @ 0xA
  1261                           
  1262                           
  1263                           ; 2 bytes @ 0xA
  1264  007A                     	ds	1
  1265  007B                     ??_rst_storage:	
  1266  007B                     ??_cat_auto_save:	
  1267                           ; 1 bytes @ 0xB
  1268                           
  1269                           
  1270                           ; 1 bytes @ 0xB
  1271  007B                     	ds	1
  1272  007C                     ??_change_category:	
  1273  007C                     ??___lwmod:	
  1274                           ; 1 bytes @ 0xC
  1275                           
  1276  007C                     update_switches@i:	
  1277                           ; 1 bytes @ 0xC
  1278                           
  1279  007C                     rst_storage@i:	
  1280                           ; 1 bytes @ 0xC
  1281                           
  1282                           
  1283                           ; 1 bytes @ 0xC
  1284  007C                     	ds	1
  1285  007D                     change_category@category:	
  1286  007D                     ___lwmod@counter:	
  1287                           ; 1 bytes @ 0xD
  1288                           
  1289                           
  1290                           ; 1 bytes @ 0xD
  1291  007D                     	ds	1
  1292  007E                     ??_update_int_flags:	
  1293                           
  1294                           	psect	cstackBANK0
  1295  0045                     __pcstackBANK0:	
  1296                           ; 1 bytes @ 0xE
  1297                           
  1298  0045                     ??_vis_next_digit:	
  1299  0045                     get_cat_val@add_start:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0045                     set_cat_val@add_start:	
  1303                           ; 2 bytes @ 0x0
  1304                           
  1305                           
  1306                           ; 2 bytes @ 0x0
  1307  0045                     	ds	2
  1308  0047                     get_cat_val@category:	
  1309  0047                     set_cat_val@category:	
  1310                           ; 1 bytes @ 0x2
  1311                           
  1312                           
  1313                           ; 1 bytes @ 0x2
  1314  0047                     	ds	1
  1315  0048                     set_cat_val@i:	
  1316  0048                     vis_next_digit@val:	
  1317                           ; 1 bytes @ 0x3
  1318                           
  1319  0048                     get_cat_val@val:	
  1320                           ; 2 bytes @ 0x3
  1321                           
  1322                           
  1323                           ; 2 bytes @ 0x3
  1324  0048                     	ds	2
  1325  004A                     vis_next_digit@digit_val:	
  1326  004A                     get_cat_val@d:	
  1327                           ; 1 bytes @ 0x5
  1328                           
  1329                           
  1330                           ; 1 bytes @ 0x5
  1331  004A                     	ds	1
  1332  004B                     vis_next_digit@sLATB:	
  1333  004B                     get_cat_val@i:	
  1334                           ; 1 bytes @ 0x6
  1335                           
  1336                           
  1337                           ; 1 bytes @ 0x6
  1338  004B                     	ds	1
  1339  004C                     vis_next_digit@p:	
  1340                           
  1341                           ; 1 bytes @ 0x7
  1342  004C                     	ds	1
  1343  004D                     vis_next_digit@digit_divider:	
  1344                           
  1345                           ; 2 bytes @ 0x8
  1346  004D                     	ds	2
  1347  004F                     vis_next_digit@s_t:	
  1348                           
  1349                           ; 1 bytes @ 0xA
  1350  004F                     	ds	1
  1351  0050                     ??_main:	
  1352                           
  1353                           ; 1 bytes @ 0xB
  1354  0050                     	ds	1
  1355  0051                     main@k:	
  1356                           
  1357                           ; 1 bytes @ 0xC
  1358  0051                     	ds	1
  1359  0052                     main@f:	
  1360                           
  1361                           ; 1 bytes @ 0xD
  1362  0052                     	ds	1
  1363                           
  1364                           	psect	maintext
  1365  0233                     __pmaintext:	
  1366 ;;
  1367 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1368 ;;
  1369 ;; *************** function _main *****************
  1370 ;; Defined at:
  1371 ;;		line 51 in file "bs_1512.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  f               1   13[BANK0 ] unsigned char 
  1376 ;;  k               1   12[BANK0 ] unsigned char 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : B1F/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1
  1386 ;;      Params:         0       0       0
  1387 ;;      Locals:         0       2       0
  1388 ;;      Temps:          0       1       0
  1389 ;;      Totals:         0       3       0
  1390 ;;Total ram usage:        3 bytes
  1391 ;; Hardware stack levels required when called:    6
  1392 ;; This function calls:
  1393 ;;		_change_category
  1394 ;;		_eeprom_read_16
  1395 ;;		_eeprom_write_16
  1396 ;;		_get_cat_val
  1397 ;;		_init
  1398 ;;		_init_structs
  1399 ;;		_rst_storage
  1400 ;;		_update_int_flags
  1401 ;;		_update_seg_disp_47
  1402 ;;		_update_switches
  1403 ;; This function is called by:
  1404 ;;		Startup code after reset
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           
  1409                           ;psect for function _main
  1410  0233                     _main:	
  1411                           
  1412                           ;bs_1512.c: 52:     init();
  1413                           
  1414                           ;incstack = 0
  1415                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1416  0233  2538               	fcall	_init
  1417                           
  1418                           ;bs_1512.c: 53:     init_structs();
  1419  0234  23B3               	fcall	_init_structs
  1420                           
  1421                           ;bs_1512.c: 54:     LATCbits.LATC7 = 1;
  1422  0235  0022               	movlb	2	; select bank2
  1423  0236  178E               	bsf	14,7	;volatile
  1424                           
  1425                           ;bs_1512.c: 55:     dab = 1331;
  1426  0237  3033               	movlw	51
  1427  0238  0020               	movlb	0	; select bank0
  1428  0239  00D3               	movwf	_dab
  1429  023A  3005               	movlw	5
  1430  023B  00D4               	movwf	_dab+1
  1431                           
  1432                           ;bs_1512.c: 56:     update_seg_disp_47(p_disp, dab);
  1433  023C  0854               	movf	_dab+1,w
  1434  023D  00F6               	movwf	update_seg_disp_47@cur_val+1
  1435  023E  0853               	movf	_dab,w
  1436  023F  00F5               	movwf	update_seg_disp_47@cur_val
  1437  0240  0855               	movf	_p_disp,w
  1438  0241  2515               	fcall	_update_seg_disp_47
  1439                           
  1440                           ;bs_1512.c: 59:     if (eeprom_read_16(0xA0, 0x0001) != 0x01){
  1441  0242  3001               	movlw	1
  1442  0243  00F0               	movwf	eeprom_read_16@add
  1443  0244  3000               	movlw	0
  1444  0245  00F1               	movwf	eeprom_read_16@add+1
  1445  0246  30A0               	movlw	160
  1446  0247  21D4               	fcall	_eeprom_read_16
  1447  0248  3A01               	xorlw	1
  1448  0249  1903               	skipnz
  1449  024A  2A5D               	goto	l2369
  1450                           
  1451                           ;bs_1512.c: 60:         rst_storage();
  1452  024B  24E3               	fcall	_rst_storage
  1453                           
  1454                           ;bs_1512.c: 61:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1455  024C  300D               	movlw	13
  1456  024D  0020               	movlb	0	; select bank0
  1457  024E  00D0               	movwf	??_main
  1458  024F  30FB               	movlw	251
  1459  0250                     u2557:	
  1460  0250  0B89               	decfsz	9,f
  1461  0251  2A50               	goto	u2557
  1462  0252  0BD0               	decfsz	??_main,f
  1463  0253  2A50               	goto	u2557
  1464  0254  3200               	nop2
  1465                           
  1466                           ;bs_1512.c: 62:         eeprom_write_16(0xA0, 0x0001, 0x01);
  1467  0255  3001               	movlw	1
  1468  0256  00F0               	movwf	eeprom_write_16@add
  1469  0257  3000               	movlw	0
  1470  0258  00F1               	movwf	eeprom_write_16@add+1
  1471  0259  01F2               	clrf	eeprom_write_16@eeData
  1472  025A  0AF2               	incf	eeprom_write_16@eeData,f
  1473  025B  30A0               	movlw	160
  1474  025C  22D5               	fcall	_eeprom_write_16
  1475  025D                     l2369:	
  1476                           
  1477                           ;bs_1512.c: 66:     uint8_t k = 0; uint8_t f = 0;
  1478  025D  0020               	movlb	0	; select bank0
  1479  025E  01D1               	clrf	main@k
  1480  025F  01D2               	clrf	main@f
  1481  0260                     l2373:	
  1482                           
  1483                           ;bs_1512.c: 69:         if (f == 0) k++; if (k >= 7 && f == 0) { f = 1; cur_val = get_ca
      +                          t_val (cur_cat); change_category(cur_cat); }
  1484  0260  0020               	movlb	0	; select bank0
  1485  0261  0852               	movf	main@f,w
  1486  0262  1D03               	btfss	3,2
  1487  0263  2A68               	goto	l2377
  1488  0264  3001               	movlw	1
  1489  0265  00D0               	movwf	??_main
  1490  0266  0850               	movf	??_main,w
  1491  0267  07D1               	addwf	main@k,f
  1492  0268                     l2377:	
  1493  0268  3007               	movlw	7
  1494  0269  0251               	subwf	main@k,w
  1495  026A  1C03               	skipc
  1496  026B  2A7B               	goto	l2385
  1497  026C  0852               	movf	main@f,w
  1498  026D  1D03               	btfss	3,2
  1499  026E  2A7B               	goto	l2385
  1500  026F  01D2               	clrf	main@f
  1501  0270  0AD2               	incf	main@f,f
  1502  0271  0837               	movf	_cur_cat,w
  1503  0272  2285               	fcall	_get_cat_val
  1504  0273  0878               	movf	?_get_cat_val+1,w
  1505  0274  0020               	movlb	0	; select bank0
  1506  0275  00AF               	movwf	_cur_val+1
  1507  0276  0877               	movf	?_get_cat_val,w
  1508  0277  00AE               	movwf	_cur_val
  1509  0278  0837               	movf	_cur_cat,w
  1510  0279  24CE               	fcall	_change_category
  1511  027A  2A60               	goto	l2373
  1512  027B                     l2385:	
  1513                           
  1514                           ;bs_1512.c: 71:             update_switches();
  1515  027B  20CA               	fcall	_update_switches
  1516                           
  1517                           ;bs_1512.c: 72:             update_seg_disp_47(p_disp, dab);
  1518  027C  0020               	movlb	0	; select bank0
  1519  027D  0854               	movf	_dab+1,w
  1520  027E  00F6               	movwf	update_seg_disp_47@cur_val+1
  1521  027F  0853               	movf	_dab,w
  1522  0280  00F5               	movwf	update_seg_disp_47@cur_val
  1523  0281  0855               	movf	_p_disp,w
  1524  0282  2515               	fcall	_update_seg_disp_47
  1525                           
  1526                           ;bs_1512.c: 73:             update_int_flags();
  1527  0283  248B               	fcall	_update_int_flags
  1528  0284  2A60               	goto	l2373
  1529  0285                     __end_of_main:	
  1530                           
  1531                           	psect	text1
  1532  00CA                     __ptext1:	
  1533 ;; *************** function _update_switches *****************
  1534 ;; Defined at:
  1535 ;;		line 81 in file "bs_1512.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  i               1   12[COMMON] unsigned char 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMMON   BANK0   BANK1
  1549 ;;      Params:         0       0       0
  1550 ;;      Locals:         1       0       0
  1551 ;;      Temps:          2       0       0
  1552 ;;      Totals:         3       0       0
  1553 ;;Total ram usage:        3 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    3
  1556 ;; This function calls:
  1557 ;;		_get_switch_toggle
  1558 ;;		_update_switch
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           
  1565                           ;psect for function _update_switches
  1566  00CA                     _update_switches:	
  1567                           
  1568                           ;bs_1512.c: 83:     update_switch (p_btns[0], PORTBbits.RB4, 5);
  1569                           
  1570                           ;incstack = 0
  1571                           ; Regs used in _update_switches: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1572  00CA  3000               	movlw	0
  1573  00CB  0020               	movlb	0	; select bank0
  1574  00CC  1A0D               	btfsc	13,4	;volatile
  1575  00CD  3001               	movlw	1
  1576  00CE  00F0               	movwf	update_switch@sbtn
  1577  00CF  3000               	movlw	0
  1578  00D0  00F4               	movwf	update_switch@streak+3
  1579  00D1  3000               	movlw	0
  1580  00D2  00F3               	movwf	update_switch@streak+2
  1581  00D3  3000               	movlw	0
  1582  00D4  00F2               	movwf	update_switch@streak+1
  1583  00D5  3005               	movlw	5
  1584  00D6  00F1               	movwf	update_switch@streak
  1585  00D7  0825               	movf	_p_btns,w
  1586  00D8  2171               	fcall	_update_switch
  1587                           
  1588                           ;bs_1512.c: 84:     update_switch (p_btns[1], PORTBbits.RB5, 5);
  1589  00D9  3000               	movlw	0
  1590  00DA  0020               	movlb	0	; select bank0
  1591  00DB  1A8D               	btfsc	13,5	;volatile
  1592  00DC  3001               	movlw	1
  1593  00DD  00F0               	movwf	update_switch@sbtn
  1594  00DE  3000               	movlw	0
  1595  00DF  00F4               	movwf	update_switch@streak+3
  1596  00E0  3000               	movlw	0
  1597  00E1  00F3               	movwf	update_switch@streak+2
  1598  00E2  3000               	movlw	0
  1599  00E3  00F2               	movwf	update_switch@streak+1
  1600  00E4  3005               	movlw	5
  1601  00E5  00F1               	movwf	update_switch@streak
  1602  00E6  0826               	movf	low ((_p_btns| 0+1)),w
  1603  00E7  2171               	fcall	_update_switch
  1604                           
  1605                           ;bs_1512.c: 86:     switch (scene) {
  1606  00E8  2907               	goto	l2253
  1607  00E9                     l2241:	
  1608                           
  1609                           ;bs_1512.c: 88:             dab = 331;
  1610  00E9  304B               	movlw	75
  1611  00EA  00D3               	movwf	_dab
  1612  00EB  3001               	movlw	1
  1613  00EC  00D4               	movwf	_dab+1
  1614  00ED  2902               	goto	l546
  1615  00EE                     l533:	
  1616                           ;bs_1512.c: 91:         case 1:
  1617                           
  1618                           ;bs_1512.c: 90:             break;
  1619                           
  1620                           ;bs_1512.c: 89:             LATCbits.LATC7 = 0;
  1621                           
  1622  00EE  28FF               	goto	l545
  1623  00EF                     l534:	
  1624                           ;bs_1512.c: 94:         case 2:
  1625                           
  1626                           ;bs_1512.c: 93:             break;
  1627                           
  1628                           ;bs_1512.c: 92:             LATCbits.LATC7 = 1;
  1629                           
  1630  00EF  2902               	goto	l546
  1631  00F0                     l535:	
  1632                           ;bs_1512.c: 97:         case 3:
  1633                           
  1634                           ;bs_1512.c: 96:             break;
  1635                           
  1636                           ;bs_1512.c: 95:             LATCbits.LATC7 = 0;
  1637                           
  1638  00F0  28FF               	goto	l545
  1639  00F1                     l536:	
  1640                           ;bs_1512.c: 100:         case 4:
  1641                           
  1642                           ;bs_1512.c: 99:             break;
  1643                           
  1644                           ;bs_1512.c: 98:             LATCbits.LATC7 = 1;
  1645                           
  1646  00F1  2902               	goto	l546
  1647  00F2                     l2245:	
  1648                           ;bs_1512.c: 102:             break;
  1649                           
  1650                           ;bs_1512.c: 101:             LATCbits.LATC7 = 0;
  1651                           
  1652                           
  1653                           ;bs_1512.c: 104:             dab = 220;
  1654  00F2  30DC               	movlw	220
  1655  00F3  28F9               	goto	L1
  1656  00F4                     l538:	
  1657                           ;bs_1512.c: 106:         case 6:
  1658                           
  1659                           ;bs_1512.c: 105:             break;
  1660                           
  1661  00F4  28FF               	goto	l545
  1662  00F5                     l539:	
  1663                           ;bs_1512.c: 109:         case 7:
  1664                           
  1665                           ;bs_1512.c: 108:             break;
  1666                           
  1667                           ;bs_1512.c: 107:             LATCbits.LATC7 = 1;
  1668                           
  1669  00F5  2902               	goto	l546
  1670  00F6                     l540:	
  1671                           ;bs_1512.c: 112:         case 8:
  1672                           
  1673                           ;bs_1512.c: 111:             break;
  1674                           
  1675                           ;bs_1512.c: 110:             LATCbits.LATC7 = 0;
  1676                           
  1677  00F6  28FF               	goto	l545
  1678  00F7                     l541:	
  1679                           ;bs_1512.c: 115:         case 9:
  1680                           
  1681                           ;bs_1512.c: 114:             break;
  1682                           
  1683                           ;bs_1512.c: 113:             LATCbits.LATC7 = 1;
  1684                           
  1685  00F7  2902               	goto	l546
  1686  00F8                     l2247:	
  1687                           ;bs_1512.c: 117:             break;
  1688                           
  1689                           ;bs_1512.c: 116:             LATCbits.LATC7 = 0;
  1690                           
  1691                           
  1692                           ;bs_1512.c: 120:             dab = 21;
  1693  00F8  3015               	movlw	21
  1694  00F9                     L1:	
  1695  00F9  00D3               	movwf	_dab
  1696  00FA  3000               	movlw	0
  1697  00FB  00D4               	movwf	_dab+1
  1698                           
  1699                           ;bs_1512.c: 121:             break;
  1700  00FC  293F               	goto	l2255
  1701  00FD                     l543:	
  1702                           ;bs_1512.c: 122:         case 11:
  1703                           
  1704  00FD  28FF               	goto	l545
  1705  00FE                     l544:	
  1706                           ;bs_1512.c: 125:         case 12:
  1707                           
  1708                           ;bs_1512.c: 124:             break;
  1709                           
  1710                           ;bs_1512.c: 123:             LATCbits.LATC7 = 1;
  1711                           
  1712  00FE  2902               	goto	l546
  1713  00FF                     l545:	
  1714                           ;bs_1512.c: 128:         case 13:
  1715                           
  1716                           ;bs_1512.c: 127:             break;
  1717                           
  1718                           ;bs_1512.c: 126:             LATCbits.LATC7 = 0;
  1719                           
  1720                           
  1721                           ;bs_1512.c: 129:             LATCbits.LATC7 = 1;
  1722  00FF  0022               	movlb	2	; select bank2
  1723  0100  178E               	bsf	14,7	;volatile
  1724                           
  1725                           ;bs_1512.c: 130:             break;
  1726  0101  293F               	goto	l2255
  1727  0102                     l546:	
  1728                           ;bs_1512.c: 131:         case 14:
  1729                           
  1730                           
  1731                           ;bs_1512.c: 132:             LATCbits.LATC7 = 0;
  1732  0102  0022               	movlb	2	; select bank2
  1733  0103  138E               	bcf	14,7	;volatile
  1734                           
  1735                           ;bs_1512.c: 133:             break;
  1736  0104  293F               	goto	l2255
  1737  0105                     l2249:	
  1738                           
  1739                           ;bs_1512.c: 136:             scene = 0;
  1740  0105  01B5               	clrf	_scene
  1741                           
  1742                           ;bs_1512.c: 138:             break;
  1743  0106  293F               	goto	l2255
  1744  0107                     l2253:	
  1745  0107  0020               	movlb	0	; select bank0
  1746  0108  0835               	movf	_scene,w
  1747  0109  00FA               	movwf	??_update_switches
  1748  010A  01FB               	clrf	??_update_switches+1
  1749                           
  1750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1751                           ; Switch size 1, requested type "simple"
  1752                           ; Number of cases is 1, Range of values is 0 to 0
  1753                           ; switch strategies available:
  1754                           ; Name         Instructions Cycles
  1755                           ; simple_byte            4     3 (average)
  1756                           ; direct_byte            8     6 (fixed)
  1757                           ; jumptable            260     6 (fixed)
  1758                           ;	Chosen strategy is simple_byte
  1759  010B  087B               	movf	??_update_switches+1,w
  1760  010C  3A00               	xorlw	0	; case 0
  1761  010D  1903               	skipnz
  1762  010E  2910               	goto	l2437
  1763  010F  2905               	goto	l2249
  1764  0110                     l2437:	
  1765                           
  1766                           ; Switch size 1, requested type "simple"
  1767                           ; Number of cases is 15, Range of values is 0 to 14
  1768                           ; switch strategies available:
  1769                           ; Name         Instructions Cycles
  1770                           ; direct_byte           36     6 (fixed)
  1771                           ; simple_byte           46    24 (average)
  1772                           ; jumptable            260     6 (fixed)
  1773                           ;	Chosen strategy is simple_byte
  1774  0110  087A               	movf	??_update_switches,w
  1775  0111  3A00               	xorlw	0	; case 0
  1776  0112  1903               	skipnz
  1777  0113  28E9               	goto	l2241
  1778  0114  3A01               	xorlw	1	; case 1
  1779  0115  1903               	skipnz
  1780  0116  28EE               	goto	l533
  1781  0117  3A03               	xorlw	3	; case 2
  1782  0118  1903               	skipnz
  1783  0119  28EF               	goto	l534
  1784  011A  3A01               	xorlw	1	; case 3
  1785  011B  1903               	skipnz
  1786  011C  28F0               	goto	l535
  1787  011D  3A07               	xorlw	7	; case 4
  1788  011E  1903               	skipnz
  1789  011F  28F1               	goto	l536
  1790  0120  3A01               	xorlw	1	; case 5
  1791  0121  1903               	skipnz
  1792  0122  28F2               	goto	l2245
  1793  0123  3A03               	xorlw	3	; case 6
  1794  0124  1903               	skipnz
  1795  0125  28F4               	goto	l538
  1796  0126  3A01               	xorlw	1	; case 7
  1797  0127  1903               	skipnz
  1798  0128  28F5               	goto	l539
  1799  0129  3A0F               	xorlw	15	; case 8
  1800  012A  1903               	skipnz
  1801  012B  28F6               	goto	l540
  1802  012C  3A01               	xorlw	1	; case 9
  1803  012D  1903               	skipnz
  1804  012E  28F7               	goto	l541
  1805  012F  3A03               	xorlw	3	; case 10
  1806  0130  1903               	skipnz
  1807  0131  28F8               	goto	l2247
  1808  0132  3A01               	xorlw	1	; case 11
  1809  0133  1903               	skipnz
  1810  0134  28FD               	goto	l543
  1811  0135  3A07               	xorlw	7	; case 12
  1812  0136  1903               	skipnz
  1813  0137  28FE               	goto	l544
  1814  0138  3A01               	xorlw	1	; case 13
  1815  0139  1903               	skipnz
  1816  013A  28FF               	goto	l545
  1817  013B  3A03               	xorlw	3	; case 14
  1818  013C  1903               	skipnz
  1819  013D  2902               	goto	l546
  1820  013E  2905               	goto	l2249
  1821  013F                     l2255:	
  1822                           
  1823                           ;bs_1512.c: 141:     if (get_switch_toggle(old_btns[0], v_btns[0])){
  1824  013F  0020               	movlb	0	; select bank0
  1825  0140  0839               	movf	_v_btns,w
  1826  0141  00FA               	movwf	??_update_switches
  1827  0142  087A               	movf	??_update_switches,w
  1828  0143  00F0               	movwf	get_switch_toggle@new_s_t
  1829  0144  0820               	movf	_old_btns,w
  1830  0145  24B9               	fcall	_get_switch_toggle
  1831  0146  3A00               	xorlw	0
  1832  0147  1903               	skipnz
  1833  0148  294E               	goto	l2259
  1834                           
  1835                           ;bs_1512.c: 142:         scene ++;
  1836  0149  3001               	movlw	1
  1837  014A  00FA               	movwf	??_update_switches
  1838  014B  087A               	movf	??_update_switches,w
  1839  014C  0020               	movlb	0	; select bank0
  1840  014D  07B5               	addwf	_scene,f
  1841  014E                     l2259:	
  1842                           
  1843                           ;bs_1512.c: 145:     if (get_switch_toggle(old_btns[1], v_btns[1])){
  1844  014E  0020               	movlb	0	; select bank0
  1845  014F  083A               	movf	_v_btns+1,w
  1846  0150  00FA               	movwf	??_update_switches
  1847  0151  087A               	movf	??_update_switches,w
  1848  0152  00F0               	movwf	get_switch_toggle@new_s_t
  1849  0153  0821               	movf	_old_btns+1,w
  1850  0154  24B9               	fcall	_get_switch_toggle
  1851  0155  3A00               	xorlw	0
  1852  0156  1903               	skipnz
  1853  0157  295B               	goto	l2263
  1854                           
  1855                           ;bs_1512.c: 146:         scene --;
  1856  0158  3001               	movlw	1
  1857  0159  0020               	movlb	0	; select bank0
  1858  015A  02B5               	subwf	_scene,f
  1859  015B                     l2263:	
  1860                           
  1861                           ;bs_1512.c: 152:     for (uint8_t i = 0; i < 5; i++){
  1862  015B  01FC               	clrf	update_switches@i
  1863  015C                     l2269:	
  1864                           
  1865                           ;bs_1512.c: 153:         old_btns[i] = v_btns[i];
  1866  015C  087C               	movf	update_switches@i,w
  1867  015D  3E39               	addlw	(low (_v_btns| 0))& (0+255)
  1868  015E  0086               	movwf	6
  1869  015F  0187               	clrf	7
  1870  0160  0801               	movf	1,w
  1871  0161  00FA               	movwf	??_update_switches
  1872  0162  087C               	movf	update_switches@i,w
  1873  0163  3E20               	addlw	(low (_old_btns| 0))& (0+255)
  1874  0164  0086               	movwf	6
  1875  0165  0187               	clrf	7
  1876  0166  087A               	movf	??_update_switches,w
  1877  0167  0081               	movwf	1
  1878                           
  1879                           ;bs_1512.c: 154:     }
  1880  0168  3001               	movlw	1
  1881  0169  00FA               	movwf	??_update_switches
  1882  016A  087A               	movf	??_update_switches,w
  1883  016B  07FC               	addwf	update_switches@i,f
  1884  016C  3005               	movlw	5
  1885  016D  027C               	subwf	update_switches@i,w
  1886  016E  1803               	btfsc	3,0
  1887  016F  0008               	return
  1888  0170  295C               	goto	l2269
  1889  0171                     __end_of_update_switches:	
  1890                           
  1891                           	psect	text2
  1892  0171                     __ptext2:	
  1893 ;; *************** function _update_switch *****************
  1894 ;; Defined at:
  1895 ;;		line 20 in file "switches.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  s_t             1    wreg     PTR struct .
  1898 ;;		 -> v_btns(5), 
  1899 ;;  sbtn            1    0[COMMON] unsigned char 
  1900 ;;  streak          4    1[COMMON] unsigned long 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  s_t             1    9[COMMON] PTR struct .
  1903 ;;		 -> v_btns(5), 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1
  1913 ;;      Params:         5       0       0
  1914 ;;      Locals:         1       0       0
  1915 ;;      Temps:          4       0       0
  1916 ;;      Totals:        10       0       0
  1917 ;;Total ram usage:       10 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    2
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_update_switches
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           
  1928                           ;psect for function _update_switch
  1929  0171                     _update_switch:	
  1930                           
  1931                           ;incstack = 0
  1932                           ; Regs used in _update_switch: [wreg+fsr1l+fsr1h+status,2+status,0]
  1933                           ;update_switch@s_t stored from wreg
  1934  0171  00F9               	movwf	update_switch@s_t
  1935                           
  1936                           ;switches.c: 21:     if (sbtn == s_t->prev && sbtn != s_t->state){
  1937  0172  0879               	movf	update_switch@s_t,w
  1938  0173  0086               	movwf	6
  1939  0174  0187               	clrf	7
  1940  0175  0801               	movf	1,w
  1941  0176  3901               	andlw	1
  1942  0177  0670               	xorwf	update_switch@sbtn,w
  1943  0178  1D03               	skipz
  1944  0179  29C6               	goto	l2057
  1945  017A  0879               	movf	update_switch@s_t,w
  1946  017B  0086               	movwf	6
  1947  017C  0187               	clrf	7
  1948  017D  0C01               	rrf	1,w
  1949  017E  3901               	andlw	1
  1950  017F  0670               	xorwf	update_switch@sbtn,w
  1951  0180  1903               	skipnz
  1952  0181  29C6               	goto	l2057
  1953                           
  1954                           ;switches.c: 22:         s_t->streak ++;
  1955  0182  0879               	movf	update_switch@s_t,w
  1956  0183  0086               	movwf	6
  1957  0184  0187               	clrf	7
  1958  0185  0C01               	rrf	1,w
  1959  0186  00F5               	movwf	??_update_switch
  1960  0187  0C75               	rrf	??_update_switch,w
  1961  0188  391F               	andlw	31
  1962  0189  00F5               	movwf	??_update_switch
  1963  018A  0AF5               	incf	??_update_switch,f
  1964  018B  0DF5               	rlf	??_update_switch,f
  1965  018C  0DF5               	rlf	??_update_switch,f
  1966  018D  0801               	movf	1,w
  1967  018E  0675               	xorwf	??_update_switch,w
  1968  018F  3983               	andlw	-125
  1969  0190  0675               	xorwf	??_update_switch,w
  1970  0191  0081               	movwf	1
  1971                           
  1972                           ;switches.c: 23:         if (s_t->streak >= streak){
  1973  0192  0879               	movf	update_switch@s_t,w
  1974  0193  0086               	movwf	6
  1975  0194  0187               	clrf	7
  1976  0195  0C01               	rrf	1,w
  1977  0196  0C89               	rrf	9,f
  1978  0197  391F               	andlw	31
  1979  0198  00F5               	movwf	??_update_switch
  1980  0199  01F6               	clrf	??_update_switch+1
  1981  019A  01F7               	clrf	??_update_switch+2
  1982  019B  01F8               	clrf	??_update_switch+3
  1983  019C  0874               	movf	update_switch@streak+3,w
  1984  019D  0278               	subwf	??_update_switch+3,w
  1985  019E  1D03               	skipz
  1986  019F  29AA               	goto	u2035
  1987  01A0  0873               	movf	update_switch@streak+2,w
  1988  01A1  0277               	subwf	??_update_switch+2,w
  1989  01A2  1D03               	skipz
  1990  01A3  29AA               	goto	u2035
  1991  01A4  0872               	movf	update_switch@streak+1,w
  1992  01A5  0276               	subwf	??_update_switch+1,w
  1993  01A6  1D03               	skipz
  1994  01A7  29AA               	goto	u2035
  1995  01A8  0871               	movf	update_switch@streak,w
  1996  01A9  0275               	subwf	??_update_switch,w
  1997  01AA                     u2035:	
  1998  01AA  1C03               	skipc
  1999  01AB  0008               	return
  2000                           
  2001                           ;switches.c: 24:             s_t->state = sbtn;
  2002  01AC  0879               	movf	update_switch@s_t,w
  2003  01AD  0086               	movwf	6
  2004  01AE  0187               	clrf	7
  2005  01AF  0870               	movf	update_switch@sbtn,w
  2006  01B0  3901               	andlw	1
  2007  01B1  1081               	bcf	1,1
  2008  01B2  1D03               	skipz
  2009  01B3  1481               	bsf	1,1
  2010                           
  2011                           ;switches.c: 25:             s_t->status = !sbtn;
  2012  01B4  0870               	movf	update_switch@sbtn,w
  2013  01B5  1D03               	btfss	3,2
  2014  01B6  29B9               	goto	u2040
  2015  01B7  3001               	movlw	1
  2016  01B8  29BA               	goto	u2050
  2017  01B9                     u2040:	
  2018  01B9  3000               	movlw	0
  2019  01BA                     u2050:	
  2020  01BA  00F5               	movwf	??_update_switch
  2021  01BB  0879               	movf	update_switch@s_t,w
  2022  01BC  0086               	movwf	6
  2023  01BD  0187               	clrf	7
  2024  01BE  0CF5               	rrf	??_update_switch,f
  2025  01BF  0CF5               	rrf	??_update_switch,f
  2026  01C0  0801               	movf	1,w
  2027  01C1  0675               	xorwf	??_update_switch,w
  2028  01C2  397F               	andlw	-129
  2029  01C3  0675               	xorwf	??_update_switch,w
  2030  01C4  0081               	movwf	1
  2031  01C5  0008               	return
  2032  01C6                     l2057:	
  2033                           
  2034                           ;switches.c: 29:         s_t->prev = sbtn;
  2035  01C6  0879               	movf	update_switch@s_t,w
  2036  01C7  0086               	movwf	6
  2037  01C8  0187               	clrf	7
  2038  01C9  0870               	movf	update_switch@sbtn,w
  2039  01CA  3901               	andlw	1
  2040  01CB  1001               	bcf	1,0
  2041  01CC  1D03               	skipz
  2042  01CD  1401               	bsf	1,0
  2043                           
  2044                           ;switches.c: 30:         s_t->streak = 0;
  2045  01CE  0879               	movf	update_switch@s_t,w
  2046  01CF  0086               	movwf	6
  2047  01D0  0187               	clrf	7
  2048  01D1  3083               	movlw	-125
  2049  01D2  0581               	andwf	1,f
  2050  01D3  0008               	return
  2051  01D4                     __end_of_update_switch:	
  2052                           
  2053                           	psect	text3
  2054  04B9                     __ptext3:	
  2055 ;; *************** function _get_switch_toggle *****************
  2056 ;; Defined at:
  2057 ;;		line 51 in file "switches.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  old_s_t         1    wreg     struct .
  2060 ;;  new_s_t         1    0[COMMON] struct .
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  old_s_t         1    2[COMMON] struct .
  2063 ;;  val             1    3[COMMON] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      unsigned char 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1
  2073 ;;      Params:         1       0       0
  2074 ;;      Locals:         2       0       0
  2075 ;;      Temps:          1       0       0
  2076 ;;      Totals:         4       0       0
  2077 ;;Total ram usage:        4 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    2
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_update_switches
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           
  2088                           ;psect for function _get_switch_toggle
  2089  04B9                     _get_switch_toggle:	
  2090                           
  2091                           ;incstack = 0
  2092                           ; Regs used in _get_switch_toggle: [wreg+status,2]
  2093                           ;get_switch_toggle@old_s_t stored from wreg
  2094  04B9  00F2               	movwf	get_switch_toggle@old_s_t
  2095                           
  2096                           ;switches.c: 52:     uint8_t val = 0;
  2097  04BA  01F3               	clrf	get_switch_toggle@val
  2098                           
  2099                           ;switches.c: 53:     if (old_s_t.status != new_s_t.status && new_s_t.status == 1) val = 
      +                          1;
  2100  04BB  1FF0               	btfss	get_switch_toggle@new_s_t,7
  2101  04BC  2CBF               	goto	u2060
  2102  04BD  3001               	movlw	1
  2103  04BE  2CC0               	goto	u2062
  2104  04BF                     u2060:	
  2105  04BF  3000               	movlw	0
  2106  04C0                     u2062:	
  2107  04C0  00F1               	movwf	??_get_switch_toggle
  2108  04C1  1FF2               	btfss	get_switch_toggle@old_s_t,7
  2109  04C2  2CC5               	goto	u2070
  2110  04C3  3001               	movlw	1
  2111  04C4  2CC6               	goto	u2072
  2112  04C5                     u2070:	
  2113  04C5  3000               	movlw	0
  2114  04C6                     u2072:	
  2115  04C6  0671               	xorwf	??_get_switch_toggle,w
  2116  04C7  1D03               	btfss	3,2
  2117  04C8  1FF0               	btfss	get_switch_toggle@new_s_t,7
  2118  04C9  2CCC               	goto	l2069
  2119  04CA  01F3               	clrf	get_switch_toggle@val
  2120  04CB  0AF3               	incf	get_switch_toggle@val,f
  2121  04CC                     l2069:	
  2122                           
  2123                           ;switches.c: 54:     return val;
  2124  04CC  0873               	movf	get_switch_toggle@val,w
  2125  04CD  0008               	return
  2126  04CE                     __end_of_get_switch_toggle:	
  2127                           
  2128                           	psect	text4
  2129  0515                     __ptext4:	
  2130 ;; *************** function _update_seg_disp_47 *****************
  2131 ;; Defined at:
  2132 ;;		line 141 in file "segmentdisplay47.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  s_t             1    wreg     PTR struct .
  2135 ;;		 -> v_disp(3), NULL(0), 
  2136 ;;  cur_val         2    5[COMMON] unsigned short 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  s_t             1    7[COMMON] PTR struct .
  2139 ;;		 -> v_disp(3), NULL(0), 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMMON   BANK0   BANK1
  2149 ;;      Params:         2       0       0
  2150 ;;      Locals:         1       0       0
  2151 ;;      Temps:          0       0       0
  2152 ;;      Totals:         3       0       0
  2153 ;;Total ram usage:        3 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    3
  2156 ;; This function calls:
  2157 ;;		_seg_disp_47_set_val
  2158 ;; This function is called by:
  2159 ;;		_main
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           
  2164                           ;psect for function _update_seg_disp_47
  2165  0515                     _update_seg_disp_47:	
  2166                           
  2167                           ;incstack = 0
  2168                           ; Regs used in _update_seg_disp_47: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2169                           ;update_seg_disp_47@s_t stored from wreg
  2170  0515  00F7               	movwf	update_seg_disp_47@s_t
  2171                           
  2172                           ;segmentdisplay47.c: 142:     seg_disp_47_set_val (s_t, cur_val);
  2173  0516  0876               	movf	update_seg_disp_47@cur_val+1,w
  2174  0517  00F1               	movwf	seg_disp_47_set_val@value+1
  2175  0518  0875               	movf	update_seg_disp_47@cur_val,w
  2176  0519  00F0               	movwf	seg_disp_47_set_val@value
  2177  051A  0877               	movf	update_seg_disp_47@s_t,w
  2178  051B  2472               	fcall	_seg_disp_47_set_val
  2179  051C  0008               	return
  2180  051D                     __end_of_update_seg_disp_47:	
  2181                           
  2182                           	psect	text5
  2183  0472                     __ptext5:	
  2184 ;; *************** function _seg_disp_47_set_val *****************
  2185 ;; Defined at:
  2186 ;;		line 152 in file "segmentdisplay47.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  s_t             1    wreg     PTR struct .
  2189 ;;		 -> v_disp(3), NULL(0), 
  2190 ;;  value           2    0[COMMON] unsigned short 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  s_t             1    4[COMMON] PTR struct .
  2193 ;;		 -> v_disp(3), NULL(0), 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1
  2203 ;;      Params:         2       0       0
  2204 ;;      Locals:         1       0       0
  2205 ;;      Temps:          2       0       0
  2206 ;;      Totals:         5       0       0
  2207 ;;Total ram usage:        5 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    2
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_update_seg_disp_47
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           
  2218                           ;psect for function _seg_disp_47_set_val
  2219  0472                     _seg_disp_47_set_val:	
  2220                           
  2221                           ;incstack = 0
  2222                           ; Regs used in _seg_disp_47_set_val: [wreg+fsr1l+fsr1h+status,2+status,0]
  2223                           ;seg_disp_47_set_val@s_t stored from wreg
  2224  0472  00F4               	movwf	seg_disp_47_set_val@s_t
  2225                           
  2226                           ;segmentdisplay47.c: 153:     s_t->value_lo = value;
  2227  0473  0870               	movf	seg_disp_47_set_val@value,w
  2228  0474  00F2               	movwf	??_seg_disp_47_set_val
  2229  0475  0A74               	incf	seg_disp_47_set_val@s_t,w
  2230  0476  0086               	movwf	6
  2231  0477  0187               	clrf	7
  2232  0478  0872               	movf	??_seg_disp_47_set_val,w
  2233  0479  0081               	movwf	1
  2234                           
  2235                           ;segmentdisplay47.c: 154:     s_t->value_hi = value >> 8;
  2236  047A  0871               	movf	seg_disp_47_set_val@value+1,w
  2237  047B  00F3               	movwf	??_seg_disp_47_set_val+1
  2238  047C  0870               	movf	seg_disp_47_set_val@value,w
  2239  047D  00F2               	movwf	??_seg_disp_47_set_val
  2240  047E  0873               	movf	??_seg_disp_47_set_val+1,w
  2241  047F  00F2               	movwf	??_seg_disp_47_set_val
  2242  0480  01F3               	clrf	??_seg_disp_47_set_val+1
  2243  0481  0874               	movf	seg_disp_47_set_val@s_t,w
  2244  0482  3E02               	addlw	2
  2245  0483  0086               	movwf	6
  2246  0484  0187               	clrf	7
  2247  0485  0801               	movf	1,w
  2248  0486  0672               	xorwf	??_seg_disp_47_set_val,w
  2249  0487  39C0               	andlw	-64
  2250  0488  0672               	xorwf	??_seg_disp_47_set_val,w
  2251  0489  0081               	movwf	1
  2252  048A  0008               	return
  2253  048B                     __end_of_seg_disp_47_set_val:	
  2254                           
  2255                           	psect	text6
  2256  048B                     __ptext6:	
  2257 ;; *************** function _update_int_flags *****************
  2258 ;; Defined at:
  2259 ;;		line 157 in file "bs_1512.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1
  2273 ;;      Params:         0       0       0
  2274 ;;      Locals:         0       0       0
  2275 ;;      Temps:          0       0       0
  2276 ;;      Totals:         0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    5
  2280 ;; This function calls:
  2281 ;;		_cat_auto_save
  2282 ;;		_seg_disp_47_on
  2283 ;;		_vis_next_digit
  2284 ;; This function is called by:
  2285 ;;		_main
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           
  2290                           ;psect for function _update_int_flags
  2291  048B                     _update_int_flags:	
  2292                           
  2293                           ;bs_1512.c: 160:     if (INT_FLAGS.seg_disp_sleep){
  2294                           
  2295                           ;incstack = 0
  2296                           ; Regs used in _update_int_flags: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2297  048B  0020               	movlb	0	; select bank0
  2298  048C  1838               	btfsc	_INT_FLAGS,0	;volatile
  2299                           
  2300                           ;bs_1512.c: 162:         INT_FLAGS.seg_disp_sleep = 0;
  2301  048D  1038               	bcf	_INT_FLAGS,0	;volatile
  2302                           
  2303                           ;bs_1512.c: 165:     if (INT_FLAGS.seg_disp_awake && v_disp.status == 0){
  2304                           
  2305                           ;bs_1512.c: 163:     }
  2306  048E  18B8               	btfsc	_INT_FLAGS,1	;volatile
  2307  048F  1B44               	btfsc	_v_disp+2,6
  2308  0490  2C95               	goto	l2289
  2309                           
  2310                           ;bs_1512.c: 166:         seg_disp_47_on (p_disp);
  2311  0491  0855               	movf	_p_disp,w
  2312  0492  251D               	fcall	_seg_disp_47_on
  2313                           
  2314                           ;bs_1512.c: 167:         INT_FLAGS.seg_disp_awake = 0;
  2315  0493  0020               	movlb	0	; select bank0
  2316  0494  10B8               	bcf	_INT_FLAGS,1	;volatile
  2317  0495                     l2289:	
  2318                           
  2319                           ;bs_1512.c: 170:     if (INT_FLAGS.seg_disp_vis){
  2320  0495  1D38               	btfss	_INT_FLAGS,2	;volatile
  2321  0496  2C9B               	goto	l2295
  2322                           
  2323                           ;bs_1512.c: 171:         vis_next_digit (p_disp);
  2324  0497  0855               	movf	_p_disp,w
  2325  0498  2017               	fcall	_vis_next_digit
  2326                           
  2327                           ;bs_1512.c: 172:         INT_FLAGS.seg_disp_vis = 0;
  2328  0499  0020               	movlb	0	; select bank0
  2329  049A  1138               	bcf	_INT_FLAGS,2	;volatile
  2330  049B                     l2295:	
  2331                           
  2332                           ;bs_1512.c: 175:     if (INT_FLAGS.seg_disp_save && v_disp.status == 1){
  2333  049B  1DB8               	btfss	_INT_FLAGS,3	;volatile
  2334  049C  0008               	return
  2335  049D  1F44               	btfss	_v_disp+2,6
  2336  049E  0008               	return
  2337                           
  2338                           ;bs_1512.c: 176:         cat_auto_save();
  2339  049F  243B               	fcall	_cat_auto_save
  2340                           
  2341                           ;bs_1512.c: 177:         INT_FLAGS.seg_disp_save = 0;
  2342  04A0  0020               	movlb	0	; select bank0
  2343  04A1  11B8               	bcf	_INT_FLAGS,3	;volatile
  2344  04A2  0008               	return
  2345  04A3                     __end_of_update_int_flags:	
  2346                           
  2347                           	psect	text7
  2348  0017                     __ptext7:	
  2349 ;; *************** function _vis_next_digit *****************
  2350 ;; Defined at:
  2351 ;;		line 73 in file "segmentdisplay47.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  s_t             1    wreg     PTR struct .
  2354 ;;		 -> v_disp(3), NULL(0), 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  s_t             1   10[BANK0 ] PTR struct .
  2357 ;;		 -> v_disp(3), NULL(0), 
  2358 ;;  p               1    7[BANK0 ] unsigned char 
  2359 ;;  digit_divide    2    8[BANK0 ] unsigned short 
  2360 ;;  val             2    3[BANK0 ] unsigned short 
  2361 ;;  sLATB           1    6[BANK0 ] unsigned char 
  2362 ;;  digit_val       1    5[BANK0 ] unsigned char 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      void 
  2365 ;; Registers used:
  2366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMMON   BANK0   BANK1
  2372 ;;      Params:         0       0       0
  2373 ;;      Locals:         0       8       0
  2374 ;;      Temps:          0       3       0
  2375 ;;      Totals:         0      11       0
  2376 ;;Total ram usage:       11 bytes
  2377 ;; Hardware stack levels used:    1
  2378 ;; Hardware stack levels required when called:    3
  2379 ;; This function calls:
  2380 ;;		___lwdiv
  2381 ;;		___lwmod
  2382 ;;		___wmul
  2383 ;;		_seg_disp_47_get_val
  2384 ;; This function is called by:
  2385 ;;		_update_int_flags
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           
  2390                           ;psect for function _vis_next_digit
  2391  0017                     _vis_next_digit:	
  2392                           
  2393                           ;incstack = 0
  2394                           ; Regs used in _vis_next_digit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2395                           ;vis_next_digit@s_t stored from wreg
  2396  0017  0020               	movlb	0	; select bank0
  2397  0018  00CF               	movwf	vis_next_digit@s_t
  2398                           
  2399                           ;segmentdisplay47.c: 75:     if (!s_t->status){
  2400  0019  084F               	movf	vis_next_digit@s_t,w
  2401  001A  3E02               	addlw	2
  2402  001B  0086               	movwf	6
  2403  001C  0187               	clrf	7
  2404  001D  1F01               	btfss	1,6
  2405  001E  0008               	return
  2406                           
  2407                           ;segmentdisplay47.c: 79:     uint16_t val = seg_disp_47_get_val(s_t);
  2408  001F  084F               	movf	vis_next_digit@s_t,w
  2409  0020  23DE               	fcall	_seg_disp_47_get_val
  2410  0021  0871               	movf	?_seg_disp_47_get_val+1,w
  2411  0022  0020               	movlb	0	; select bank0
  2412  0023  00C9               	movwf	vis_next_digit@val+1
  2413  0024  0870               	movf	?_seg_disp_47_get_val,w
  2414  0025  00C8               	movwf	vis_next_digit@val
  2415                           
  2416                           ;segmentdisplay47.c: 80:     uint16_t digit_divider = 1;
  2417  0026  3001               	movlw	1
  2418  0027  00CD               	movwf	vis_next_digit@digit_divider
  2419  0028  3000               	movlw	0
  2420  0029  00CE               	movwf	vis_next_digit@digit_divider+1
  2421                           
  2422                           ;segmentdisplay47.c: 81:     for (uint8_t p = 0; p < s_t->digit; p++) {
  2423  002A  01CC               	clrf	vis_next_digit@p
  2424  002B                     l2087:	
  2425  002B  084F               	movf	vis_next_digit@s_t,w
  2426  002C  0086               	movwf	6
  2427  002D  0187               	clrf	7
  2428  002E  0801               	movf	1,w
  2429  002F  3903               	andlw	3
  2430  0030  024C               	subwf	vis_next_digit@p,w
  2431  0031  1803               	btfsc	3,0
  2432  0032  2846               	goto	l2089
  2433                           
  2434                           ;segmentdisplay47.c: 82:         digit_divider *= 10;
  2435  0033  300A               	movlw	10
  2436  0034  00F0               	movwf	___wmul@multiplier
  2437  0035  3000               	movlw	0
  2438  0036  00F1               	movwf	___wmul@multiplier+1
  2439  0037  084E               	movf	vis_next_digit@digit_divider+1,w
  2440  0038  00F3               	movwf	___wmul@multiplicand+1
  2441  0039  084D               	movf	vis_next_digit@digit_divider,w
  2442  003A  00F2               	movwf	___wmul@multiplicand
  2443  003B  2457               	fcall	___wmul
  2444  003C  0871               	movf	?___wmul+1,w
  2445  003D  0020               	movlb	0	; select bank0
  2446  003E  00CE               	movwf	vis_next_digit@digit_divider+1
  2447  003F  0870               	movf	?___wmul,w
  2448  0040  00CD               	movwf	vis_next_digit@digit_divider
  2449                           
  2450                           ;segmentdisplay47.c: 83:     }
  2451  0041  3001               	movlw	1
  2452  0042  00C5               	movwf	??_vis_next_digit
  2453  0043  0845               	movf	??_vis_next_digit,w
  2454  0044  07CC               	addwf	vis_next_digit@p,f
  2455  0045  282B               	goto	l2087
  2456  0046                     l2089:	
  2457                           
  2458                           ;segmentdisplay47.c: 85:     uint8_t digit_val = ( val / digit_divider ) % 10;
  2459  0046  300A               	movlw	10
  2460  0047  00F8               	movwf	___lwmod@divisor
  2461  0048  3000               	movlw	0
  2462  0049  00F9               	movwf	___lwmod@divisor+1
  2463  004A  084E               	movf	vis_next_digit@digit_divider+1,w
  2464  004B  00F1               	movwf	___lwdiv@divisor+1
  2465  004C  084D               	movf	vis_next_digit@digit_divider,w
  2466  004D  00F0               	movwf	___lwdiv@divisor
  2467  004E  0849               	movf	vis_next_digit@val+1,w
  2468  004F  00F3               	movwf	___lwdiv@dividend+1
  2469  0050  0848               	movf	vis_next_digit@val,w
  2470  0051  00F2               	movwf	___lwdiv@dividend
  2471  0052  2353               	fcall	___lwdiv
  2472  0053  0871               	movf	?___lwdiv+1,w
  2473  0054  00FB               	movwf	___lwmod@dividend+1
  2474  0055  0870               	movf	?___lwdiv,w
  2475  0056  00FA               	movwf	___lwmod@dividend
  2476  0057  2387               	fcall	___lwmod
  2477  0058  0878               	movf	?___lwmod,w
  2478  0059  0020               	movlb	0	; select bank0
  2479  005A  00C5               	movwf	??_vis_next_digit
  2480  005B  0845               	movf	??_vis_next_digit,w
  2481  005C  00CA               	movwf	vis_next_digit@digit_val
  2482                           
  2483                           ;segmentdisplay47.c: 89:     uint8_t sLATB = (0xF0 & LATB);
  2484  005D  0022               	movlb	2	; select bank2
  2485  005E  080D               	movf	13,w	;volatile
  2486  005F  39F0               	andlw	240
  2487  0060  0020               	movlb	0	; select bank0
  2488  0061  00C5               	movwf	??_vis_next_digit
  2489  0062  0845               	movf	??_vis_next_digit,w
  2490  0063  00CB               	movwf	vis_next_digit@sLATB
  2491                           
  2492                           ;segmentdisplay47.c: 91:     LATB = sLATB| (0x08 >> (s_t->digit));
  2493  0064  084F               	movf	vis_next_digit@s_t,w
  2494  0065  0086               	movwf	6
  2495  0066  0187               	clrf	7
  2496  0067  0801               	movf	1,w
  2497  0068  3903               	andlw	3
  2498  0069  00C5               	movwf	??_vis_next_digit
  2499  006A  0AC5               	incf	??_vis_next_digit,f
  2500  006B  3008               	movlw	8
  2501  006C  00C6               	movwf	??_vis_next_digit+1
  2502  006D  3000               	movlw	0
  2503  006E  00C7               	movwf	??_vis_next_digit+2
  2504  006F  2873               	goto	u2124
  2505  0070                     u2125:	
  2506  0070  0D47               	rlf	??_vis_next_digit+2,w
  2507  0071  0CC7               	rrf	??_vis_next_digit+2,f
  2508  0072  0CC6               	rrf	??_vis_next_digit+1,f
  2509  0073                     u2124:	
  2510  0073  0BC5               	decfsz	??_vis_next_digit,f
  2511  0074  2870               	goto	u2125
  2512  0075  0020               	movlb	0	; select bank0
  2513  0076  0846               	movf	??_vis_next_digit+1,w
  2514  0077  044B               	iorwf	vis_next_digit@sLATB,w
  2515  0078  0022               	movlb	2	; select bank2
  2516  0079  008D               	movwf	13	;volatile
  2517                           
  2518                           ;segmentdisplay47.c: 94:     switch (digit_val)
  2519  007A  2893               	goto	l2119
  2520  007B                     l2095:	
  2521                           
  2522                           ;segmentdisplay47.c: 97:             LATA = 0xC0;
  2523  007B  30C0               	movlw	192
  2524  007C  2890               	goto	L11
  2525  007D                     l2097:	
  2526                           ;segmentdisplay47.c: 98:             break;
  2527                           
  2528                           
  2529                           ;segmentdisplay47.c: 100:             LATA = 0xF9;
  2530  007D  30F9               	movlw	249
  2531  007E  2890               	goto	L11
  2532  007F                     l2099:	
  2533                           ;segmentdisplay47.c: 101:             break;
  2534                           
  2535                           
  2536                           ;segmentdisplay47.c: 103:             LATA = 0xA4;
  2537  007F  30A4               	movlw	164
  2538  0080  2890               	goto	L11
  2539  0081                     l2101:	
  2540                           ;segmentdisplay47.c: 104:             break;
  2541                           
  2542                           
  2543                           ;segmentdisplay47.c: 106:             LATA = 0xB0;
  2544  0081  30B0               	movlw	176
  2545  0082  2890               	goto	L11
  2546  0083                     l2103:	
  2547                           ;segmentdisplay47.c: 107:             break;
  2548                           
  2549                           
  2550                           ;segmentdisplay47.c: 109:             LATA = 0x99;
  2551  0083  3099               	movlw	153
  2552  0084  2890               	goto	L11
  2553  0085                     l2105:	
  2554                           ;segmentdisplay47.c: 110:             break;
  2555                           
  2556                           
  2557                           ;segmentdisplay47.c: 112:             LATA = 0x92;
  2558  0085  3092               	movlw	146
  2559  0086  2890               	goto	L11
  2560  0087                     l2107:	
  2561                           ;segmentdisplay47.c: 113:             break;
  2562                           
  2563                           
  2564                           ;segmentdisplay47.c: 115:             LATA = 0x82;
  2565  0087  3082               	movlw	130
  2566  0088  2890               	goto	L11
  2567  0089                     l2109:	
  2568                           ;segmentdisplay47.c: 116:             break;
  2569                           
  2570                           
  2571                           ;segmentdisplay47.c: 118:             LATA = 0xF8;
  2572  0089  30F8               	movlw	248
  2573  008A  2890               	goto	L11
  2574  008B                     l2111:	
  2575                           ;segmentdisplay47.c: 119:             break;
  2576                           
  2577                           
  2578                           ;segmentdisplay47.c: 121:             LATA = 0x80;
  2579  008B  3080               	movlw	128
  2580  008C  2890               	goto	L11
  2581  008D                     l2113:	
  2582                           ;segmentdisplay47.c: 122:             break;
  2583                           
  2584                           
  2585                           ;segmentdisplay47.c: 124:             LATA = 0x90;
  2586  008D  3090               	movlw	144
  2587  008E  2890               	goto	L11
  2588  008F                     l2115:	
  2589                           ;segmentdisplay47.c: 125:             break;
  2590                           
  2591                           
  2592                           ;segmentdisplay47.c: 128:             LATA = 0xEF;
  2593  008F  30EF               	movlw	239
  2594  0090                     L11:	
  2595  0090  0022               	movlb	2	; select bank2
  2596  0091  008C               	movwf	12	;volatile
  2597                           
  2598                           ;segmentdisplay47.c: 129:             break;
  2599  0092  28BC               	goto	l2121
  2600  0093                     l2119:	
  2601  0093  0020               	movlb	0	; select bank0
  2602  0094  084A               	movf	vis_next_digit@digit_val,w
  2603  0095  00C5               	movwf	??_vis_next_digit
  2604  0096  01C6               	clrf	??_vis_next_digit+1
  2605                           
  2606                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2607                           ; Switch size 1, requested type "simple"
  2608                           ; Number of cases is 1, Range of values is 0 to 0
  2609                           ; switch strategies available:
  2610                           ; Name         Instructions Cycles
  2611                           ; simple_byte            4     3 (average)
  2612                           ; direct_byte            8     6 (fixed)
  2613                           ; jumptable            260     6 (fixed)
  2614                           ;	Chosen strategy is simple_byte
  2615  0097  0846               	movf	??_vis_next_digit+1,w
  2616  0098  3A00               	xorlw	0	; case 0
  2617  0099  1903               	skipnz
  2618  009A  289C               	goto	l2439
  2619  009B  288F               	goto	l2115
  2620  009C                     l2439:	
  2621                           
  2622                           ; Switch size 1, requested type "simple"
  2623                           ; Number of cases is 10, Range of values is 0 to 9
  2624                           ; switch strategies available:
  2625                           ; Name         Instructions Cycles
  2626                           ; direct_byte           26     6 (fixed)
  2627                           ; simple_byte           31    16 (average)
  2628                           ; jumptable            260     6 (fixed)
  2629                           ;	Chosen strategy is simple_byte
  2630  009C  0845               	movf	??_vis_next_digit,w
  2631  009D  3A00               	xorlw	0	; case 0
  2632  009E  1903               	skipnz
  2633  009F  287B               	goto	l2095
  2634  00A0  3A01               	xorlw	1	; case 1
  2635  00A1  1903               	skipnz
  2636  00A2  287D               	goto	l2097
  2637  00A3  3A03               	xorlw	3	; case 2
  2638  00A4  1903               	skipnz
  2639  00A5  287F               	goto	l2099
  2640  00A6  3A01               	xorlw	1	; case 3
  2641  00A7  1903               	skipnz
  2642  00A8  2881               	goto	l2101
  2643  00A9  3A07               	xorlw	7	; case 4
  2644  00AA  1903               	skipnz
  2645  00AB  2883               	goto	l2103
  2646  00AC  3A01               	xorlw	1	; case 5
  2647  00AD  1903               	skipnz
  2648  00AE  2885               	goto	l2105
  2649  00AF  3A03               	xorlw	3	; case 6
  2650  00B0  1903               	skipnz
  2651  00B1  2887               	goto	l2107
  2652  00B2  3A01               	xorlw	1	; case 7
  2653  00B3  1903               	skipnz
  2654  00B4  2889               	goto	l2109
  2655  00B5  3A0F               	xorlw	15	; case 8
  2656  00B6  1903               	skipnz
  2657  00B7  288B               	goto	l2111
  2658  00B8  3A01               	xorlw	1	; case 9
  2659  00B9  1903               	skipnz
  2660  00BA  288D               	goto	l2113
  2661  00BB  288F               	goto	l2115
  2662  00BC                     l2121:	
  2663                           
  2664                           ;segmentdisplay47.c: 132:     s_t->digit++;
  2665  00BC  0020               	movlb	0	; select bank0
  2666  00BD  084F               	movf	vis_next_digit@s_t,w
  2667  00BE  0086               	movwf	6
  2668  00BF  0187               	clrf	7
  2669  00C0  0801               	movf	1,w
  2670  00C1  3903               	andlw	3
  2671  00C2  00C5               	movwf	??_vis_next_digit
  2672  00C3  0AC5               	incf	??_vis_next_digit,f
  2673  00C4  0801               	movf	1,w
  2674  00C5  0645               	xorwf	??_vis_next_digit,w
  2675  00C6  39FC               	andlw	-4
  2676  00C7  0645               	xorwf	??_vis_next_digit,w
  2677  00C8  0081               	movwf	1
  2678  00C9  0008               	return
  2679  00CA                     __end_of_vis_next_digit:	
  2680                           
  2681                           	psect	text8
  2682  03DE                     __ptext8:	
  2683 ;; *************** function _seg_disp_47_get_val *****************
  2684 ;; Defined at:
  2685 ;;		line 146 in file "segmentdisplay47.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  s_t             1    wreg     PTR struct .
  2688 ;;		 -> v_disp(3), NULL(0), 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  s_t             1    7[COMMON] PTR struct .
  2691 ;;		 -> v_disp(3), NULL(0), 
  2692 ;;  val             2    5[COMMON] unsigned short 
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  2    0[COMMON] unsigned short 
  2695 ;; Registers used:
  2696 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0   BANK1
  2702 ;;      Params:         2       0       0
  2703 ;;      Locals:         3       0       0
  2704 ;;      Temps:          3       0       0
  2705 ;;      Totals:         8       0       0
  2706 ;;Total ram usage:        8 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    2
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_vis_next_digit
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           
  2717                           ;psect for function _seg_disp_47_get_val
  2718  03DE                     _seg_disp_47_get_val:	
  2719                           
  2720                           ;incstack = 0
  2721                           ; Regs used in _seg_disp_47_get_val: [wreg+fsr1l+fsr1h+status,2+status,0]
  2722                           ;seg_disp_47_get_val@s_t stored from wreg
  2723  03DE  00F7               	movwf	seg_disp_47_get_val@s_t
  2724                           
  2725                           ;segmentdisplay47.c: 147:     uint16_t val = 0;
  2726  03DF  01F5               	clrf	seg_disp_47_get_val@val
  2727  03E0  01F6               	clrf	seg_disp_47_get_val@val+1
  2728                           
  2729                           ;segmentdisplay47.c: 148:     val |= s_t->value_lo;
  2730  03E1  0A77               	incf	seg_disp_47_get_val@s_t,w
  2731  03E2  0086               	movwf	6
  2732  03E3  0187               	clrf	7
  2733  03E4  0801               	movf	1,w
  2734  03E5  00F2               	movwf	??_seg_disp_47_get_val
  2735  03E6  01F3               	clrf	??_seg_disp_47_get_val+1
  2736  03E7  0872               	movf	??_seg_disp_47_get_val,w
  2737  03E8  04F5               	iorwf	seg_disp_47_get_val@val,f
  2738  03E9  0873               	movf	??_seg_disp_47_get_val+1,w
  2739  03EA  04F6               	iorwf	seg_disp_47_get_val@val+1,f
  2740                           
  2741                           ;segmentdisplay47.c: 149:     val |= s_t->value_hi << 8;
  2742  03EB  0877               	movf	seg_disp_47_get_val@s_t,w
  2743  03EC  3E02               	addlw	2
  2744  03ED  0086               	movwf	6
  2745  03EE  0187               	clrf	7
  2746  03EF  0801               	movf	1,w
  2747  03F0  393F               	andlw	63
  2748  03F1  00F2               	movwf	??_seg_disp_47_get_val
  2749  03F2  01F3               	clrf	??_seg_disp_47_get_val+1
  2750  03F3  0872               	movf	??_seg_disp_47_get_val,w
  2751  03F4  00F3               	movwf	??_seg_disp_47_get_val+1
  2752  03F5  01F2               	clrf	??_seg_disp_47_get_val
  2753  03F6  0872               	movf	??_seg_disp_47_get_val,w
  2754  03F7  04F5               	iorwf	seg_disp_47_get_val@val,f
  2755  03F8  0873               	movf	??_seg_disp_47_get_val+1,w
  2756  03F9  04F6               	iorwf	seg_disp_47_get_val@val+1,f
  2757                           
  2758                           ;segmentdisplay47.c: 150:     return val;
  2759  03FA  0876               	movf	seg_disp_47_get_val@val+1,w
  2760  03FB  00F1               	movwf	?_seg_disp_47_get_val+1
  2761  03FC  0875               	movf	seg_disp_47_get_val@val,w
  2762  03FD  00F0               	movwf	?_seg_disp_47_get_val
  2763  03FE  0008               	return
  2764  03FF                     __end_of_seg_disp_47_get_val:	
  2765                           
  2766                           	psect	text9
  2767  0457                     __ptext9:	
  2768 ;; *************** function ___wmul *****************
  2769 ;; Defined at:
  2770 ;;		line 15 in file "D:\Programs\Compilers\8 bit\pic\sources\c99\common\Umul16.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  multiplier      2    0[COMMON] unsigned int 
  2773 ;;  multiplicand    2    2[COMMON] unsigned int 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  product         2    4[COMMON] unsigned int 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  2    0[COMMON] unsigned int 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1
  2785 ;;      Params:         4       0       0
  2786 ;;      Locals:         2       0       0
  2787 ;;      Temps:          0       0       0
  2788 ;;      Totals:         6       0       0
  2789 ;;Total ram usage:        6 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    2
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_vis_next_digit
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           
  2800                           ;psect for function ___wmul
  2801  0457                     ___wmul:	
  2802                           
  2803                           ;incstack = 0
  2804                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2805  0457  01F4               	clrf	___wmul@product
  2806  0458  01F5               	clrf	___wmul@product+1
  2807  0459                     l1967:	
  2808  0459  1C70               	btfss	___wmul@multiplier,0
  2809  045A  2C5F               	goto	l667
  2810  045B  0872               	movf	___wmul@multiplicand,w
  2811  045C  07F4               	addwf	___wmul@product,f
  2812  045D  0873               	movf	___wmul@multiplicand+1,w
  2813  045E  3DF5               	addwfc	___wmul@product+1,f
  2814  045F                     l667:	
  2815  045F  3001               	movlw	1
  2816  0460                     u1855:	
  2817  0460  35F2               	lslf	___wmul@multiplicand,f
  2818  0461  0DF3               	rlf	___wmul@multiplicand+1,f
  2819  0462  0B89               	decfsz	9,f
  2820  0463  2C60               	goto	u1855
  2821  0464  3001               	movlw	1
  2822  0465                     u1865:	
  2823  0465  36F1               	lsrf	___wmul@multiplier+1,f
  2824  0466  0CF0               	rrf	___wmul@multiplier,f
  2825  0467  0B89               	decfsz	9,f
  2826  0468  2C65               	goto	u1865
  2827  0469  0870               	movf	___wmul@multiplier,w
  2828  046A  0471               	iorwf	___wmul@multiplier+1,w
  2829  046B  1D03               	btfss	3,2
  2830  046C  2C59               	goto	l1967
  2831  046D  0875               	movf	___wmul@product+1,w
  2832  046E  00F1               	movwf	?___wmul+1
  2833  046F  0874               	movf	___wmul@product,w
  2834  0470  00F0               	movwf	?___wmul
  2835  0471  0008               	return
  2836  0472                     __end_of___wmul:	
  2837                           
  2838                           	psect	text10
  2839  0387                     __ptext10:	
  2840 ;; *************** function ___lwmod *****************
  2841 ;; Defined at:
  2842 ;;		line 5 in file "D:\Programs\Compilers\8 bit\pic\sources\c99\common\lwmod.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  divisor         2    8[COMMON] unsigned int 
  2845 ;;  dividend        2   10[COMMON] unsigned int 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  counter         1   13[COMMON] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  2    8[COMMON] unsigned int 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1
  2857 ;;      Params:         4       0       0
  2858 ;;      Locals:         1       0       0
  2859 ;;      Temps:          1       0       0
  2860 ;;      Totals:         6       0       0
  2861 ;;Total ram usage:        6 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    2
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_vis_next_digit
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           
  2872                           ;psect for function ___lwmod
  2873  0387                     ___lwmod:	
  2874                           
  2875                           ;incstack = 0
  2876                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2877  0387  0878               	movf	___lwmod@divisor,w
  2878  0388  0479               	iorwf	___lwmod@divisor+1,w
  2879  0389  1903               	btfsc	3,2
  2880  038A  2BAE               	goto	l2023
  2881  038B  01FD               	clrf	___lwmod@counter
  2882  038C  0AFD               	incf	___lwmod@counter,f
  2883  038D                     l2013:	
  2884  038D  1BF9               	btfsc	___lwmod@divisor+1,7
  2885  038E  2B99               	goto	l2015
  2886  038F  3001               	movlw	1
  2887  0390                     u1965:	
  2888  0390  35F8               	lslf	___lwmod@divisor,f
  2889  0391  0DF9               	rlf	___lwmod@divisor+1,f
  2890  0392  0B89               	decfsz	9,f
  2891  0393  2B90               	goto	u1965
  2892  0394  3001               	movlw	1
  2893  0395  00FC               	movwf	??___lwmod
  2894  0396  087C               	movf	??___lwmod,w
  2895  0397  07FD               	addwf	___lwmod@counter,f
  2896  0398  2B8D               	goto	l2013
  2897  0399                     l2015:	
  2898  0399  0879               	movf	___lwmod@divisor+1,w
  2899  039A  027B               	subwf	___lwmod@dividend+1,w
  2900  039B  1D03               	skipz
  2901  039C  2B9F               	goto	u1985
  2902  039D  0878               	movf	___lwmod@divisor,w
  2903  039E  027A               	subwf	___lwmod@dividend,w
  2904  039F                     u1985:	
  2905  039F  1C03               	skipc
  2906  03A0  2BA5               	goto	l2019
  2907  03A1  0878               	movf	___lwmod@divisor,w
  2908  03A2  02FA               	subwf	___lwmod@dividend,f
  2909  03A3  0879               	movf	___lwmod@divisor+1,w
  2910  03A4  3BFB               	subwfb	___lwmod@dividend+1,f
  2911  03A5                     l2019:	
  2912  03A5  3001               	movlw	1
  2913  03A6                     u1995:	
  2914  03A6  36F9               	lsrf	___lwmod@divisor+1,f
  2915  03A7  0CF8               	rrf	___lwmod@divisor,f
  2916  03A8  0B89               	decfsz	9,f
  2917  03A9  2BA6               	goto	u1995
  2918  03AA  3001               	movlw	1
  2919  03AB  02FD               	subwf	___lwmod@counter,f
  2920  03AC  1D03               	btfss	3,2
  2921  03AD  2B99               	goto	l2015
  2922  03AE                     l2023:	
  2923  03AE  087B               	movf	___lwmod@dividend+1,w
  2924  03AF  00F9               	movwf	?___lwmod+1
  2925  03B0  087A               	movf	___lwmod@dividend,w
  2926  03B1  00F8               	movwf	?___lwmod
  2927  03B2  0008               	return
  2928  03B3                     __end_of___lwmod:	
  2929                           
  2930                           	psect	text11
  2931  0353                     __ptext11:	
  2932 ;; *************** function ___lwdiv *****************
  2933 ;; Defined at:
  2934 ;;		line 5 in file "D:\Programs\Compilers\8 bit\pic\sources\c99\common\lwdiv.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  divisor         2    0[COMMON] unsigned int 
  2937 ;;  dividend        2    2[COMMON] unsigned int 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  quotient        2    5[COMMON] unsigned int 
  2940 ;;  counter         1    7[COMMON] unsigned char 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  2    0[COMMON] unsigned int 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1
  2950 ;;      Params:         4       0       0
  2951 ;;      Locals:         3       0       0
  2952 ;;      Temps:          1       0       0
  2953 ;;      Totals:         8       0       0
  2954 ;;Total ram usage:        8 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:    2
  2957 ;; This function calls:
  2958 ;;		Nothing
  2959 ;; This function is called by:
  2960 ;;		_vis_next_digit
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           
  2965                           ;psect for function ___lwdiv
  2966  0353                     ___lwdiv:	
  2967                           
  2968                           ;incstack = 0
  2969                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2970  0353  01F5               	clrf	___lwdiv@quotient
  2971  0354  01F6               	clrf	___lwdiv@quotient+1
  2972  0355  0870               	movf	___lwdiv@divisor,w
  2973  0356  0471               	iorwf	___lwdiv@divisor+1,w
  2974  0357  1903               	btfsc	3,2
  2975  0358  2B82               	goto	l2001
  2976  0359  01F7               	clrf	___lwdiv@counter
  2977  035A  0AF7               	incf	___lwdiv@counter,f
  2978  035B                     l1989:	
  2979  035B  1BF1               	btfsc	___lwdiv@divisor+1,7
  2980  035C  2B67               	goto	l1991
  2981  035D  3001               	movlw	1
  2982  035E                     u1895:	
  2983  035E  35F0               	lslf	___lwdiv@divisor,f
  2984  035F  0DF1               	rlf	___lwdiv@divisor+1,f
  2985  0360  0B89               	decfsz	9,f
  2986  0361  2B5E               	goto	u1895
  2987  0362  3001               	movlw	1
  2988  0363  00F4               	movwf	??___lwdiv
  2989  0364  0874               	movf	??___lwdiv,w
  2990  0365  07F7               	addwf	___lwdiv@counter,f
  2991  0366  2B5B               	goto	l1989
  2992  0367                     l1991:	
  2993  0367  3001               	movlw	1
  2994  0368                     u1915:	
  2995  0368  35F5               	lslf	___lwdiv@quotient,f
  2996  0369  0DF6               	rlf	___lwdiv@quotient+1,f
  2997  036A  0B89               	decfsz	9,f
  2998  036B  2B68               	goto	u1915
  2999  036C  0871               	movf	___lwdiv@divisor+1,w
  3000  036D  0273               	subwf	___lwdiv@dividend+1,w
  3001  036E  1D03               	skipz
  3002  036F  2B72               	goto	u1925
  3003  0370  0870               	movf	___lwdiv@divisor,w
  3004  0371  0272               	subwf	___lwdiv@dividend,w
  3005  0372                     u1925:	
  3006  0372  1C03               	skipc
  3007  0373  2B79               	goto	l1997
  3008  0374  0870               	movf	___lwdiv@divisor,w
  3009  0375  02F2               	subwf	___lwdiv@dividend,f
  3010  0376  0871               	movf	___lwdiv@divisor+1,w
  3011  0377  3BF3               	subwfb	___lwdiv@dividend+1,f
  3012  0378  1475               	bsf	___lwdiv@quotient,0
  3013  0379                     l1997:	
  3014  0379  3001               	movlw	1
  3015  037A                     u1935:	
  3016  037A  36F1               	lsrf	___lwdiv@divisor+1,f
  3017  037B  0CF0               	rrf	___lwdiv@divisor,f
  3018  037C  0B89               	decfsz	9,f
  3019  037D  2B7A               	goto	u1935
  3020  037E  3001               	movlw	1
  3021  037F  02F7               	subwf	___lwdiv@counter,f
  3022  0380  1D03               	btfss	3,2
  3023  0381  2B67               	goto	l1991
  3024  0382                     l2001:	
  3025  0382  0876               	movf	___lwdiv@quotient+1,w
  3026  0383  00F1               	movwf	?___lwdiv+1
  3027  0384  0875               	movf	___lwdiv@quotient,w
  3028  0385  00F0               	movwf	?___lwdiv
  3029  0386  0008               	return
  3030  0387                     __end_of___lwdiv:	
  3031                           
  3032                           	psect	text12
  3033  051D                     __ptext12:	
  3034 ;; *************** function _seg_disp_47_on *****************
  3035 ;; Defined at:
  3036 ;;		line 159 in file "segmentdisplay47.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  s_t             1    wreg     PTR struct .
  3039 ;;		 -> v_disp(3), NULL(0), 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  s_t             1    0[COMMON] PTR struct .
  3042 ;;		 -> v_disp(3), NULL(0), 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1
  3052 ;;      Params:         0       0       0
  3053 ;;      Locals:         1       0       0
  3054 ;;      Temps:          0       0       0
  3055 ;;      Totals:         1       0       0
  3056 ;;Total ram usage:        1 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    2
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_update_int_flags
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           
  3067                           ;psect for function _seg_disp_47_on
  3068  051D                     _seg_disp_47_on:	
  3069                           
  3070                           ;incstack = 0
  3071                           ; Regs used in _seg_disp_47_on: [wreg+fsr1l+fsr1h+status,2+status,0]
  3072                           ;seg_disp_47_on@s_t stored from wreg
  3073  051D  00F0               	movwf	seg_disp_47_on@s_t
  3074  051E  0870               	movf	seg_disp_47_on@s_t,w
  3075  051F  3E02               	addlw	2
  3076  0520  0086               	movwf	6
  3077  0521  0187               	clrf	7
  3078  0522  1701               	bsf	1,6
  3079  0523  0008               	return
  3080  0524                     __end_of_seg_disp_47_on:	
  3081                           
  3082                           	psect	text13
  3083  043B                     __ptext13:	
  3084 ;; *************** function _cat_auto_save *****************
  3085 ;; Defined at:
  3086 ;;		line 214 in file "bs_1512.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0, pclath, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1
  3100 ;;      Params:         0       0       0
  3101 ;;      Locals:         0       0       0
  3102 ;;      Temps:          1       0       0
  3103 ;;      Totals:         1       0       0
  3104 ;;Total ram usage:        1 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    4
  3107 ;; This function calls:
  3108 ;;		_set_cat_val
  3109 ;; This function is called by:
  3110 ;;		_update_int_flags
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           
  3115                           ;psect for function _cat_auto_save
  3116  043B                     _cat_auto_save:	
  3117                           
  3118                           ;bs_1512.c: 215:     if (last_save_cat == cur_cat && last_save_val == cur_val) return;
  3119                           
  3120                           ;incstack = 0
  3121                           ; Regs used in _cat_auto_save: [wreg+status,2+status,0+pclath+cstack]
  3122  043B  0020               	movlb	0	; select bank0
  3123  043C  0834               	movf	_last_save_cat,w
  3124  043D  0637               	xorwf	_cur_cat,w
  3125  043E  1D03               	skipz
  3126  043F  2C48               	goto	l2177
  3127  0440  082F               	movf	_cur_val+1,w
  3128  0441  062B               	xorwf	_last_save_val+1,w
  3129  0442  1D03               	skipz
  3130  0443  2C46               	goto	u2185
  3131  0444  082E               	movf	_cur_val,w
  3132  0445  062A               	xorwf	_last_save_val,w
  3133  0446                     u2185:	
  3134  0446  1903               	btfsc	3,2
  3135  0447  0008               	return
  3136  0448                     l2177:	
  3137                           
  3138                           ;bs_1512.c: 216:     last_save_cat = cur_cat; last_save_val = cur_val;
  3139  0448  0837               	movf	_cur_cat,w
  3140  0449  00FB               	movwf	??_cat_auto_save
  3141  044A  087B               	movf	??_cat_auto_save,w
  3142  044B  00B4               	movwf	_last_save_cat
  3143  044C  082F               	movf	_cur_val+1,w
  3144  044D  00AB               	movwf	_last_save_val+1
  3145  044E  082E               	movf	_cur_val,w
  3146  044F  00AA               	movwf	_last_save_val
  3147                           
  3148                           ;bs_1512.c: 217:     set_cat_val (cur_cat, cur_val);
  3149  0450  082F               	movf	_cur_val+1,w
  3150  0451  00F8               	movwf	set_cat_val@val+1
  3151  0452  082E               	movf	_cur_val,w
  3152  0453  00F7               	movwf	set_cat_val@val
  3153  0454  0837               	movf	_cur_cat,w
  3154  0455  2317               	fcall	_set_cat_val
  3155  0456  0008               	return
  3156  0457                     __end_of_cat_auto_save:	
  3157                           
  3158                           	psect	text14
  3159  04E3                     __ptext14:	
  3160 ;; *************** function _rst_storage *****************
  3161 ;; Defined at:
  3162 ;;		line 234 in file "bs_1512.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  i               1   12[COMMON] unsigned char 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0, pclath, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMMON   BANK0   BANK1
  3176 ;;      Params:         0       0       0
  3177 ;;      Locals:         1       0       0
  3178 ;;      Temps:          1       0       0
  3179 ;;      Totals:         2       0       0
  3180 ;;Total ram usage:        2 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; Hardware stack levels required when called:    4
  3183 ;; This function calls:
  3184 ;;		_set_cat_val
  3185 ;; This function is called by:
  3186 ;;		_main
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           
  3191                           ;psect for function _rst_storage
  3192  04E3                     _rst_storage:	
  3193                           
  3194                           ;bs_1512.c: 235:     for (uint8_t i = 0; i < 2; i++){
  3195                           
  3196                           ;incstack = 0
  3197                           ; Regs used in _rst_storage: [wreg+status,2+status,0+pclath+cstack]
  3198  04E3  01FC               	clrf	rst_storage@i
  3199  04E4                     l2227:	
  3200                           
  3201                           ;bs_1512.c: 236:         set_cat_val(i, 0x12);
  3202  04E4  3012               	movlw	18
  3203  04E5  00F7               	movwf	set_cat_val@val
  3204  04E6  3000               	movlw	0
  3205  04E7  00F8               	movwf	set_cat_val@val+1
  3206  04E8  087C               	movf	rst_storage@i,w
  3207  04E9  2317               	fcall	_set_cat_val
  3208                           
  3209                           ;bs_1512.c: 237:     }
  3210  04EA  3001               	movlw	1
  3211  04EB  00FB               	movwf	??_rst_storage
  3212  04EC  087B               	movf	??_rst_storage,w
  3213  04ED  07FC               	addwf	rst_storage@i,f
  3214  04EE  3002               	movlw	2
  3215  04EF  027C               	subwf	rst_storage@i,w
  3216  04F0  1803               	btfsc	3,0
  3217  04F1  0008               	return
  3218  04F2  2CE4               	goto	l2227
  3219  04F3                     __end_of_rst_storage:	
  3220                           
  3221                           	psect	text15
  3222  03B3                     __ptext15:	
  3223 ;; *************** function _init_structs *****************
  3224 ;; Defined at:
  3225 ;;		line 241 in file "bs_1512.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;		None
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMMON   BANK0   BANK1
  3239 ;;      Params:         0       0       0
  3240 ;;      Locals:         0       0       0
  3241 ;;      Temps:          1       0       0
  3242 ;;      Totals:         1       0       0
  3243 ;;Total ram usage:        1 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    3
  3246 ;; This function calls:
  3247 ;;		_create_seg_disp_47
  3248 ;;		_create_switch
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           
  3255                           ;psect for function _init_structs
  3256  03B3                     _init_structs:	
  3257                           
  3258                           ;bs_1512.c: 244:     p_btns[0] = &v_btns[0];
  3259                           
  3260                           ;incstack = 0
  3261                           ; Regs used in _init_structs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3262  03B3  3039               	movlw	(low (_v_btns| 0))& (0+255)
  3263  03B4  00F2               	movwf	??_init_structs
  3264  03B5  0872               	movf	??_init_structs,w
  3265  03B6  0020               	movlb	0	; select bank0
  3266  03B7  00A5               	movwf	_p_btns
  3267                           
  3268                           ;bs_1512.c: 245:     p_btns[1] = &v_btns[1];
  3269  03B8  303A               	movlw	(low ((_v_btns| 0+1)))& (0+255)
  3270  03B9  00F2               	movwf	??_init_structs
  3271  03BA  0872               	movf	??_init_structs,w
  3272  03BB  00A6               	movwf	low ((_p_btns| 0+1))
  3273                           
  3274                           ;bs_1512.c: 246:     p_btns[2] = &v_btns[2];
  3275  03BC  303B               	movlw	(low ((_v_btns| 0+2)))& (0+255)
  3276  03BD  00F2               	movwf	??_init_structs
  3277  03BE  0872               	movf	??_init_structs,w
  3278  03BF  00A7               	movwf	low ((_p_btns| 0+2))
  3279                           
  3280                           ;bs_1512.c: 247:     p_btns[3] = &v_btns[3];
  3281  03C0  303C               	movlw	(low ((_v_btns| 0+3)))& (0+255)
  3282  03C1  00F2               	movwf	??_init_structs
  3283  03C2  0872               	movf	??_init_structs,w
  3284  03C3  00A8               	movwf	low ((_p_btns| 0+3))
  3285                           
  3286                           ;bs_1512.c: 248:     p_btns[4] = &v_btns[4];
  3287  03C4  303D               	movlw	(low ((_v_btns| 0+4)))& (0+255)
  3288  03C5  00F2               	movwf	??_init_structs
  3289  03C6  0872               	movf	??_init_structs,w
  3290  03C7  00A9               	movwf	low ((_p_btns| 0+4))
  3291                           
  3292                           ;bs_1512.c: 250:     create_switch(p_btns[0]);
  3293  03C8  0825               	movf	_p_btns,w
  3294  03C9  241E               	fcall	_create_switch
  3295                           
  3296                           ;bs_1512.c: 251:     create_switch(p_btns[1]);
  3297  03CA  0020               	movlb	0	; select bank0
  3298  03CB  0826               	movf	low ((_p_btns| 0+1)),w
  3299  03CC  241E               	fcall	_create_switch
  3300                           
  3301                           ;bs_1512.c: 252:     create_switch(p_btns[2]);
  3302  03CD  0020               	movlb	0	; select bank0
  3303  03CE  0827               	movf	low ((_p_btns| 0+2)),w
  3304  03CF  241E               	fcall	_create_switch
  3305                           
  3306                           ;bs_1512.c: 253:     create_switch(p_btns[3]);
  3307  03D0  0020               	movlb	0	; select bank0
  3308  03D1  0828               	movf	low ((_p_btns| 0+3)),w
  3309  03D2  241E               	fcall	_create_switch
  3310                           
  3311                           ;bs_1512.c: 254:     create_switch(p_btns[4]);
  3312  03D3  0020               	movlb	0	; select bank0
  3313  03D4  0829               	movf	low ((_p_btns| 0+4)),w
  3314  03D5  241E               	fcall	_create_switch
  3315                           
  3316                           ;bs_1512.c: 257:     p_disp = &v_disp;
  3317  03D6  3042               	movlw	(low (_v_disp| 0))& (0+255)
  3318  03D7  00F2               	movwf	??_init_structs
  3319  03D8  0872               	movf	??_init_structs,w
  3320  03D9  0020               	movlb	0	; select bank0
  3321  03DA  00D5               	movwf	_p_disp
  3322                           
  3323                           ;bs_1512.c: 258:     create_seg_disp_47 (p_disp);
  3324  03DB  0855               	movf	_p_disp,w
  3325  03DC  24A3               	fcall	_create_seg_disp_47
  3326  03DD  0008               	return
  3327  03DE                     __end_of_init_structs:	
  3328                           
  3329                           	psect	text16
  3330  041E                     __ptext16:	
  3331 ;; *************** function _create_switch *****************
  3332 ;; Defined at:
  3333 ;;		line 9 in file "switches.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  s_t             1    wreg     PTR struct .
  3336 ;;		 -> v_btns(5), 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  s_t             1    1[COMMON] PTR struct .
  3339 ;;		 -> v_btns(5), 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMMON   BANK0   BANK1
  3349 ;;      Params:         0       0       0
  3350 ;;      Locals:         1       0       0
  3351 ;;      Temps:          1       0       0
  3352 ;;      Totals:         2       0       0
  3353 ;;Total ram usage:        2 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    2
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_init_structs
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           
  3364                           ;psect for function _create_switch
  3365  041E                     _create_switch:	
  3366                           
  3367                           ;incstack = 0
  3368                           ; Regs used in _create_switch: [wreg+fsr1l+fsr1h+status,2+status,0]
  3369                           ;create_switch@s_t stored from wreg
  3370  041E  00F1               	movwf	create_switch@s_t
  3371                           
  3372                           ;switches.c: 12:     s_t->state = 1;
  3373  041F  0871               	movf	create_switch@s_t,w
  3374  0420  0086               	movwf	6
  3375  0421  0187               	clrf	7
  3376  0422  1481               	bsf	1,1
  3377                           
  3378                           ;switches.c: 13:     s_t->prev = s_t->state;
  3379  0423  0871               	movf	create_switch@s_t,w
  3380  0424  0086               	movwf	6
  3381  0425  0187               	clrf	7
  3382  0426  0C01               	rrf	1,w
  3383  0427  3901               	andlw	1
  3384  0428  00F0               	movwf	??_create_switch
  3385  0429  0871               	movf	create_switch@s_t,w
  3386  042A  0086               	movwf	6
  3387  042B  0187               	clrf	7
  3388  042C  0801               	movf	1,w
  3389  042D  0670               	xorwf	??_create_switch,w
  3390  042E  39FE               	andlw	-2
  3391  042F  0670               	xorwf	??_create_switch,w
  3392  0430  0081               	movwf	1
  3393                           
  3394                           ;switches.c: 15:     s_t->streak = 0;
  3395  0431  0871               	movf	create_switch@s_t,w
  3396  0432  0086               	movwf	6
  3397  0433  0187               	clrf	7
  3398  0434  3083               	movlw	-125
  3399  0435  0581               	andwf	1,f
  3400                           
  3401                           ;switches.c: 16:     s_t->status = 0;
  3402  0436  0871               	movf	create_switch@s_t,w
  3403  0437  0086               	movwf	6
  3404  0438  0187               	clrf	7
  3405  0439  1381               	bcf	1,7
  3406  043A  0008               	return
  3407  043B                     __end_of_create_switch:	
  3408                           
  3409                           	psect	text17
  3410  04A3                     __ptext17:	
  3411 ;; *************** function _create_seg_disp_47 *****************
  3412 ;; Defined at:
  3413 ;;		line 135 in file "segmentdisplay47.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  s_t             1    wreg     PTR struct .
  3416 ;;		 -> v_disp(3), NULL(0), 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  s_t             1    0[COMMON] PTR struct .
  3419 ;;		 -> v_disp(3), NULL(0), 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1
  3429 ;;      Params:         0       0       0
  3430 ;;      Locals:         1       0       0
  3431 ;;      Temps:          0       0       0
  3432 ;;      Totals:         1       0       0
  3433 ;;Total ram usage:        1 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    2
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_init_structs
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           
  3444                           ;psect for function _create_seg_disp_47
  3445  04A3                     _create_seg_disp_47:	
  3446                           
  3447                           ;incstack = 0
  3448                           ; Regs used in _create_seg_disp_47: [wreg+fsr1l+fsr1h+status,2+status,0]
  3449                           ;create_seg_disp_47@s_t stored from wreg
  3450  04A3  00F0               	movwf	create_seg_disp_47@s_t
  3451                           
  3452                           ;segmentdisplay47.c: 136:     s_t->digit = 0;
  3453  04A4  0870               	movf	create_seg_disp_47@s_t,w
  3454  04A5  0086               	movwf	6
  3455  04A6  0187               	clrf	7
  3456  04A7  30FC               	movlw	-4
  3457  04A8  0581               	andwf	1,f
  3458                           
  3459                           ;segmentdisplay47.c: 137:     s_t->value_lo = 0;
  3460  04A9  0A70               	incf	create_seg_disp_47@s_t,w
  3461  04AA  0086               	movwf	6
  3462  04AB  0187               	clrf	7
  3463  04AC  0181               	clrf	1
  3464                           
  3465                           ;segmentdisplay47.c: 138:     s_t->value_hi = 0;
  3466  04AD  0870               	movf	create_seg_disp_47@s_t,w
  3467  04AE  3E02               	addlw	2
  3468  04AF  0086               	movwf	6
  3469  04B0  0187               	clrf	7
  3470  04B1  30C0               	movlw	-64
  3471  04B2  0581               	andwf	1,f
  3472                           
  3473                           ;segmentdisplay47.c: 139:     s_t->status = 1;
  3474  04B3  0870               	movf	create_seg_disp_47@s_t,w
  3475  04B4  3E02               	addlw	2
  3476  04B5  0086               	movwf	6
  3477  04B6  0187               	clrf	7
  3478  04B7  1701               	bsf	1,6
  3479  04B8  0008               	return
  3480  04B9                     __end_of_create_seg_disp_47:	
  3481                           
  3482                           	psect	text18
  3483  0538                     __ptext18:	
  3484 ;; *************** function _init *****************
  3485 ;; Defined at:
  3486 ;;		line 5 in file "init.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;		None
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;		None
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      void 
  3493 ;; Registers used:
  3494 ;;		wreg, status,2, status,0, pclath, cstack
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMMON   BANK0   BANK1
  3500 ;;      Params:         0       0       0
  3501 ;;      Locals:         0       0       0
  3502 ;;      Temps:          0       0       0
  3503 ;;      Totals:         0       0       0
  3504 ;;Total ram usage:        0 bytes
  3505 ;; Hardware stack levels used:    1
  3506 ;; Hardware stack levels required when called:    4
  3507 ;; This function calls:
  3508 ;;		_init_i2c
  3509 ;;		_init_interrupt
  3510 ;;		_init_oscillerator
  3511 ;;		_init_ports
  3512 ;; This function is called by:
  3513 ;;		_main
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           
  3518                           ;psect for function _init
  3519  0538                     _init:	
  3520                           
  3521                           ;init.c: 6:     init_oscillerator();
  3522                           
  3523                           ;incstack = 0
  3524                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  3525  0538  252B               	fcall	_init_oscillerator
  3526                           
  3527                           ;init.c: 7:     init_ports();
  3528  0539  253D               	fcall	_init_ports
  3529                           
  3530                           ;init.c: 8:     init_i2c();
  3531  053A  250C               	fcall	_init_i2c
  3532                           
  3533                           ;init.c: 9:     init_interrupt();
  3534  053B  2540               	fcall	_init_interrupt
  3535  053C  0008               	return
  3536  053D                     __end_of_init:	
  3537                           
  3538                           	psect	text19
  3539  053D                     __ptext19:	
  3540 ;; *************** function _init_ports *****************
  3541 ;; Defined at:
  3542 ;;		line 16 in file "init.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;		None
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		status,2, status,0, pclath, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1
  3556 ;;      Params:         0       0       0
  3557 ;;      Locals:         0       0       0
  3558 ;;      Temps:          0       0       0
  3559 ;;      Totals:         0       0       0
  3560 ;;Total ram usage:        0 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    3
  3563 ;; This function calls:
  3564 ;;		_res_ports
  3565 ;;		_set_ports
  3566 ;; This function is called by:
  3567 ;;		_init
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           
  3572                           ;psect for function _init_ports
  3573  053D                     _init_ports:	
  3574                           
  3575                           ;init.c: 17:     res_ports ();
  3576                           
  3577                           ;incstack = 0
  3578                           ; Regs used in _init_ports: [status,2+status,0+pclath+cstack]
  3579  053D  24F3               	fcall	_res_ports
  3580                           
  3581                           ;init.c: 18:     set_ports ();
  3582  053E  2524               	fcall	_set_ports
  3583  053F  0008               	return
  3584  0540                     __end_of_init_ports:	
  3585                           
  3586                           	psect	text20
  3587  0524                     __ptext20:	
  3588 ;; *************** function _set_ports *****************
  3589 ;; Defined at:
  3590 ;;		line 40 in file "init.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;		None
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;		None
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      void 
  3597 ;; Registers used:
  3598 ;;		None
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMMON   BANK0   BANK1
  3604 ;;      Params:         0       0       0
  3605 ;;      Locals:         0       0       0
  3606 ;;      Temps:          0       0       0
  3607 ;;      Totals:         0       0       0
  3608 ;;Total ram usage:        0 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    2
  3611 ;; This function calls:
  3612 ;;		Nothing
  3613 ;; This function is called by:
  3614 ;;		_init_ports
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           
  3619                           ;psect for function _set_ports
  3620  0524                     _set_ports:	
  3621                           
  3622                           ;init.c: 42:     TRISBbits.TRISB4 = 1;
  3623                           
  3624                           ;incstack = 0
  3625                           ; Regs used in _set_ports: []
  3626  0524  0021               	movlb	1	; select bank1
  3627  0525  160D               	bsf	13,4	;volatile
  3628                           
  3629                           ;init.c: 43:     TRISBbits.TRISB5 = 1;
  3630  0526  168D               	bsf	13,5	;volatile
  3631                           
  3632                           ;init.c: 44:     TRISBbits.TRISB6 = 1;
  3633  0527  170D               	bsf	13,6	;volatile
  3634                           
  3635                           ;init.c: 45:     TRISBbits.TRISB7 = 1;
  3636  0528  178D               	bsf	13,7	;volatile
  3637                           
  3638                           ;init.c: 46:     TRISCbits.TRISC5 = 1;
  3639  0529  168E               	bsf	14,5	;volatile
  3640  052A  0008               	return
  3641  052B                     __end_of_set_ports:	
  3642                           
  3643                           	psect	text21
  3644  04F3                     __ptext21:	
  3645 ;; *************** function _res_ports *****************
  3646 ;; Defined at:
  3647 ;;		line 22 in file "init.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;		None
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;		None
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		status,2
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMMON   BANK0   BANK1
  3661 ;;      Params:         0       0       0
  3662 ;;      Locals:         0       0       0
  3663 ;;      Temps:          0       0       0
  3664 ;;      Totals:         0       0       0
  3665 ;;Total ram usage:        0 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    2
  3668 ;; This function calls:
  3669 ;;		Nothing
  3670 ;; This function is called by:
  3671 ;;		_init_ports
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           
  3676                           ;psect for function _res_ports
  3677  04F3                     _res_ports:	
  3678                           
  3679                           ;init.c: 24:     TRISA = 0x00;
  3680                           
  3681                           ;incstack = 0
  3682                           ; Regs used in _res_ports: [status,2]
  3683  04F3  0021               	movlb	1	; select bank1
  3684  04F4  018C               	clrf	12	;volatile
  3685                           
  3686                           ;init.c: 25:     TRISB = 0x00;
  3687  04F5  018D               	clrf	13	;volatile
  3688                           
  3689                           ;init.c: 26:     TRISC = 0x00;
  3690  04F6  018E               	clrf	14	;volatile
  3691                           
  3692                           ;init.c: 29:     LATA = 0x00;
  3693  04F7  0022               	movlb	2	; select bank2
  3694  04F8  018C               	clrf	12	;volatile
  3695                           
  3696                           ;init.c: 30:     LATB = 0x00;
  3697  04F9  018D               	clrf	13	;volatile
  3698                           
  3699                           ;init.c: 31:     LATC = 0x00;
  3700  04FA  018E               	clrf	14	;volatile
  3701                           
  3702                           ;init.c: 34:     ANSELA = 0x00;
  3703  04FB  0023               	movlb	3	; select bank3
  3704  04FC  018C               	clrf	12	;volatile
  3705                           
  3706                           ;init.c: 35:     ANSELB = 0x00;
  3707  04FD  018D               	clrf	13	;volatile
  3708                           
  3709                           ;init.c: 36:     ANSELC = 0x00;
  3710  04FE  018E               	clrf	14	;volatile
  3711  04FF  0008               	return
  3712  0500                     __end_of_res_ports:	
  3713                           
  3714                           	psect	text22
  3715  052B                     __ptext22:	
  3716 ;; *************** function _init_oscillerator *****************
  3717 ;; Defined at:
  3718 ;;		line 12 in file "init.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;		None
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2, status,0
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMMON   BANK0   BANK1
  3732 ;;      Params:         0       0       0
  3733 ;;      Locals:         0       0       0
  3734 ;;      Temps:          0       0       0
  3735 ;;      Totals:         0       0       0
  3736 ;;Total ram usage:        0 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    2
  3739 ;; This function calls:
  3740 ;;		Nothing
  3741 ;; This function is called by:
  3742 ;;		_init
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           
  3747                           ;psect for function _init_oscillerator
  3748  052B                     _init_oscillerator:	
  3749                           
  3750                           ;init.c: 13:     OSCCONbits.SCS1 = 1;
  3751                           
  3752                           ;incstack = 0
  3753                           ; Regs used in _init_oscillerator: [wreg+status,2+status,0]
  3754  052B  0021               	movlb	1	; select bank1
  3755  052C  1499               	bsf	25,1	;volatile
  3756                           
  3757                           ;init.c: 14:     OSCCONbits.IRCF = 0b1110;
  3758  052D  0819               	movf	25,w	;volatile
  3759  052E  3987               	andlw	-121
  3760  052F  3870               	iorlw	112
  3761  0530  0099               	movwf	25	;volatile
  3762  0531  0008               	return
  3763  0532                     __end_of_init_oscillerator:	
  3764                           
  3765                           	psect	text23
  3766  0540                     __ptext23:	
  3767 ;; *************** function _init_interrupt *****************
  3768 ;; Defined at:
  3769 ;;		line 67 in file "init.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;		None
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;		None
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      void 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0, pclath, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1
  3783 ;;      Params:         0       0       0
  3784 ;;      Locals:         0       0       0
  3785 ;;      Temps:          0       0       0
  3786 ;;      Totals:         0       0       0
  3787 ;;Total ram usage:        0 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    3
  3790 ;; This function calls:
  3791 ;;		_init_interrupt_timer
  3792 ;; This function is called by:
  3793 ;;		_init
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           
  3798                           ;psect for function _init_interrupt
  3799  0540                     _init_interrupt:	
  3800                           
  3801                           ;init.c: 69:     init_interrupt_timer ();
  3802                           
  3803                           ;incstack = 0
  3804                           ; Regs used in _init_interrupt: [wreg+status,2+status,0+pclath+cstack]
  3805  0540  2500               	fcall	_init_interrupt_timer
  3806                           
  3807                           ;init.c: 72:     INTCONbits.GIE = 1;
  3808  0541  178B               	bsf	11,7	;volatile
  3809  0542  0008               	return
  3810  0543                     __end_of_init_interrupt:	
  3811                           
  3812                           	psect	text24
  3813  0500                     __ptext24:	
  3814 ;; *************** function _init_interrupt_timer *****************
  3815 ;; Defined at:
  3816 ;;		line 76 in file "init.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;		None
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;		None
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      void 
  3823 ;; Registers used:
  3824 ;;		wreg, status,2, status,0
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMMON   BANK0   BANK1
  3830 ;;      Params:         0       0       0
  3831 ;;      Locals:         0       0       0
  3832 ;;      Temps:          0       0       0
  3833 ;;      Totals:         0       0       0
  3834 ;;Total ram usage:        0 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; Hardware stack levels required when called:    2
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_init_interrupt
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           
  3845                           ;psect for function _init_interrupt_timer
  3846  0500                     _init_interrupt_timer:	
  3847                           
  3848                           ;init.c: 78:     OPTION_REGbits.PSA = 0;
  3849                           
  3850                           ;incstack = 0
  3851                           ; Regs used in _init_interrupt_timer: [wreg+status,2+status,0]
  3852  0500  0021               	movlb	1	; select bank1
  3853  0501  1195               	bcf	21,3	;volatile
  3854                           
  3855                           ;init.c: 80:     OPTION_REGbits.PS = 0b100;
  3856  0502  0815               	movf	21,w	;volatile
  3857  0503  39F8               	andlw	-8
  3858  0504  3804               	iorlw	4
  3859  0505  0095               	movwf	21	;volatile
  3860                           
  3861                           ;init.c: 83:     OPTION_REGbits.TMR0CS = 0;
  3862  0506  1295               	bcf	21,5	;volatile
  3863                           
  3864                           ;init.c: 86:     OPTION_REGbits.TMR0SE = 0;
  3865  0507  1215               	bcf	21,4	;volatile
  3866                           
  3867                           ;init.c: 90:     T0IE = 1;
  3868  0508  168B               	bsf	11,5	;volatile
  3869                           
  3870                           ;init.c: 92:     TMR0 = 0;
  3871  0509  0020               	movlb	0	; select bank0
  3872  050A  0195               	clrf	21	;volatile
  3873  050B  0008               	return
  3874  050C                     __end_of_init_interrupt_timer:	
  3875                           
  3876                           	psect	text25
  3877  050C                     __ptext25:	
  3878 ;; *************** function _init_i2c *****************
  3879 ;; Defined at:
  3880 ;;		line 49 in file "init.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMMON   BANK0   BANK1
  3894 ;;      Params:         0       0       0
  3895 ;;      Locals:         0       0       0
  3896 ;;      Temps:          0       0       0
  3897 ;;      Totals:         0       0       0
  3898 ;;Total ram usage:        0 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    2
  3901 ;; This function calls:
  3902 ;;		Nothing
  3903 ;; This function is called by:
  3904 ;;		_init
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           
  3909                           ;psect for function _init_i2c
  3910  050C                     _init_i2c:	
  3911                           
  3912                           ;init.c: 51:     TRISCbits.TRISC3 = 1;
  3913                           
  3914                           ;incstack = 0
  3915                           ; Regs used in _init_i2c: [wreg]
  3916  050C  0021               	movlb	1	; select bank1
  3917  050D  158E               	bsf	14,3	;volatile
  3918                           
  3919                           ;init.c: 52:     TRISCbits.TRISC4 = 1;
  3920  050E  160E               	bsf	14,4	;volatile
  3921                           
  3922                           ;init.c: 59:     SSPADD = 19;
  3923  050F  3013               	movlw	19
  3924  0510  0024               	movlb	4	; select bank4
  3925  0511  0092               	movwf	18	;volatile
  3926                           
  3927                           ;init.c: 63:     SSPCON1 = 0x28;
  3928  0512  3028               	movlw	40
  3929  0513  0095               	movwf	21	;volatile
  3930  0514  0008               	return
  3931  0515                     __end_of_init_i2c:	
  3932                           
  3933                           	psect	text26
  3934  04CE                     __ptext26:	
  3935 ;; *************** function _change_category *****************
  3936 ;; Defined at:
  3937 ;;		line 227 in file "bs_1512.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;  category        1    wreg     unsigned char 
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;  category        1   13[COMMON] unsigned char 
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  1    wreg      void 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2, status,0, pclath, cstack
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMMON   BANK0   BANK1
  3951 ;;      Params:         0       0       0
  3952 ;;      Locals:         1       0       0
  3953 ;;      Temps:          1       0       0
  3954 ;;      Totals:         2       0       0
  3955 ;;Total ram usage:        2 bytes
  3956 ;; Hardware stack levels used:    1
  3957 ;; Hardware stack levels required when called:    4
  3958 ;; This function calls:
  3959 ;;		_get_cat_val
  3960 ;;		_set_cat_val
  3961 ;; This function is called by:
  3962 ;;		_main
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           
  3967                           ;psect for function _change_category
  3968  04CE                     _change_category:	
  3969                           
  3970                           ;incstack = 0
  3971                           ; Regs used in _change_category: [wreg+status,2+status,0+pclath+cstack]
  3972                           ;change_category@category stored from wreg
  3973  04CE  00FD               	movwf	change_category@category
  3974                           
  3975                           ;bs_1512.c: 228:     set_cat_val (cur_cat, cur_val);
  3976  04CF  0020               	movlb	0	; select bank0
  3977  04D0  082F               	movf	_cur_val+1,w
  3978  04D1  00F8               	movwf	set_cat_val@val+1
  3979  04D2  082E               	movf	_cur_val,w
  3980  04D3  00F7               	movwf	set_cat_val@val
  3981  04D4  0837               	movf	_cur_cat,w
  3982  04D5  2317               	fcall	_set_cat_val
  3983                           
  3984                           ;bs_1512.c: 229:     cur_cat = category;
  3985  04D6  087D               	movf	change_category@category,w
  3986  04D7  00FC               	movwf	??_change_category
  3987  04D8  087C               	movf	??_change_category,w
  3988  04D9  0020               	movlb	0	; select bank0
  3989  04DA  00B7               	movwf	_cur_cat
  3990                           
  3991                           ;bs_1512.c: 230:     cur_val = get_cat_val(cur_cat);
  3992  04DB  0837               	movf	_cur_cat,w
  3993  04DC  2285               	fcall	_get_cat_val
  3994  04DD  0878               	movf	?_get_cat_val+1,w
  3995  04DE  0020               	movlb	0	; select bank0
  3996  04DF  00AF               	movwf	_cur_val+1
  3997  04E0  0877               	movf	?_get_cat_val,w
  3998  04E1  00AE               	movwf	_cur_val
  3999  04E2  0008               	return
  4000  04E3                     __end_of_change_category:	
  4001                           
  4002                           	psect	text27
  4003  0317                     __ptext27:	
  4004 ;; *************** function _set_cat_val *****************
  4005 ;; Defined at:
  4006 ;;		line 200 in file "bs_1512.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;  category        1    wreg     unsigned char 
  4009 ;;  val             2    7[COMMON] unsigned short 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  category        1    2[BANK0 ] unsigned char 
  4012 ;;  i               1    3[BANK0 ] unsigned char 
  4013 ;;  add_start       2    0[BANK0 ] unsigned short 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0, pclath, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1
  4023 ;;      Params:         2       0       0
  4024 ;;      Locals:         0       4       0
  4025 ;;      Temps:          2       0       0
  4026 ;;      Totals:         4       4       0
  4027 ;;Total ram usage:        8 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    3
  4030 ;; This function calls:
  4031 ;;		_eeprom_write_16
  4032 ;; This function is called by:
  4033 ;;		_cat_auto_save
  4034 ;;		_change_category
  4035 ;;		_rst_storage
  4036 ;;		_init_storage
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           
  4041                           ;psect for function _set_cat_val
  4042  0317                     _set_cat_val:	
  4043                           
  4044                           ;incstack = 0
  4045                           ; Regs used in _set_cat_val: [wreg+status,2+status,0+pclath+cstack]
  4046                           ;set_cat_val@category stored from wreg
  4047  0317  0020               	movlb	0	; select bank0
  4048  0318  00C7               	movwf	set_cat_val@category
  4049                           
  4050                           ;bs_1512.c: 201:     if (cur_cat > 2 - 1) return;
  4051  0319  3002               	movlw	2
  4052  031A  0237               	subwf	_cur_cat,w
  4053  031B  1803               	btfsc	3,0
  4054  031C  0008               	return
  4055                           
  4056                           ;bs_1512.c: 204:     uint16_t add_start = 0x0450 + (2 * category);
  4057  031D  0847               	movf	set_cat_val@category,w
  4058  031E  00F9               	movwf	??_set_cat_val
  4059  031F  01FA               	clrf	??_set_cat_val+1
  4060  0320  35F9               	lslf	??_set_cat_val,f
  4061  0321  0DFA               	rlf	??_set_cat_val+1,f
  4062  0322  0879               	movf	??_set_cat_val,w
  4063  0323  3E50               	addlw	80
  4064  0324  00C5               	movwf	set_cat_val@add_start
  4065  0325  3004               	movlw	4
  4066  0326  3D7A               	addwfc	??_set_cat_val+1,w
  4067  0327  00C6               	movwf	set_cat_val@add_start+1
  4068                           
  4069                           ;bs_1512.c: 205:     for (uint8_t i = 0; i < 2; i ++){
  4070  0328  01C8               	clrf	set_cat_val@i
  4071  0329                     l1955:	
  4072                           
  4073                           ;bs_1512.c: 206:         _delay((unsigned long)((5)*(8000000/4000.0)));
  4074  0329  300D               	movlw	13
  4075  032A  00F9               	movwf	??_set_cat_val
  4076  032B  30FC               	movlw	252
  4077  032C                     u2567:	
  4078  032C  0B89               	decfsz	9,f
  4079  032D  2B2C               	goto	u2567
  4080  032E  0BF9               	decfsz	??_set_cat_val,f
  4081  032F  2B2C               	goto	u2567
  4082                           
  4083                           ;bs_1512.c: 207:         eeprom_write_16 (0xA0, add_start + i, val);
  4084  0330  0020               	movlb	0	; select bank0
  4085  0331  0848               	movf	set_cat_val@i,w
  4086  0332  0745               	addwf	set_cat_val@add_start,w
  4087  0333  00F0               	movwf	eeprom_write_16@add
  4088  0334  0846               	movf	set_cat_val@add_start+1,w
  4089  0335  1803               	skipnc
  4090  0336  0A46               	incf	set_cat_val@add_start+1,w
  4091  0337  00F1               	movwf	eeprom_write_16@add+1
  4092  0338  0877               	movf	set_cat_val@val,w
  4093  0339  00F9               	movwf	??_set_cat_val
  4094  033A  0879               	movf	??_set_cat_val,w
  4095  033B  00F2               	movwf	eeprom_write_16@eeData
  4096  033C  30A0               	movlw	160
  4097  033D  22D5               	fcall	_eeprom_write_16
  4098                           
  4099                           ;bs_1512.c: 208:         val = val >> 8;
  4100  033E  0878               	movf	set_cat_val@val+1,w
  4101  033F  00FA               	movwf	??_set_cat_val+1
  4102  0340  0877               	movf	set_cat_val@val,w
  4103  0341  00F9               	movwf	??_set_cat_val
  4104  0342  087A               	movf	??_set_cat_val+1,w
  4105  0343  00F9               	movwf	??_set_cat_val
  4106  0344  01FA               	clrf	??_set_cat_val+1
  4107  0345  0879               	movf	??_set_cat_val,w
  4108  0346  00F7               	movwf	set_cat_val@val
  4109  0347  087A               	movf	??_set_cat_val+1,w
  4110  0348  00F8               	movwf	set_cat_val@val+1
  4111                           
  4112                           ;bs_1512.c: 209:     }
  4113  0349  3001               	movlw	1
  4114  034A  00F9               	movwf	??_set_cat_val
  4115  034B  0879               	movf	??_set_cat_val,w
  4116  034C  0020               	movlb	0	; select bank0
  4117  034D  07C8               	addwf	set_cat_val@i,f
  4118  034E  3002               	movlw	2
  4119  034F  0248               	subwf	set_cat_val@i,w
  4120  0350  1803               	btfsc	3,0
  4121  0351  0008               	return
  4122  0352  2B29               	goto	l1955
  4123  0353                     __end_of_set_cat_val:	
  4124                           
  4125                           	psect	text28
  4126  02D5                     __ptext28:	
  4127 ;; *************** function _eeprom_write_16 *****************
  4128 ;; Defined at:
  4129 ;;		line 115 in file "i2c_eeprom.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  slaveAdd        1    wreg     unsigned char 
  4132 ;;  add             2    0[COMMON] unsigned short 
  4133 ;;  eeData          1    2[COMMON] unsigned char 
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;  slaveAdd        1    4[COMMON] unsigned char 
  4136 ;;  addLow          1    6[COMMON] unsigned char 
  4137 ;;  addHigh         1    5[COMMON] unsigned char 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  1    wreg      void 
  4140 ;; Registers used:
  4141 ;;		wreg, status,2
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMMON   BANK0   BANK1
  4147 ;;      Params:         3       0       0
  4148 ;;      Locals:         3       0       0
  4149 ;;      Temps:          1       0       0
  4150 ;;      Totals:         7       0       0
  4151 ;;Total ram usage:        7 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:    2
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		_main
  4158 ;;		_set_cat_val
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           
  4163                           ;psect for function _eeprom_write_16
  4164  02D5                     _eeprom_write_16:	
  4165                           
  4166                           ;incstack = 0
  4167                           ; Regs used in _eeprom_write_16: [wreg+status,2]
  4168                           ;eeprom_write_16@slaveAdd stored from wreg
  4169  02D5  00F4               	movwf	eeprom_write_16@slaveAdd
  4170                           
  4171                           ;i2c_eeprom.c: 116:     uint8_t addHigh = add >> 8;
  4172  02D6  0871               	movf	eeprom_write_16@add+1,w
  4173  02D7  00F3               	movwf	??_eeprom_write_16
  4174  02D8  0873               	movf	??_eeprom_write_16,w
  4175  02D9  00F5               	movwf	eeprom_write_16@addHigh
  4176                           
  4177                           ;i2c_eeprom.c: 117:     uint8_t addLow = add;
  4178  02DA  0870               	movf	eeprom_write_16@add,w
  4179  02DB  00F3               	movwf	??_eeprom_write_16
  4180  02DC  0873               	movf	??_eeprom_write_16,w
  4181  02DD  00F6               	movwf	eeprom_write_16@addLow
  4182                           
  4183                           ;i2c_eeprom.c: 118:     SSPCON2bits.SEN = 1;
  4184  02DE  0024               	movlb	4	; select bank4
  4185  02DF  1416               	bsf	22,0	;volatile
  4186  02E0                     l203:	
  4187                           ;i2c_eeprom.c: 119:     while (SEN);
  4188                           
  4189  02E0  1816               	btfsc	22,0	;volatile
  4190  02E1  2AE0               	goto	l203
  4191                           
  4192                           ;i2c_eeprom.c: 120:     PIR1bits.SSPIF = 0;
  4193  02E2  0020               	movlb	0	; select bank0
  4194  02E3  1191               	bcf	17,3	;volatile
  4195                           
  4196                           ;i2c_eeprom.c: 122:     SSPBUF = slaveAdd;
  4197  02E4  0874               	movf	eeprom_write_16@slaveAdd,w
  4198  02E5  0024               	movlb	4	; select bank4
  4199  02E6  0091               	movwf	17	;volatile
  4200  02E7                     l206:	
  4201                           ;i2c_eeprom.c: 123:     while (!SSPIF);
  4202                           
  4203  02E7  0020               	movlb	0	; select bank0
  4204  02E8  1D91               	btfss	17,3	;volatile
  4205  02E9  2AE7               	goto	l206
  4206                           
  4207                           ;i2c_eeprom.c: 124:     PIR1bits.SSPIF = 0;
  4208  02EA  1191               	bcf	17,3	;volatile
  4209                           
  4210                           ;i2c_eeprom.c: 125:     if (SSPCON2bits.ACKSTAT) {
  4211  02EB  0024               	movlb	4	; select bank4
  4212  02EC  1F16               	btfss	22,6	;volatile
  4213  02ED  2AF2               	goto	l1859
  4214                           
  4215                           ;i2c_eeprom.c: 126:         SSPCON2bits.PEN = 1;
  4216  02EE  1516               	bsf	22,2	;volatile
  4217  02EF                     l210:	
  4218                           ;i2c_eeprom.c: 127:         while (PEN);
  4219                           
  4220  02EF  1D16               	btfss	22,2	;volatile
  4221  02F0  0008               	return
  4222  02F1  2AEF               	goto	l210
  4223  02F2                     l1859:	
  4224                           
  4225                           ;i2c_eeprom.c: 131:     SSPBUF = addHigh;
  4226  02F2  0875               	movf	eeprom_write_16@addHigh,w
  4227  02F3  0091               	movwf	17	;volatile
  4228  02F4                     l214:	
  4229                           ;i2c_eeprom.c: 132:     while (!SSPIF);
  4230                           
  4231  02F4  0020               	movlb	0	; select bank0
  4232  02F5  1D91               	btfss	17,3	;volatile
  4233  02F6  2AF4               	goto	l214
  4234                           
  4235                           ;i2c_eeprom.c: 133:     PIR1bits.SSPIF = 0;
  4236  02F7  1191               	bcf	17,3	;volatile
  4237                           
  4238                           ;i2c_eeprom.c: 134:     if (SSPCON2bits.ACKSTAT) {
  4239  02F8  0024               	movlb	4	; select bank4
  4240  02F9  1F16               	btfss	22,6	;volatile
  4241  02FA  2AFF               	goto	l1863
  4242                           
  4243                           ;i2c_eeprom.c: 135:         SSPCON2bits.PEN = 1;
  4244  02FB  1516               	bsf	22,2	;volatile
  4245  02FC                     l218:	
  4246                           ;i2c_eeprom.c: 136:         while (PEN);
  4247                           
  4248  02FC  1D16               	btfss	22,2	;volatile
  4249  02FD  0008               	return
  4250  02FE  2AFC               	goto	l218
  4251  02FF                     l1863:	
  4252                           
  4253                           ;i2c_eeprom.c: 140:     SSPBUF = addLow;
  4254  02FF  0876               	movf	eeprom_write_16@addLow,w
  4255  0300  0091               	movwf	17	;volatile
  4256  0301                     l221:	
  4257                           ;i2c_eeprom.c: 141:     while (!SSPIF);
  4258                           
  4259  0301  0020               	movlb	0	; select bank0
  4260  0302  1D91               	btfss	17,3	;volatile
  4261  0303  2B01               	goto	l221
  4262                           
  4263                           ;i2c_eeprom.c: 142:     PIR1bits.SSPIF = 0;
  4264  0304  1191               	bcf	17,3	;volatile
  4265                           
  4266                           ;i2c_eeprom.c: 143:     if (SSPCON2bits.ACKSTAT) {
  4267  0305  0024               	movlb	4	; select bank4
  4268  0306  1F16               	btfss	22,6	;volatile
  4269  0307  2B0C               	goto	l1867
  4270                           
  4271                           ;i2c_eeprom.c: 144:         SSPCON2bits.PEN = 1;
  4272  0308  1516               	bsf	22,2	;volatile
  4273  0309                     l225:	
  4274                           ;i2c_eeprom.c: 145:         while (PEN);
  4275                           
  4276  0309  1D16               	btfss	22,2	;volatile
  4277  030A  0008               	return
  4278  030B  2B09               	goto	l225
  4279  030C                     l1867:	
  4280                           
  4281                           ;i2c_eeprom.c: 149:     SSPBUF = eeData;
  4282  030C  0872               	movf	eeprom_write_16@eeData,w
  4283  030D  0091               	movwf	17	;volatile
  4284  030E                     l228:	
  4285                           ;i2c_eeprom.c: 150:     while (!SSPIF);
  4286                           
  4287  030E  0020               	movlb	0	; select bank0
  4288  030F  1D91               	btfss	17,3	;volatile
  4289  0310  2B0E               	goto	l228
  4290                           
  4291                           ;i2c_eeprom.c: 151:     PIR1bits.SSPIF = 0;
  4292  0311  1191               	bcf	17,3	;volatile
  4293                           
  4294                           ;i2c_eeprom.c: 153:     SSPCON2bits.PEN = 1;
  4295  0312  0024               	movlb	4	; select bank4
  4296  0313  1516               	bsf	22,2	;volatile
  4297  0314                     l231:	
  4298                           ;i2c_eeprom.c: 154:     while (PEN);
  4299                           
  4300  0314  1D16               	btfss	22,2	;volatile
  4301  0315  0008               	return
  4302  0316  2B14               	goto	l231
  4303  0317                     __end_of_eeprom_write_16:	
  4304                           
  4305                           	psect	text29
  4306  0285                     __ptext29:	
  4307 ;; *************** function _get_cat_val *****************
  4308 ;; Defined at:
  4309 ;;		line 184 in file "bs_1512.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  category        1    wreg     unsigned char 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;  category        1    2[BANK0 ] unsigned char 
  4314 ;;  d               1    5[BANK0 ] unsigned char 
  4315 ;;  i               1    6[BANK0 ] unsigned char 
  4316 ;;  val             2    3[BANK0 ] unsigned short 
  4317 ;;  add_start       2    0[BANK0 ] unsigned short 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  2    7[COMMON] unsigned short 
  4320 ;; Registers used:
  4321 ;;		wreg, status,2, status,0, pclath, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMMON   BANK0   BANK1
  4327 ;;      Params:         2       0       0
  4328 ;;      Locals:         0       7       0
  4329 ;;      Temps:          3       0       0
  4330 ;;      Totals:         5       7       0
  4331 ;;Total ram usage:       12 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    3
  4334 ;; This function calls:
  4335 ;;		_eeprom_read_16
  4336 ;; This function is called by:
  4337 ;;		_main
  4338 ;;		_change_category
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           
  4343                           ;psect for function _get_cat_val
  4344  0285                     _get_cat_val:	
  4345                           
  4346                           ;incstack = 0
  4347                           ; Regs used in _get_cat_val: [wreg+status,2+status,0+pclath+cstack]
  4348                           ;get_cat_val@category stored from wreg
  4349  0285  0020               	movlb	0	; select bank0
  4350  0286  00C7               	movwf	get_cat_val@category
  4351                           
  4352                           ;bs_1512.c: 185:     if (cur_cat > 2 - 1) return -1;
  4353  0287  3002               	movlw	2
  4354  0288  0237               	subwf	_cur_cat,w
  4355  0289  1C03               	skipc
  4356  028A  2A90               	goto	l2147
  4357  028B  30FF               	movlw	255
  4358  028C  00F7               	movwf	?_get_cat_val
  4359  028D  30FF               	movlw	255
  4360  028E  00F8               	movwf	?_get_cat_val+1
  4361  028F  0008               	return
  4362  0290                     l2147:	
  4363                           
  4364                           ;bs_1512.c: 188:     uint16_t val = 0;
  4365  0290  01C8               	clrf	get_cat_val@val
  4366  0291  01C9               	clrf	get_cat_val@val+1
  4367                           
  4368                           ;bs_1512.c: 189:     uint16_t add_start = 0x0450 + (2 * category);
  4369  0292  0847               	movf	get_cat_val@category,w
  4370  0293  00F9               	movwf	??_get_cat_val
  4371  0294  01FA               	clrf	??_get_cat_val+1
  4372  0295  35F9               	lslf	??_get_cat_val,f
  4373  0296  0DFA               	rlf	??_get_cat_val+1,f
  4374  0297  0879               	movf	??_get_cat_val,w
  4375  0298  3E50               	addlw	80
  4376  0299  00C5               	movwf	get_cat_val@add_start
  4377  029A  3004               	movlw	4
  4378  029B  3D7A               	addwfc	??_get_cat_val+1,w
  4379  029C  00C6               	movwf	get_cat_val@add_start+1
  4380                           
  4381                           ;bs_1512.c: 191:     for (uint8_t i = 0; i < 2; i ++){
  4382  029D  01CB               	clrf	get_cat_val@i
  4383  029E                     l2157:	
  4384                           
  4385                           ;bs_1512.c: 192:         _delay((unsigned long)((5)*(8000000/4000.0)));
  4386  029E  300D               	movlw	13
  4387  029F  00F9               	movwf	??_get_cat_val
  4388  02A0  30FC               	movlw	252
  4389  02A1                     u2577:	
  4390  02A1  0B89               	decfsz	9,f
  4391  02A2  2AA1               	goto	u2577
  4392  02A3  0BF9               	decfsz	??_get_cat_val,f
  4393  02A4  2AA1               	goto	u2577
  4394                           
  4395                           ;bs_1512.c: 193:         uint8_t d = eeprom_read_16 (0xA0, add_start + i);
  4396  02A5  0020               	movlb	0	; select bank0
  4397  02A6  084B               	movf	get_cat_val@i,w
  4398  02A7  0745               	addwf	get_cat_val@add_start,w
  4399  02A8  00F0               	movwf	eeprom_read_16@add
  4400  02A9  0846               	movf	get_cat_val@add_start+1,w
  4401  02AA  1803               	skipnc
  4402  02AB  0A46               	incf	get_cat_val@add_start+1,w
  4403  02AC  00F1               	movwf	eeprom_read_16@add+1
  4404  02AD  30A0               	movlw	160
  4405  02AE  21D4               	fcall	_eeprom_read_16
  4406  02AF  00F9               	movwf	??_get_cat_val
  4407  02B0  0879               	movf	??_get_cat_val,w
  4408  02B1  0020               	movlb	0	; select bank0
  4409  02B2  00CA               	movwf	get_cat_val@d
  4410                           
  4411                           ;bs_1512.c: 194:         val |= d << (8 * i);
  4412  02B3  084A               	movf	get_cat_val@d,w
  4413  02B4  00F9               	movwf	??_get_cat_val
  4414  02B5  01FA               	clrf	??_get_cat_val+1
  4415  02B6  084B               	movf	get_cat_val@i,w
  4416  02B7  00FB               	movwf	??_get_cat_val+2
  4417  02B8  3002               	movlw	2
  4418  02B9                     u2145:	
  4419  02B9  35FB               	lslf	??_get_cat_val+2,f
  4420  02BA  3EFF               	addlw	-1
  4421  02BB  1D03               	skipz
  4422  02BC  2AB9               	goto	u2145
  4423  02BD  357B               	lslf	??_get_cat_val+2,w
  4424  02BE  0A89               	incf	9,f
  4425  02BF  2AC2               	goto	u2154
  4426  02C0                     u2155:	
  4427  02C0  35F9               	lslf	??_get_cat_val,f
  4428  02C1  0DFA               	rlf	??_get_cat_val+1,f
  4429  02C2                     u2154:	
  4430  02C2  0B89               	decfsz	9,f
  4431  02C3  2AC0               	goto	u2155
  4432  02C4  0879               	movf	??_get_cat_val,w
  4433  02C5  04C8               	iorwf	get_cat_val@val,f
  4434  02C6  087A               	movf	??_get_cat_val+1,w
  4435  02C7  04C9               	iorwf	get_cat_val@val+1,f
  4436                           
  4437                           ;bs_1512.c: 195:     }
  4438  02C8  3001               	movlw	1
  4439  02C9  00F9               	movwf	??_get_cat_val
  4440  02CA  0879               	movf	??_get_cat_val,w
  4441  02CB  07CB               	addwf	get_cat_val@i,f
  4442  02CC  3002               	movlw	2
  4443  02CD  024B               	subwf	get_cat_val@i,w
  4444  02CE  1C03               	skipc
  4445  02CF  2A9E               	goto	l2157
  4446                           
  4447                           ;bs_1512.c: 197:     return val;
  4448  02D0  0849               	movf	get_cat_val@val+1,w
  4449  02D1  00F8               	movwf	?_get_cat_val+1
  4450  02D2  0848               	movf	get_cat_val@val,w
  4451  02D3  00F7               	movwf	?_get_cat_val
  4452  02D4  0008               	return
  4453  02D5                     __end_of_get_cat_val:	
  4454                           
  4455                           	psect	text30
  4456  01D4                     __ptext30:	
  4457 ;; *************** function _eeprom_read_16 *****************
  4458 ;; Defined at:
  4459 ;;		line 156 in file "i2c_eeprom.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  slaveAdd        1    wreg     unsigned char 
  4462 ;;  add             2    0[COMMON] unsigned short 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  slaveAdd        1    6[COMMON] unsigned char 
  4465 ;;  tempData        1    5[COMMON] unsigned char 
  4466 ;;  addLow          1    4[COMMON] unsigned char 
  4467 ;;  addHigh         1    3[COMMON] unsigned char 
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      unsigned char 
  4470 ;; Registers used:
  4471 ;;		wreg, status,2, status,0
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMMON   BANK0   BANK1
  4477 ;;      Params:         2       0       0
  4478 ;;      Locals:         4       0       0
  4479 ;;      Temps:          1       0       0
  4480 ;;      Totals:         7       0       0
  4481 ;;Total ram usage:        7 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; Hardware stack levels required when called:    2
  4484 ;; This function calls:
  4485 ;;		Nothing
  4486 ;; This function is called by:
  4487 ;;		_main
  4488 ;;		_get_cat_val
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           
  4493                           ;psect for function _eeprom_read_16
  4494  01D4                     _eeprom_read_16:	
  4495                           
  4496                           ;incstack = 0
  4497                           ; Regs used in _eeprom_read_16: [wreg+status,2+status,0]
  4498                           ;eeprom_read_16@slaveAdd stored from wreg
  4499  01D4  00F6               	movwf	eeprom_read_16@slaveAdd
  4500                           
  4501                           ;i2c_eeprom.c: 157:     uint8_t addHigh = add >> 8;
  4502  01D5  0871               	movf	eeprom_read_16@add+1,w
  4503  01D6  00F2               	movwf	??_eeprom_read_16
  4504  01D7  0872               	movf	??_eeprom_read_16,w
  4505  01D8  00F3               	movwf	eeprom_read_16@addHigh
  4506                           
  4507                           ;i2c_eeprom.c: 158:     uint8_t addLow = add;
  4508  01D9  0870               	movf	eeprom_read_16@add,w
  4509  01DA  00F2               	movwf	??_eeprom_read_16
  4510  01DB  0872               	movf	??_eeprom_read_16,w
  4511  01DC  00F4               	movwf	eeprom_read_16@addLow
  4512                           
  4513                           ;i2c_eeprom.c: 159:     uint8_t tempData;;i2c_eeprom.c: 161:     SSPCON2bits.SEN = 1;
  4514  01DD  0024               	movlb	4	; select bank4
  4515  01DE  1416               	bsf	22,0	;volatile
  4516  01DF                     l236:	
  4517                           ;i2c_eeprom.c: 162:     while (SEN);
  4518                           
  4519  01DF  1816               	btfsc	22,0	;volatile
  4520  01E0  29DF               	goto	l236
  4521                           
  4522                           ;i2c_eeprom.c: 163:     PIR1bits.SSPIF = 0;
  4523  01E1  0020               	movlb	0	; select bank0
  4524  01E2  1191               	bcf	17,3	;volatile
  4525                           
  4526                           ;i2c_eeprom.c: 164:     SSPBUF = slaveAdd;
  4527  01E3  0876               	movf	eeprom_read_16@slaveAdd,w
  4528  01E4  0024               	movlb	4	; select bank4
  4529  01E5  0091               	movwf	17	;volatile
  4530  01E6                     l239:	
  4531                           ;i2c_eeprom.c: 165:     while (!SSPIF);
  4532                           
  4533  01E6  0020               	movlb	0	; select bank0
  4534  01E7  1D91               	btfss	17,3	;volatile
  4535  01E8  29E6               	goto	l239
  4536                           
  4537                           ;i2c_eeprom.c: 166:     PIR1bits.SSPIF = 0;
  4538  01E9  1191               	bcf	17,3	;volatile
  4539                           
  4540                           ;i2c_eeprom.c: 167:     if (SSPCON2bits.ACKSTAT) {
  4541  01EA  0024               	movlb	4	; select bank4
  4542  01EB  1F16               	btfss	22,6	;volatile
  4543  01EC  29F2               	goto	l1899
  4544                           
  4545                           ;i2c_eeprom.c: 168:         SSPCON2bits.PEN = 1;
  4546  01ED  1516               	bsf	22,2	;volatile
  4547  01EE                     l243:	
  4548                           ;i2c_eeprom.c: 169:         while (PEN);
  4549                           
  4550  01EE  1916               	btfsc	22,2	;volatile
  4551  01EF  29EE               	goto	l243
  4552                           
  4553                           ;i2c_eeprom.c: 170:         return (0xFB);
  4554  01F0  30FB               	movlw	251
  4555  01F1  0008               	return
  4556  01F2                     l1899:	
  4557                           
  4558                           ;i2c_eeprom.c: 173:     SSPBUF = addHigh;
  4559  01F2  0873               	movf	eeprom_read_16@addHigh,w
  4560  01F3  0091               	movwf	17	;volatile
  4561  01F4                     l247:	
  4562                           ;i2c_eeprom.c: 174:     while (!SSPIF);
  4563                           
  4564  01F4  0020               	movlb	0	; select bank0
  4565  01F5  1D91               	btfss	17,3	;volatile
  4566  01F6  29F4               	goto	l247
  4567                           
  4568                           ;i2c_eeprom.c: 175:     PIR1bits.SSPIF = 0;
  4569  01F7  1191               	bcf	17,3	;volatile
  4570                           
  4571                           ;i2c_eeprom.c: 176:     if (SSPCON2bits.ACKSTAT) {
  4572  01F8  0024               	movlb	4	; select bank4
  4573  01F9  1F16               	btfss	22,6	;volatile
  4574  01FA  2A00               	goto	l1907
  4575                           
  4576                           ;i2c_eeprom.c: 177:         SSPCON2bits.PEN = 1;
  4577  01FB  1516               	bsf	22,2	;volatile
  4578  01FC                     l251:	
  4579                           ;i2c_eeprom.c: 178:         while (PEN);
  4580                           
  4581  01FC  1916               	btfsc	22,2	;volatile
  4582  01FD  29FC               	goto	l251
  4583                           
  4584                           ;i2c_eeprom.c: 179:         return (0xFE);
  4585  01FE  30FE               	movlw	254
  4586  01FF  0008               	return
  4587  0200                     l1907:	
  4588                           
  4589                           ;i2c_eeprom.c: 182:     SSPBUF = addLow;
  4590  0200  0874               	movf	eeprom_read_16@addLow,w
  4591  0201  0091               	movwf	17	;volatile
  4592  0202                     l254:	
  4593                           ;i2c_eeprom.c: 183:     while (!SSPIF);
  4594                           
  4595  0202  0020               	movlb	0	; select bank0
  4596  0203  1D91               	btfss	17,3	;volatile
  4597  0204  2A02               	goto	l254
  4598                           
  4599                           ;i2c_eeprom.c: 184:     PIR1bits.SSPIF = 0;
  4600  0205  1191               	bcf	17,3	;volatile
  4601                           
  4602                           ;i2c_eeprom.c: 185:     if (SSPCON2bits.ACKSTAT) {
  4603  0206  0024               	movlb	4	; select bank4
  4604  0207  1F16               	btfss	22,6	;volatile
  4605  0208  2A0E               	goto	l257
  4606                           
  4607                           ;i2c_eeprom.c: 186:         SSPCON2bits.PEN = 1;
  4608  0209  1516               	bsf	22,2	;volatile
  4609  020A                     l258:	
  4610                           ;i2c_eeprom.c: 187:         while (PEN);
  4611                           
  4612  020A  1916               	btfsc	22,2	;volatile
  4613  020B  2A0A               	goto	l258
  4614                           
  4615                           ;i2c_eeprom.c: 188:         return (0xFD);
  4616  020C  30FD               	movlw	253
  4617  020D  0008               	return
  4618  020E                     l257:	
  4619                           ;i2c_eeprom.c: 189:     }
  4620                           
  4621                           
  4622                           ;i2c_eeprom.c: 191:     SSPCON2bits.RSEN = 1;
  4623  020E  1496               	bsf	22,1	;volatile
  4624  020F                     l261:	
  4625                           ;i2c_eeprom.c: 192:     while (RSEN);
  4626                           
  4627  020F  1896               	btfsc	22,1	;volatile
  4628  0210  2A0F               	goto	l261
  4629                           
  4630                           ;i2c_eeprom.c: 193:     PIR1bits.SSPIF = 0;
  4631  0211  0020               	movlb	0	; select bank0
  4632  0212  1191               	bcf	17,3	;volatile
  4633                           
  4634                           ;i2c_eeprom.c: 195:     SSPBUF = (slaveAdd+1);
  4635  0213  0876               	movf	eeprom_read_16@slaveAdd,w
  4636  0214  3E01               	addlw	1
  4637  0215  0024               	movlb	4	; select bank4
  4638  0216  0091               	movwf	17	;volatile
  4639  0217                     l264:	
  4640                           ;i2c_eeprom.c: 196:     while (!SSPIF);
  4641                           
  4642  0217  0020               	movlb	0	; select bank0
  4643  0218  1D91               	btfss	17,3	;volatile
  4644  0219  2A17               	goto	l264
  4645                           
  4646                           ;i2c_eeprom.c: 197:     PIR1bits.SSPIF = 0;
  4647  021A  1191               	bcf	17,3	;volatile
  4648                           
  4649                           ;i2c_eeprom.c: 198:     if (SSPCON2bits.ACKSTAT) {
  4650  021B  0024               	movlb	4	; select bank4
  4651  021C  1F16               	btfss	22,6	;volatile
  4652  021D  2A23               	goto	l267
  4653                           
  4654                           ;i2c_eeprom.c: 199:         SSPCON2bits.PEN = 1;
  4655  021E  1516               	bsf	22,2	;volatile
  4656  021F                     l268:	
  4657                           ;i2c_eeprom.c: 200:         while (PEN);
  4658                           
  4659  021F  1916               	btfsc	22,2	;volatile
  4660  0220  2A1F               	goto	l268
  4661                           
  4662                           ;i2c_eeprom.c: 201:         return (0xFC);
  4663  0221  30FC               	movlw	252
  4664  0222  0008               	return
  4665  0223                     l267:	
  4666                           ;i2c_eeprom.c: 202:     }
  4667                           
  4668                           
  4669                           ;i2c_eeprom.c: 204:     SSPCON2bits.RCEN = 1;
  4670  0223  1596               	bsf	22,3	;volatile
  4671  0224                     l271:	
  4672                           ;i2c_eeprom.c: 205:     while (!SSPSTATbits.BF);
  4673                           
  4674  0224  1C14               	btfss	20,0	;volatile
  4675  0225  2A24               	goto	l271
  4676                           
  4677                           ;i2c_eeprom.c: 206:     tempData = SSPBUF;
  4678  0226  0811               	movf	17,w	;volatile
  4679  0227  00F2               	movwf	??_eeprom_read_16
  4680  0228  0872               	movf	??_eeprom_read_16,w
  4681  0229  00F5               	movwf	eeprom_read_16@tempData
  4682                           
  4683                           ;i2c_eeprom.c: 208:     SSPCON2bits.ACKDT = 1;
  4684  022A  1696               	bsf	22,5	;volatile
  4685                           
  4686                           ;i2c_eeprom.c: 209:     SSPCON2bits.ACKEN = 1;
  4687  022B  1616               	bsf	22,4	;volatile
  4688  022C                     l274:	
  4689                           ;i2c_eeprom.c: 210:     while (ACKEN);
  4690                           
  4691  022C  1A16               	btfsc	22,4	;volatile
  4692  022D  2A2C               	goto	l274
  4693                           
  4694                           ;i2c_eeprom.c: 212:     SSPCON2bits.PEN = 1;
  4695  022E  1516               	bsf	22,2	;volatile
  4696  022F                     l277:	
  4697                           ;i2c_eeprom.c: 213:     while(PEN);
  4698                           
  4699  022F  1916               	btfsc	22,2	;volatile
  4700  0230  2A2F               	goto	l277
  4701                           
  4702                           ;i2c_eeprom.c: 214:     return tempData;
  4703  0231  0875               	movf	eeprom_read_16@tempData,w
  4704  0232  0008               	return
  4705  0233                     __end_of_eeprom_read_16:	
  4706                           
  4707                           	psect	intentry
  4708  0004                     __pintentry:	
  4709 ;; *************** function _interruptHandler *****************
  4710 ;; Defined at:
  4711 ;;		line 33 in file "interrupts.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;		None
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  1    wreg      void 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0, pclath, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMMON   BANK0   BANK1
  4725 ;;      Params:         0       0       0
  4726 ;;      Locals:         0       0       0
  4727 ;;      Temps:          0       0       0
  4728 ;;      Totals:         0       0       0
  4729 ;;Total ram usage:        0 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:    1
  4732 ;; This function calls:
  4733 ;;		_on_interrupt_timer_0
  4734 ;; This function is called by:
  4735 ;;		Interrupt level 1
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739  0004                     _interruptHandler:	
  4740                           
  4741                           ;incstack = 0
  4742  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4743                           
  4744                           ; Regs used in _interruptHandler: [wreg+status,2+status,0+pclath+cstack]
  4745  0005  3180               	pagesel	$
  4746                           
  4747                           ;interrupts.c: 36:     if (T0IE && T0IF){
  4748  0006  1A8B               	btfsc	11,5	;volatile
  4749  0007  1D0B               	btfss	11,2	;volatile
  4750  0008  280B               	goto	i1l379
  4751                           
  4752                           ;interrupts.c: 37:         on_interrupt_timer_0();
  4753  0009  23FF               	fcall	_on_interrupt_timer_0
  4754                           
  4755                           ;interrupts.c: 38:         T0IF = 0;
  4756  000A  110B               	bcf	11,2	;volatile
  4757  000B                     i1l379:	
  4758  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4759  000C  0009               	retfie
  4760  000D                     __end_of_interruptHandler:	
  4761                           
  4762                           	psect	text32
  4763  03FF                     __ptext32:	
  4764 ;; *************** function _on_interrupt_timer_0 *****************
  4765 ;; Defined at:
  4766 ;;		line 9 in file "interrupts.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;		None
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;		None
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1    wreg      void 
  4773 ;; Registers used:
  4774 ;;		wreg, status,2
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMMON   BANK0   BANK1
  4780 ;;      Params:         0       0       0
  4781 ;;      Locals:         0       0       0
  4782 ;;      Temps:          0       0       0
  4783 ;;      Totals:         0       0       0
  4784 ;;Total ram usage:        0 bytes
  4785 ;; Hardware stack levels used:    1
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_interruptHandler
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           
  4794                           ;psect for function _on_interrupt_timer_0
  4795  03FF                     _on_interrupt_timer_0:	
  4796                           
  4797                           ;interrupts.c: 14:     seg_disp_sleep++;
  4798                           
  4799                           ;incstack = 0
  4800                           ; Regs used in _on_interrupt_timer_0: [wreg+status,2]
  4801  03FF  3001               	movlw	1
  4802  0400  0020               	movlb	0	; select bank0
  4803  0401  07B2               	addwf	_seg_disp_sleep,f
  4804  0402  3000               	movlw	0
  4805  0403  3DB3               	addwfc	_seg_disp_sleep+1,f
  4806                           
  4807                           ;interrupts.c: 15:     if (seg_disp_sleep >= 14648){
  4808  0404  3039               	movlw	57
  4809  0405  0233               	subwf	_seg_disp_sleep+1,w
  4810  0406  3038               	movlw	56
  4811  0407  1903               	skipnz
  4812  0408  0232               	subwf	_seg_disp_sleep,w
  4813  0409  1C03               	skipc
  4814  040A  2C0E               	goto	i1l2195
  4815                           
  4816                           ;interrupts.c: 16:         seg_disp_sleep = 0;
  4817  040B  01B2               	clrf	_seg_disp_sleep
  4818  040C  01B3               	clrf	_seg_disp_sleep+1
  4819                           
  4820                           ;interrupts.c: 17:         INT_FLAGS.seg_disp_sleep = 1;
  4821  040D  1438               	bsf	_INT_FLAGS,0	;volatile
  4822  040E                     i1l2195:	
  4823                           
  4824                           ;interrupts.c: 20:     INT_FLAGS.seg_disp_vis = 1;
  4825  040E  1538               	bsf	_INT_FLAGS,2	;volatile
  4826                           
  4827                           ;interrupts.c: 22:     seg_disp_save++;
  4828  040F  3001               	movlw	1
  4829  0410  07B0               	addwf	_seg_disp_save,f
  4830  0411  3000               	movlw	0
  4831  0412  3DB1               	addwfc	_seg_disp_save+1,f
  4832                           
  4833                           ;interrupts.c: 23:     if (seg_disp_save >= 1464){
  4834  0413  3005               	movlw	5
  4835  0414  0231               	subwf	_seg_disp_save+1,w
  4836  0415  30B8               	movlw	184
  4837  0416  1903               	skipnz
  4838  0417  0230               	subwf	_seg_disp_save,w
  4839  0418  1C03               	skipc
  4840  0419  0008               	return
  4841                           
  4842                           ;interrupts.c: 24:         seg_disp_save = 0;
  4843  041A  01B0               	clrf	_seg_disp_save
  4844  041B  01B1               	clrf	_seg_disp_save+1
  4845                           
  4846                           ;interrupts.c: 25:         INT_FLAGS.seg_disp_save = 1;
  4847  041C  15B8               	bsf	_INT_FLAGS,3	;volatile
  4848  041D  0008               	return
  4849  041E                     __end_of_on_interrupt_timer_0:	
  4850  007E                     btemp	set	126	;btemp
  4851  007E                     int$flags	set	126
  4852  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         37
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      54
    BANK1            32      0       0

Pointer List with Targets:

    p_btns	PTR struct .[5] size(1) Largest target is 5
		 -> v_btns(BANK0[5]), 

    p_disp	PTR struct . size(1) Largest target is 3
		 -> v_disp(BANK0[3]), NULL(NULL[0]), 

    seg_disp_47_on@s_t	PTR struct . size(1) Largest target is 3
		 -> v_disp(BANK0[3]), NULL(NULL[0]), 

    seg_disp_47_set_val@s_t	PTR struct . size(1) Largest target is 3
		 -> v_disp(BANK0[3]), NULL(NULL[0]), 

    seg_disp_47_get_val@s_t	PTR struct . size(1) Largest target is 3
		 -> v_disp(BANK0[3]), NULL(NULL[0]), 

    update_seg_disp_47@s_t	PTR struct . size(1) Largest target is 3
		 -> v_disp(BANK0[3]), NULL(NULL[0]), 

    create_seg_disp_47@s_t	PTR struct . size(1) Largest target is 3
		 -> v_disp(BANK0[3]), NULL(NULL[0]), 

    vis_next_digit@s_t	PTR struct . size(1) Largest target is 3
		 -> v_disp(BANK0[3]), NULL(NULL[0]), 

    sp__eeprom_sequential_4_read	PTR unsigned char  size(1) Largest target is 4
		 -> ee_seq_4(BANK0[4]), NULL(NULL[0]), 

    update_switch@s_t	PTR struct . size(1) Largest target is 5
		 -> v_btns(BANK0[5]), 

    create_switch@s_t	PTR struct . size(1) Largest target is 5
		 -> v_btns(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_change_category
    _update_switches->_update_switch
    _update_seg_disp_47->_seg_disp_47_set_val
    _vis_next_digit->___lwmod
    ___lwmod->___lwdiv
    _cat_auto_save->_set_cat_val
    _rst_storage->_set_cat_val
    _init_structs->_create_switch
    _change_category->_get_cat_val
    _set_cat_val->_eeprom_write_16
    _get_cat_val->_eeprom_read_16

Critical Paths under _interruptHandler in COMMON

    None.

Critical Paths under _main in BANK0

    _update_int_flags->_vis_next_digit
    _cat_auto_save->_set_cat_val
    _rst_storage->_set_cat_val
    _change_category->_get_cat_val

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8190
                                             11 BANK0      3     3      0
                    _change_category
                     _eeprom_read_16
                    _eeprom_write_16
                        _get_cat_val
                               _init
                       _init_structs
                        _rst_storage
                   _update_int_flags
                 _update_seg_disp_47
                    _update_switches
 ---------------------------------------------------------------------------------
 (1) _update_switches                                      3     3      0    1010
                                             10 COMMON     3     3      0
                  _get_switch_toggle
                      _update_switch
 ---------------------------------------------------------------------------------
 (2) _update_switch                                       10     5      5     678
                                              0 COMMON    10     5      5
 ---------------------------------------------------------------------------------
 (2) _get_switch_toggle                                    4     3      1     242
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _update_seg_disp_47                                   3     1      2     459
                                              5 COMMON     3     1      2
                _seg_disp_47_set_val
 ---------------------------------------------------------------------------------
 (2) _seg_disp_47_set_val                                  5     3      2     197
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _update_int_flags                                     0     0      0    2484
                      _cat_auto_save
                     _seg_disp_47_on
                     _vis_next_digit
 ---------------------------------------------------------------------------------
 (2) _vis_next_digit                                      11    11      0    1453
                                              0 BANK0     11    11      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                _seg_disp_47_get_val
 ---------------------------------------------------------------------------------
 (3) _seg_disp_47_get_val                                  8     6      2     102
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     444
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _seg_disp_47_on                                       1     1      0      55
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _cat_auto_save                                        1     1      0     976
                                             11 COMMON     1     1      0
                        _set_cat_val
 ---------------------------------------------------------------------------------
 (1) _rst_storage                                          2     2      0    1044
                                             11 COMMON     2     2      0
                        _set_cat_val
 ---------------------------------------------------------------------------------
 (1) _init_structs                                         1     1      0     396
                                              2 COMMON     1     1      0
                 _create_seg_disp_47
                      _create_switch
 ---------------------------------------------------------------------------------
 (2) _create_switch                                        2     2      0     275
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _create_seg_disp_47                                   1     1      0     121
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                           _init_i2c
                     _init_interrupt
                  _init_oscillerator
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
                          _res_ports
                          _set_ports
 ---------------------------------------------------------------------------------
 (3) _set_ports                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _res_ports                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscillerator                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
               _init_interrupt_timer
 ---------------------------------------------------------------------------------
 (3) _init_interrupt_timer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _change_category                                      2     2      0    1489
                                             12 COMMON     2     2      0
                        _get_cat_val
                        _set_cat_val
 ---------------------------------------------------------------------------------
 (3) _set_cat_val                                          8     6      2     976
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                    _eeprom_write_16
 ---------------------------------------------------------------------------------
 (4) _eeprom_write_16                                      7     4      3     438
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (1) _get_cat_val                                         12    10      2     491
                                              7 COMMON     5     3      2
                                              0 BANK0      7     7      0
                     _eeprom_read_16
 ---------------------------------------------------------------------------------
 (2) _eeprom_read_16                                       7     5      2     309
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interruptHandler                                     0     0      0       0
               _on_interrupt_timer_0
 ---------------------------------------------------------------------------------
 (6) _on_interrupt_timer_0                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _change_category
     _get_cat_val
       _eeprom_read_16
     _set_cat_val
       _eeprom_write_16
   _eeprom_read_16
   _eeprom_write_16
   _get_cat_val
     _eeprom_read_16
   _init
     _init_i2c
     _init_interrupt
       _init_interrupt_timer
     _init_oscillerator
     _init_ports
       _res_ports
       _set_ports
   _init_structs
     _create_seg_disp_47
     _create_switch
   _rst_storage
     _set_cat_val
       _eeprom_write_16
   _update_int_flags
     _cat_auto_save
       _set_cat_val
         _eeprom_write_16
     _seg_disp_47_on
     _vis_next_digit
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _seg_disp_47_get_val
   _update_seg_disp_47
     _seg_disp_47_set_val
   _update_switches
     _get_switch_toggle
     _update_switch

 _interruptHandler (ROOT)
   _on_interrupt_timer_0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      44       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      E      36       6       67.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      44       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Dec 02 15:25:02 2019

         eeprom_read_16@addLow 0074                    __CFG_CP$OFF 0000                    _SSPSTATbits 0214  
             ??_init_interrupt 0070            ___wmul@multiplicand 0072                   get_cat_val@d 004A  
                 get_cat_val@i 004B          eeprom_read_16@addHigh 0073                  _update_switch 0171  
                          l210 02EF                            l203 02E0                            l221 0301  
                          l214 02F4                            l206 02E7                            l231 0314  
                          l225 0309                            l218 02FC                            l251 01FC  
                          l243 01EE                            l236 01DF                            l228 030E  
                          l261 020F                            l254 0202                            l271 0224  
                          l247 01F4                            l239 01E6                            l264 0217  
                          l257 020E                            l274 022C                            l258 020A  
                          l267 0223                            l268 021F                            l540 00F6  
                          l277 022F                            l541 00F7                            l533 00EE  
                          l534 00EF                            l543 00FD                            l535 00F0  
                          l544 00FE                            l536 00F1                            l545 00FF  
                          l546 0102                            l538 00F4                            l539 00F5  
                          l667 045F                            _PEN 10B2                            _SEN 10B0  
                          _dab 0053                   __CFG_BORV$LO 0000                            wreg 0009  
                 __CFG_IESO$ON 0000         __end_of_seg_disp_47_on 0524                   __CFG_LVP$OFF 0000  
   __size_of_get_switch_toggle 0015                           l2001 0382                           l2013 038D  
                         l2101 0081                           l2015 0399                           l2023 03AE  
                         l2111 008B                           l2103 0083                           l2113 008D  
                         l2105 0085                           l2121 00BC                           l2019 03A5  
                         l2115 008F                           l2107 0087                           l2109 0089  
        __end_of_cat_auto_save 0457                           l2119 0093                           l2057 01C6  
                         l2241 00E9                           l2147 0290                           l2227 04E4  
                         l2157 029E                           l2069 04CC                           l2245 00F2  
                         l2253 0107                           l2095 007B                           l2087 002B  
                         l2263 015B                           l2247 00F8                           l2255 013F  
                         l2177 0448                           l2097 007D                           l2089 0046  
                         l2249 0105                           l2099 007F                           l2259 014E  
                         l2269 015C                           l2437 0110                           l2373 0260  
                         l2439 009C                           l2295 049B                           l2289 0495  
                         l2385 027B                           l2377 0268                           l2369 025D  
                         l1907 0200                           l1863 02FF                           l1867 030C  
                         l1859 02F2                           l1955 0329                           l1991 0367  
                         l1967 0459                           l1899 01F2                           l1997 0379  
                         l1989 035B                           _T0IE 005D                           _T0IF 005A  
                         u2040 01B9                           u2050 01BA                           u2035 01AA  
                         u2124 0073                           u2060 04BF                           u2125 0070  
                         _LATA 010C                           u2070 04C5                           u2062 04C0  
                         _LATB 010D                           _LATC 010E                           u2072 04C6  
                         u2145 02B9                           u2154 02C2                           u2155 02C0  
                         u2185 0446                           u1915 0368                           u1925 0372  
                         u2557 0250                           u2567 032C                           u1935 037A  
                         u1855 0460                           u2577 02A1                           u1865 0465  
                         u1965 0390                           u1895 035E                           u1985 039F  
                         u1995 03A6                           _TMR0 0015                           _RSEN 10B1  
                 __CFG_WRT$OFF 0000                  __CFG_FCMEN$ON 0000                    _rst_storage 04E3  
                         _main 0233       __end_of_interruptHandler 000D                           _init 0538  
                         fsr0h 0005                           fsr1h 0007                           indf0 0000  
                         fsr0l 0004                           indf1 0001                           fsr1l 0006  
                         btemp 007E                  __CFG_BOREN$ON 0000  __size_of_init_interrupt_timer 000C  
                         start 000D                 get_cat_val@val 0048                  __CFG_MCLRE$ON 0000  
              ??_create_switch 0070                _update_switches 00CA                _change_category 04CE  
               ?_update_switch 0070         eeprom_read_16@tempData 0075         seg_disp_47_get_val@s_t 0077  
       seg_disp_47_get_val@val 0075         eeprom_read_16@slaveAdd 0076                          ?_main 0070  
             _update_int_flags 048B                          _ACKEN 10B4                          ?_init 0070  
                __CFG_WDTE$OFF 0000     __end_of_update_seg_disp_47 051D             _create_seg_disp_47 04A3  
              __end_of___lwdiv 0387                __end_of___lwmod 03B3                          i1l379 000B  
                        _TRISA 008C                          _TRISB 008D                          _TRISC 008E  
                        _SSPIF 008B                ?_seg_disp_47_on 0070            ?_create_seg_disp_47 0070  
                        _scene 0035                          main@f 0052                          main@k 0051  
                        status 0003                          wtemp0 007E           _on_interrupt_timer_0 03FF  
              __initialization 000E           ??_create_seg_disp_47 0070                   __end_of_main 0285  
                 __end_of_init 053D       seg_disp_47_set_val@value 0070                 __CFG_LPBOR$OFF 0000  
                       ??_main 0050                         ??_init 0070                 _vis_next_digit 0017  
             ??_eeprom_read_16 0072            _seg_disp_47_get_val 03DE                         _ANSELA 018C  
                       _ANSELB 018D                         _ANSELC 018E           get_switch_toggle@val 0073  
                       i1l2195 040E                         _SSPADD 0212                         _SSPBUF 0211  
          _seg_disp_47_set_val 0472                   ?_set_cat_val 0077        __end_of_update_switches 0171  
        ?_on_interrupt_timer_0 0070                 __CFG_PWRTE$OFF 0000        __end_of_change_category 04E3  
         __size_of_get_cat_val 0050              _init_oscillerator 052B                  ?_init_structs 0070  
                       ___wmul 0457             ?_init_oscillerator 0070                 __CFG_STVREN$ON 0000  
              ??_update_switch 0075           ?_seg_disp_47_get_val 0070                      ??___lwdiv 0074  
                    ??___lwmod 007C               __end_of_init_i2c 0515                         _p_disp 0055  
                       _p_btns 0025                         _v_disp 0042                         _v_btns 0039  
       __end_of_vis_next_digit 00CA           ?_seg_disp_47_set_val 0070            ??_init_oscillerator 0070  
     __size_of_eeprom_write_16 0042        vis_next_digit@digit_val 004A        __end_of__initialization 0014  
        update_seg_disp_47@s_t 0077                  _last_save_cat 0034                  _last_save_val 002A  
       eeprom_write_16@addHigh 0075        change_category@category 007D      __end_of_init_oscillerator 0532  
               ??_init_structs 0072                 __pcstackCOMMON 0070          ??_seg_disp_47_get_val 0072  
        ??_seg_disp_47_set_val 0072                ?_vis_next_digit 0070         seg_disp_47_set_val@s_t 0074  
               _OPTION_REGbits 0095               create_switch@s_t 0071                 set_cat_val@val 0077  
                   __pbssBANK0 0020                   ?_rst_storage 0070                __CFG_VCAPEN$OFF 0000  
       ??_on_interrupt_timer_0 0070       __end_of_update_int_flags 04A3              ?_interruptHandler 0070  
             ?_update_switches 0070               ?_change_category 0070             ??_interruptHandler 0070  
                   __pmaintext 0233                        ?___wmul 0070                   rst_storage@i 007C  
                   __pintentry 0004             __size_of_res_ports 000D               ??_seg_disp_47_on 0070  
 __end_of_init_interrupt_timer 050C             __size_of_set_ports 0007                        _SSPCON1 0215  
            ??_eeprom_write_16 0073             _update_seg_disp_47 0515                      ?_init_i2c 0070  
   __size_of_init_oscillerator 0007            ?_update_seg_disp_47 0075           __size_of_set_cat_val 003C  
              __size_of___wmul 001B                        ___lwdiv 0353                        ___lwmod 0387  
        __end_of_create_switch 043B         __size_of_cat_auto_save 001C                     _init_ports 053D  
                      __ptext1 00CA                        __ptext2 0171                        __ptext3 04B9  
                      __ptext4 0515                        __ptext5 0472                        __ptext6 048B  
                      __ptext7 0017                        __ptext8 03DE                        __ptext9 0457  
                      _cur_cat 0037                        _cur_val 002E           ??_update_seg_disp_47 0077  
      __size_of_init_interrupt 0003           __end_of_init_structs 03DE                        clrloop0 0533  
         end_of_initialization 0014               update_switch@s_t 0079                     ??_init_i2c 0070  
            __end_of_res_ports 0500               update_switches@i 007C                      _INT_FLAGS 0038  
            __end_of_set_ports 052B    __size_of_create_seg_disp_47 0016                      _PORTBbits 000D  
             __CFG_FOSC$INTOSC 0000                  _seg_disp_save 0030                      _TRISBbits 008D  
                    _TRISCbits 008E            _extended_rst_streak 002C            vis_next_digit@sLATB 004B  
                _cat_auto_save 043B                  ??_get_cat_val 0079           _init_interrupt_timer 0500  
         __size_of_rst_storage 0010               ??_vis_next_digit 0045                 __end_of___wmul 0472  
        __end_of_update_switch 01D4                    ?_init_ports 0070            start_initialization 000E  
      eeprom_write_16@slaveAdd 0074          create_seg_disp_47@s_t 0070                 ?_cat_auto_save 0070  
           eeprom_write_16@add 0070          ?_init_interrupt_timer 0070    __end_of_seg_disp_47_get_val 03FF  
            ?_update_int_flags 0070            update_switch@streak 0071        __size_of_eeprom_read_16 005F  
           ??_update_int_flags 007E    __end_of_seg_disp_47_set_val 048B            __end_of_get_cat_val 02D5  
                     ??___wmul 0074      update_seg_disp_47@cur_val 0075      __size_of_interruptHandler 0009  
              _eeprom_write_16 02D5          __size_of_init_structs 002B          eeprom_write_16@eeData 0072  
        eeprom_write_16@addLow 0076                      ___latbits 0000                  __pcstackBANK0 0045  
               _init_interrupt 0540            __size_of_init_ports 0003                      __pnvBANK0 0053  
            __size_of_init_i2c 0009  __size_of_on_interrupt_timer_0 001F               ___lwdiv@dividend 0072  
                 _init_structs 03B3                       ?___lwdiv 0070                       ?___lwmod 0078  
     __size_of_update_switches 00A7       __size_of_change_category 0015         __end_of_init_interrupt 0543  
              ??_cat_auto_save 007B               ___lwdiv@quotient 0075         ??_init_interrupt_timer 0070  
              vis_next_digit@p 004C                 ___wmul@product 0074                    _get_cat_val 0285  
                ??_set_cat_val 0079                       _LATCbits 010E                      clear_ram0 0532  
                    _res_ports 04F3                       _PIR1bits 0011                      _set_ports 0524  
      __end_of_eeprom_write_16 0317              ___wmul@multiplier 0070                ?_init_interrupt 0070  
  __size_of_update_seg_disp_47 0008        __size_of_seg_disp_47_on 0007         __size_of_create_switch 001D  
               _eeprom_read_16 01D4     __end_of_create_seg_disp_47 04B9                     ?_res_ports 0070  
                   ?_set_ports 0070            __end_of_set_cat_val 0353               __size_of___lwdiv 0034  
             __size_of___lwmod 002C                   ??_init_ports 0070               _interruptHandler 0004  
         get_cat_val@add_start 0045                   set_cat_val@i 0048              ??_update_switches 007A  
                     _ee_seq_4 003E       get_switch_toggle@old_s_t 0072       get_switch_toggle@new_s_t 0070  
         set_cat_val@add_start 0045                ___lwdiv@divisor 0070              ??_change_category 007C  
              ___lwdiv@counter 0077                       __ptext10 0387                       __ptext11 0353  
                     __ptext20 0524                       __ptext12 051D                       __ptext21 04F3  
                     __ptext13 043B                       __ptext30 01D4                       __ptext22 052B  
                     __ptext14 04E3                       __ptext23 0540                       __ptext15 03B3  
                     __ptext32 03FF                       __ptext24 0500                       __ptext16 041E  
                     __ptext25 050C                       __ptext17 04A3                       __ptext26 04CE  
                     __ptext18 0538                       __ptext27 0317                       __ptext19 053D  
                     __ptext28 02D5                       __ptext29 0285                  ??_rst_storage 007B  
            _get_switch_toggle 04B9                       _init_i2c 050C         __end_of_eeprom_read_16 0233  
                __size_of_main 0052                  __size_of_init 0005                       _old_btns 0020  
           __end_of_init_ports 0540             ?_get_switch_toggle 0070               ?_eeprom_write_16 0070  
                     int$flags 007E            ??_get_switch_toggle 0071                       _rst_flag 0036  
            vis_next_digit@s_t 004F              vis_next_digit@val 0048                  _create_switch 041E  
    __size_of_update_int_flags 0018                     _INTCONbits 000B              update_switch@sbtn 0070  
    __end_of_get_switch_toggle 04CE              seg_disp_47_on@s_t 0070                       intlevel1 0000  
             ___lwmod@dividend 007A                ?_eeprom_read_16 0070         __size_of_update_switch 0063  
          get_cat_val@category 0047              __CFG_CLKOUTEN$OFF 0000                    _set_cat_val 0317  
          set_cat_val@category 0047                     _OSCCONbits 0099                    ??_res_ports 0070  
          __end_of_rst_storage 04F3                    ??_set_ports 0070   __size_of_seg_disp_47_get_val 0021  
               ?_create_switch 0070   __size_of_seg_disp_47_set_val 0019    vis_next_digit@digit_divider 004D  
 __end_of_on_interrupt_timer_0 041E                ___lwmod@divisor 0078        __size_of_vis_next_digit 00B3  
              ___lwmod@counter 007D                    _SSPCON2bits 0216                 _seg_disp_47_on 051D  
                 ?_get_cat_val 0077                 _seg_disp_sleep 0032              eeprom_read_16@add 0070  
