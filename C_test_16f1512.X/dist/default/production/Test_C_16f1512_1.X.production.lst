

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jun 05 12:58:32 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1512
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.05
    18                           ; Generated 20/12/2018 GMT
    19                           ; 
    20                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F1512 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  008E                     	;# 
    81  0090                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0095                     	;# 
    85  0096                     	;# 
    86  0097                     	;# 
    87  0099                     	;# 
    88  009A                     	;# 
    89  009B                     	;# 
    90  009B                     	;# 
    91  009B                     	;# 
    92  009B                     	;# 
    93  009C                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  0116                     	;# 
   101  0117                     	;# 
   102  011D                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  018E                     	;# 
   106  0191                     	;# 
   107  0191                     	;# 
   108  0192                     	;# 
   109  0193                     	;# 
   110  0193                     	;# 
   111  0194                     	;# 
   112  0195                     	;# 
   113  0196                     	;# 
   114  0197                     	;# 
   115  0199                     	;# 
   116  019A                     	;# 
   117  019B                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019C                     	;# 
   122  019C                     	;# 
   123  019D                     	;# 
   124  019E                     	;# 
   125  019F                     	;# 
   126  020D                     	;# 
   127  0210                     	;# 
   128  0211                     	;# 
   129  0211                     	;# 
   130  0212                     	;# 
   131  0212                     	;# 
   132  0213                     	;# 
   133  0213                     	;# 
   134  0214                     	;# 
   135  0214                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0216                     	;# 
   140  0216                     	;# 
   141  0217                     	;# 
   142  0217                     	;# 
   143  0291                     	;# 
   144  0291                     	;# 
   145  0292                     	;# 
   146  0293                     	;# 
   147  0298                     	;# 
   148  0298                     	;# 
   149  0299                     	;# 
   150  029A                     	;# 
   151  0394                     	;# 
   152  0395                     	;# 
   153  0396                     	;# 
   154  0FE4                     	;# 
   155  0FE5                     	;# 
   156  0FE6                     	;# 
   157  0FE7                     	;# 
   158  0FE8                     	;# 
   159  0FE9                     	;# 
   160  0FEA                     	;# 
   161  0FEB                     	;# 
   162  0FED                     	;# 
   163  0FEE                     	;# 
   164  0FEF                     	;# 
   165  0711                     	;# 
   166  0712                     	;# 
   167  0713                     	;# 
   168  0714                     	;# 
   169  0715                     	;# 
   170  0716                     	;# 
   171  0717                     	;# 
   172  0718                     	;# 
   173  0719                     	;# 
   174  071A                     	;# 
   175  071A                     	;# 
   176  071A                     	;# 
   177  071B                     	;# 
   178  071C                     	;# 
   179  071C                     	;# 
   180  071C                     	;# 
   181  071D                     	;# 
   182  0000                     	;# 
   183  0001                     	;# 
   184  0002                     	;# 
   185  0003                     	;# 
   186  0004                     	;# 
   187  0005                     	;# 
   188  0006                     	;# 
   189  0007                     	;# 
   190  0008                     	;# 
   191  0009                     	;# 
   192  000A                     	;# 
   193  000B                     	;# 
   194  000C                     	;# 
   195  000D                     	;# 
   196  000E                     	;# 
   197  0010                     	;# 
   198  0011                     	;# 
   199  0012                     	;# 
   200  0015                     	;# 
   201  0016                     	;# 
   202  0016                     	;# 
   203  0017                     	;# 
   204  0018                     	;# 
   205  0019                     	;# 
   206  001A                     	;# 
   207  001B                     	;# 
   208  001C                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009B                     	;# 
   222  009B                     	;# 
   223  009B                     	;# 
   224  009C                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  0116                     	;# 
   232  0117                     	;# 
   233  011D                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  018E                     	;# 
   237  0191                     	;# 
   238  0191                     	;# 
   239  0192                     	;# 
   240  0193                     	;# 
   241  0193                     	;# 
   242  0194                     	;# 
   243  0195                     	;# 
   244  0196                     	;# 
   245  0197                     	;# 
   246  0199                     	;# 
   247  019A                     	;# 
   248  019B                     	;# 
   249  019B                     	;# 
   250  019B                     	;# 
   251  019B                     	;# 
   252  019C                     	;# 
   253  019C                     	;# 
   254  019D                     	;# 
   255  019E                     	;# 
   256  019F                     	;# 
   257  020D                     	;# 
   258  0210                     	;# 
   259  0211                     	;# 
   260  0211                     	;# 
   261  0212                     	;# 
   262  0212                     	;# 
   263  0213                     	;# 
   264  0213                     	;# 
   265  0214                     	;# 
   266  0214                     	;# 
   267  0215                     	;# 
   268  0215                     	;# 
   269  0215                     	;# 
   270  0216                     	;# 
   271  0216                     	;# 
   272  0217                     	;# 
   273  0217                     	;# 
   274  0291                     	;# 
   275  0291                     	;# 
   276  0292                     	;# 
   277  0293                     	;# 
   278  0298                     	;# 
   279  0298                     	;# 
   280  0299                     	;# 
   281  029A                     	;# 
   282  0394                     	;# 
   283  0395                     	;# 
   284  0396                     	;# 
   285  0FE4                     	;# 
   286  0FE5                     	;# 
   287  0FE6                     	;# 
   288  0FE7                     	;# 
   289  0FE8                     	;# 
   290  0FE9                     	;# 
   291  0FEA                     	;# 
   292  0FEB                     	;# 
   293  0FED                     	;# 
   294  0FEE                     	;# 
   295  0FEF                     	;# 
   296  0711                     	;# 
   297  0712                     	;# 
   298  0713                     	;# 
   299  0714                     	;# 
   300  0715                     	;# 
   301  0716                     	;# 
   302  0717                     	;# 
   303  0718                     	;# 
   304  0719                     	;# 
   305  071A                     	;# 
   306  071A                     	;# 
   307  071A                     	;# 
   308  071B                     	;# 
   309  071C                     	;# 
   310  071C                     	;# 
   311  071C                     	;# 
   312  071D                     	;# 
   313  000C                     _PORTAbits	set	12
   314  0015                     _TMR0	set	21
   315  000B                     _INTCONbits	set	11
   316  005A                     _T0IF	set	90
   317  005D                     _T0IE	set	93
   318  0095                     _OPTION_REG	set	149
   319  0095                     _OPTION_REGbits	set	149
   320  008E                     _TRISC	set	142
   321  008D                     _TRISB	set	141
   322  008C                     _TRISA	set	140
   323  0099                     _OSCCONbits	set	153
   324  010C                     _LATAbits	set	268
   325  010E                     _LATC	set	270
   326  010D                     _LATB	set	269
   327  010C                     _LATA	set	268
   328  018E                     _ANSELC	set	398
   329  018D                     _ANSELB	set	397
   330  018C                     _ANSELA	set	396
   331                           
   332                           ; #config settings
   333  0000                     
   334                           	psect	cinit
   335  001E                     start_initialization:	
   336  001E                     __initialization:	
   337                           
   338                           ; Clear objects allocated to COMMON
   339  001E  01F0               	clrf	__pbssCOMMON& (0+127)
   340  001F  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   341  0020  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   342  0021                     end_of_initialization:	
   343                           ;End of C runtime variable initialization code
   344                           
   345  0021                     __end_of__initialization:	
   346  0021  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   347  0022  0020               	movlb	0
   348  0023  288E               	ljmp	_main	;jump to C main() function
   349                           
   350                           	psect	bssCOMMON
   351  0070                     __pbssCOMMON:	
   352  0070                     _btn_streak:	
   353  0070                     	ds	1
   354  0071                     _btn_state:	
   355  0071                     	ds	1
   356  0072                     _counter:	
   357  0072                     	ds	1
   358                           
   359                           	psect	cstackCOMMON
   360  0073                     __pcstackCOMMON:	
   361  0073                     ?_btn_dn:	
   362  0073                     ??_btn_dn:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0073                     ?_btn_up:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0073                     ??_btn_up:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0073                     ?_toggle_RA2:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0073                     ??_toggle_RA2:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0073                     ?_init:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0073                     ?_update:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0073                     ?_fixedUpdate:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0073                     ?_myIsr:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0073                     ?_main:	
   390                           ; 1 bytes @ 0x0
   391                           
   392                           
   393                           ; 1 bytes @ 0x0
   394  0073                     	ds	1
   395  0074                     ??_fixedUpdate:	
   396                           
   397                           ; 1 bytes @ 0x1
   398  0074                     	ds	1
   399  0075                     ??_init:	
   400  0075                     ??_update:	
   401                           ; 1 bytes @ 0x2
   402                           
   403  0075                     ??_myIsr:	
   404                           ; 1 bytes @ 0x2
   405                           
   406  0075                     ??_main:	
   407                           ; 1 bytes @ 0x2
   408                           
   409                           
   410                           	psect	maintext
   411  008E                     __pmaintext:	
   412                           ; 1 bytes @ 0x2
   413 ;;
   414 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   415 ;;
   416 ;; *************** function _main *****************
   417 ;; Defined at:
   418 ;;		line 119 in file "LEDTurnon.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;		None
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, status,2, status,0, pclath, cstack
   427 ;; Tracked objects:
   428 ;;		On entry : B1F/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMMON   BANK0   BANK1
   432 ;;      Params:         0       0       0
   433 ;;      Locals:         0       0       0
   434 ;;      Temps:          0       0       0
   435 ;;      Totals:         0       0       0
   436 ;;Total ram usage:        0 bytes
   437 ;; Hardware stack levels required when called:    4
   438 ;; This function calls:
   439 ;;		_init
   440 ;;		_update
   441 ;; This function is called by:
   442 ;;		Startup code after reset
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           
   447                           ;psect for function _main
   448  008E                     _main:	
   449                           
   450                           ;LEDTurnon.c: 120:     init();
   451                           
   452                           ;incstack = 0
   453                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   454  008E  2024               	fcall	_init
   455  008F                     l734:	
   456                           
   457                           ;LEDTurnon.c: 122:         update();
   458  008F  2091               	fcall	_update
   459                           
   460                           ;LEDTurnon.c: 123:         if (T0IF){
   461  0090  288F               	goto	l734
   462  0091                     __end_of_main:	
   463                           
   464                           	psect	text1
   465  0091                     __ptext1:	
   466 ;; *************** function _update *****************
   467 ;; Defined at:
   468 ;;		line 81 in file "LEDTurnon.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		None
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1
   482 ;;      Params:         0       0       0
   483 ;;      Locals:         0       0       0
   484 ;;      Temps:          0       0       0
   485 ;;      Totals:         0       0       0
   486 ;;Total ram usage:        0 bytes
   487 ;; Hardware stack levels used:    1
   488 ;; Hardware stack levels required when called:    3
   489 ;; This function calls:
   490 ;;		Nothing
   491 ;; This function is called by:
   492 ;;		_main
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           
   497                           ;psect for function _update
   498  0091                     _update:	
   499                           
   500                           ;incstack = 0
   501                           ; Regs used in _update: []
   502  0091  0008               	return
   503  0092                     __end_of_update:	
   504                           
   505                           	psect	text2
   506  0024                     __ptext2:	
   507 ;; *************** function _init *****************
   508 ;; Defined at:
   509 ;;		line 42 in file "LEDTurnon.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, status,2, status,0
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMMON   BANK0   BANK1
   523 ;;      Params:         0       0       0
   524 ;;      Locals:         0       0       0
   525 ;;      Temps:          0       0       0
   526 ;;      Totals:         0       0       0
   527 ;;Total ram usage:        0 bytes
   528 ;; Hardware stack levels used:    1
   529 ;; Hardware stack levels required when called:    3
   530 ;; This function calls:
   531 ;;		Nothing
   532 ;; This function is called by:
   533 ;;		_main
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           
   538                           ;psect for function _init
   539  0024                     _init:	
   540                           
   541                           ;LEDTurnon.c: 44:     OSCCONbits.SCS1 = 1;
   542                           
   543                           ;incstack = 0
   544                           ; Regs used in _init: [wreg+status,2+status,0]
   545  0024  0021               	movlb	1	; select bank1
   546  0025  1499               	bsf	25,1	;volatile
   547                           
   548                           ;LEDTurnon.c: 46:     OSCCONbits.IRCF = 0b0111;
   549  0026  0819               	movf	25,w	;volatile
   550  0027  3987               	andlw	-121
   551  0028  3838               	iorlw	56
   552  0029  0099               	movwf	25	;volatile
   553                           
   554                           ;LEDTurnon.c: 49:     TRISA = 0xFF;
   555  002A  30FF               	movlw	255
   556  002B  008C               	movwf	12	;volatile
   557                           
   558                           ;LEDTurnon.c: 50:     TRISB = 0xFF;
   559  002C  30FF               	movlw	255
   560  002D  008D               	movwf	13	;volatile
   561                           
   562                           ;LEDTurnon.c: 51:     TRISC = 0xFF;
   563  002E  30FF               	movlw	255
   564  002F  008E               	movwf	14	;volatile
   565                           
   566                           ;LEDTurnon.c: 54:     LATA = 0x00;
   567  0030  0022               	movlb	2	; select bank2
   568  0031  018C               	clrf	12	;volatile
   569                           
   570                           ;LEDTurnon.c: 55:     LATB = 0x00;
   571  0032  018D               	clrf	13	;volatile
   572                           
   573                           ;LEDTurnon.c: 56:     LATC = 0x00;
   574  0033  018E               	clrf	14	;volatile
   575                           
   576                           ;LEDTurnon.c: 59:     ANSELA = 0x00;
   577  0034  0023               	movlb	3	; select bank3
   578  0035  018C               	clrf	12	;volatile
   579                           
   580                           ;LEDTurnon.c: 60:     ANSELB = 0x00;
   581  0036  018D               	clrf	13	;volatile
   582                           
   583                           ;LEDTurnon.c: 61:     ANSELC = 0x00;
   584  0037  018E               	clrf	14	;volatile
   585                           
   586                           ;LEDTurnon.c: 64:     TRISA = 0b11110001;
   587  0038  30F1               	movlw	241
   588  0039  0021               	movlb	1	; select bank1
   589  003A  008C               	movwf	12	;volatile
   590                           
   591                           ;LEDTurnon.c: 68:     INTCONbits.INTF = 0;
   592  003B  108B               	bcf	11,1	;volatile
   593                           
   594                           ;LEDTurnon.c: 69:     OPTION_REGbits.INTEDG = 0;
   595  003C  1315               	bcf	21,6	;volatile
   596                           
   597                           ;LEDTurnon.c: 70:     INTCONbits.INTE = 1;
   598  003D  160B               	bsf	11,4	;volatile
   599                           
   600                           ;LEDTurnon.c: 72:     T0IE = 1;
   601  003E  168B               	bsf	11,5	;volatile
   602                           
   603                           ;LEDTurnon.c: 73:     TMR0 = 0;
   604  003F  0020               	movlb	0	; select bank0
   605  0040  0195               	clrf	21	;volatile
   606                           
   607                           ;LEDTurnon.c: 74:     OPTION_REG = 0B00001000;
   608  0041  3008               	movlw	8
   609  0042  0021               	movlb	1	; select bank1
   610  0043  0095               	movwf	21	;volatile
   611                           
   612                           ;LEDTurnon.c: 76:     INTCONbits.GIE = 1;
   613  0044  178B               	bsf	11,7	;volatile
   614  0045  0008               	return
   615  0046                     __end_of_init:	
   616                           
   617                           	psect	intentry
   618  0004                     __pintentry:	
   619 ;; *************** function _myIsr *****************
   620 ;; Defined at:
   621 ;;		line 99 in file "LEDTurnon.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, pclath, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1
   635 ;;      Params:         0       0       0
   636 ;;      Locals:         0       0       0
   637 ;;      Temps:          0       0       0
   638 ;;      Totals:         0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; Hardware stack levels required when called:    2
   642 ;; This function calls:
   643 ;;		_fixedUpdate
   644 ;;		_toggle_RA2
   645 ;; This function is called by:
   646 ;;		Interrupt level 1
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650  0004                     _myIsr:	
   651                           
   652                           ;incstack = 0
   653  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   654                           
   655                           ; Regs used in _myIsr: [wreg+status,2+status,0+pclath+cstack]
   656  0005  3180               	pagesel	$
   657                           
   658                           ;LEDTurnon.c: 101:     if (INTCONbits.INTE && INTCONbits.INTF){
   659  0006  1A0B               	btfsc	11,4	;volatile
   660  0007  1C8B               	btfss	11,1	;volatile
   661  0008  280B               	goto	i1l722
   662                           
   663                           ;LEDTurnon.c: 103:         toggle_RA2();
   664  0009  2082               	fcall	_toggle_RA2
   665                           
   666                           ;LEDTurnon.c: 106:         INTCONbits.INTF = 0;
   667  000A  108B               	bcf	11,1	;volatile
   668  000B                     i1l722:	
   669                           
   670                           ;LEDTurnon.c: 109:     if (T0IE && T0IF){
   671  000B  1A8B               	btfsc	11,5	;volatile
   672  000C  1D0B               	btfss	11,2	;volatile
   673  000D  281B               	goto	i1l64
   674                           
   675                           ;LEDTurnon.c: 110:         LATAbits.LATA3 = !LATAbits.LATA3;
   676  000E  1003               	clrc
   677  000F  0022               	movlb	2	; select bank2
   678  0010  1D8C               	btfss	12,3	;volatile
   679  0011  1403               	setc
   680  0012  1C03               	btfss	3,0
   681  0013  2817               	goto	u14_20
   682  0014  0022               	movlb	2	; select bank2
   683  0015  158C               	bsf	12,3	;volatile
   684  0016  2819               	goto	i1l728
   685  0017                     u14_20:	
   686  0017  0022               	movlb	2	; select bank2
   687  0018  118C               	bcf	12,3	;volatile
   688  0019                     i1l728:	
   689                           
   690                           ;LEDTurnon.c: 112:         fixedUpdate ();
   691  0019  2070               	fcall	_fixedUpdate
   692                           
   693                           ;LEDTurnon.c: 113:         T0IF = 0;
   694  001A  110B               	bcf	11,2	;volatile
   695  001B                     i1l64:	
   696  001B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   697  001C  0009               	retfie
   698  001D                     __end_of_myIsr:	
   699                           
   700                           	psect	text4
   701  0082                     __ptext4:	
   702 ;; *************** function _toggle_RA2 *****************
   703 ;; Defined at:
   704 ;;		line 31 in file "fncts.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;		None
   707 ;; Auto vars:     Size  Location     Type
   708 ;;		None
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		status,0
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMMON   BANK0   BANK1
   718 ;;      Params:         0       0       0
   719 ;;      Locals:         0       0       0
   720 ;;      Temps:          0       0       0
   721 ;;      Totals:         0       0       0
   722 ;;Total ram usage:        0 bytes
   723 ;; Hardware stack levels used:    1
   724 ;; This function calls:
   725 ;;		Nothing
   726 ;; This function is called by:
   727 ;;		_myIsr
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           
   732                           ;psect for function _toggle_RA2
   733  0082                     _toggle_RA2:	
   734                           
   735                           ;fncts.c: 32:     LATAbits.LATA2 = !LATAbits.LATA2;
   736                           
   737                           ;incstack = 0
   738                           ; Regs used in _toggle_RA2: [status,0]
   739  0082  1003               	clrc
   740  0083  0022               	movlb	2	; select bank2
   741  0084  1D0C               	btfss	12,2	;volatile
   742  0085  1403               	setc
   743  0086  1C03               	btfss	3,0
   744  0087  288B               	goto	u8_20
   745  0088  0022               	movlb	2	; select bank2
   746  0089  150C               	bsf	12,2	;volatile
   747  008A  0008               	return
   748  008B                     u8_20:	
   749  008B  0022               	movlb	2	; select bank2
   750  008C  110C               	bcf	12,2	;volatile
   751  008D  0008               	return
   752  008E                     __end_of_toggle_RA2:	
   753                           
   754                           	psect	text5
   755  0070                     __ptext5:	
   756 ;; *************** function _fixedUpdate *****************
   757 ;; Defined at:
   758 ;;		line 85 in file "LEDTurnon.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;		None
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, status,2, status,0, pclath, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMMON   BANK0   BANK1
   772 ;;      Params:         0       0       0
   773 ;;      Locals:         0       0       0
   774 ;;      Temps:          1       0       0
   775 ;;      Totals:         1       0       0
   776 ;;Total ram usage:        1 bytes
   777 ;; Hardware stack levels used:    1
   778 ;; Hardware stack levels required when called:    1
   779 ;; This function calls:
   780 ;;		_btn_dn
   781 ;;		_btn_up
   782 ;; This function is called by:
   783 ;;		_myIsr
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           
   788                           ;psect for function _fixedUpdate
   789  0070                     _fixedUpdate:	
   790                           
   791                           ;LEDTurnon.c: 86:     ++counter;
   792                           
   793                           ;incstack = 0
   794                           ; Regs used in _fixedUpdate: [wreg+status,2+status,0+pclath+cstack]
   795  0070  3001               	movlw	1
   796  0071  00F4               	movwf	??_fixedUpdate
   797  0072  0874               	movf	??_fixedUpdate,w
   798  0073  07F2               	addwf	_counter,f
   799                           
   800                           ;LEDTurnon.c: 87:     if (counter == 0xFF){
   801  0074  0A72               	incf	_counter,w
   802  0075  1D03               	btfss	3,2
   803  0076  0008               	return
   804                           
   805                           ;LEDTurnon.c: 89:         T0IF = 0;
   806  0077  110B               	bcf	11,2	;volatile
   807                           
   808                           ;LEDTurnon.c: 90:         counter = 0x00;
   809  0078  01F2               	clrf	_counter
   810                           
   811                           ;LEDTurnon.c: 91:         if (PORTAbits.RA4 == 0){
   812  0079  0020               	movlb	0	; select bank0
   813  007A  1A0C               	btfsc	12,4	;volatile
   814  007B  287E               	goto	i1l54
   815                           
   816                           ;LEDTurnon.c: 92:             btn_dn ();
   817  007C  205B               	fcall	_btn_dn
   818                           
   819                           ;LEDTurnon.c: 93:         }
   820  007D  0008               	return
   821  007E                     i1l54:	
   822                           ;LEDTurnon.c: 94:         else if (PORTAbits.RA4 == 1){
   823                           
   824  007E  1E0C               	btfss	12,4	;volatile
   825  007F  0008               	return
   826                           
   827                           ;LEDTurnon.c: 95:             btn_up ();
   828  0080  2046               	fcall	_btn_up
   829  0081  0008               	return
   830  0082                     __end_of_fixedUpdate:	
   831                           
   832                           	psect	text6
   833  0046                     __ptext6:	
   834 ;; *************** function _btn_up *****************
   835 ;; Defined at:
   836 ;;		line 59 in file "fncts.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, status,2, status,0
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1
   850 ;;      Params:         0       0       0
   851 ;;      Locals:         0       0       0
   852 ;;      Temps:          1       0       0
   853 ;;      Totals:         1       0       0
   854 ;;Total ram usage:        1 bytes
   855 ;; Hardware stack levels used:    1
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_fixedUpdate
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           
   864                           ;psect for function _btn_up
   865  0046                     _btn_up:	
   866                           
   867                           ;fncts.c: 60:     if (btn_state == 0){
   868                           
   869                           ;incstack = 0
   870                           ; Regs used in _btn_up: [wreg+status,2+status,0]
   871  0046  0871               	movf	_btn_state,w
   872  0047  1D03               	btfss	3,2
   873  0048  2854               	goto	i1l658
   874                           
   875                           ;fncts.c: 61:         btn_streak ++;
   876  0049  3001               	movlw	1
   877  004A  00F3               	movwf	??_btn_up
   878  004B  0873               	movf	??_btn_up,w
   879  004C  07F0               	addwf	_btn_streak,f
   880                           
   881                           ;fncts.c: 63:         if (btn_streak == 10){
   882  004D  300A               	movlw	10
   883  004E  0670               	xorwf	_btn_streak,w
   884  004F  1D03               	btfss	3,2
   885  0050  0008               	return
   886                           
   887                           ;fncts.c: 64:             LATAbits.LATA1 = 0;
   888  0051  0022               	movlb	2	; select bank2
   889  0052  108C               	bcf	12,1	;volatile
   890  0053  0008               	return
   891  0054                     i1l658:	
   892                           
   893                           ;fncts.c: 69:         btn_state = btn_state ^ 0x01;
   894  0054  0871               	movf	_btn_state,w
   895  0055  3A01               	xorlw	1
   896  0056  00F3               	movwf	??_btn_up
   897  0057  0873               	movf	??_btn_up,w
   898  0058  00F1               	movwf	_btn_state
   899                           
   900                           ;fncts.c: 71:         btn_streak = 0;
   901  0059  01F0               	clrf	_btn_streak
   902  005A  0008               	return
   903  005B                     __end_of_btn_up:	
   904                           
   905                           	psect	text7
   906  005B                     __ptext7:	
   907 ;; *************** function _btn_dn *****************
   908 ;; Defined at:
   909 ;;		line 41 in file "fncts.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, status,2, status,0
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMMON   BANK0   BANK1
   923 ;;      Params:         0       0       0
   924 ;;      Locals:         0       0       0
   925 ;;      Temps:          1       0       0
   926 ;;      Totals:         1       0       0
   927 ;;Total ram usage:        1 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_fixedUpdate
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _btn_dn
   938  005B                     _btn_dn:	
   939                           
   940                           ;fncts.c: 43:     if (btn_state == 1){
   941                           
   942                           ;incstack = 0
   943                           ; Regs used in _btn_dn: [wreg+status,2+status,0]
   944  005B  0371               	decf	_btn_state,w
   945  005C  1D03               	btfss	3,2
   946  005D  2869               	goto	i1l648
   947                           
   948                           ;fncts.c: 44:         btn_streak ++;
   949  005E  3001               	movlw	1
   950  005F  00F3               	movwf	??_btn_dn
   951  0060  0873               	movf	??_btn_dn,w
   952  0061  07F0               	addwf	_btn_streak,f
   953                           
   954                           ;fncts.c: 46:         if (btn_streak == 10){
   955  0062  300A               	movlw	10
   956  0063  0670               	xorwf	_btn_streak,w
   957  0064  1D03               	btfss	3,2
   958  0065  0008               	return
   959                           
   960                           ;fncts.c: 47:             LATAbits.LATA1 = 1;
   961  0066  0022               	movlb	2	; select bank2
   962  0067  148C               	bsf	12,1	;volatile
   963  0068  0008               	return
   964  0069                     i1l648:	
   965                           
   966                           ;fncts.c: 53:         btn_state = btn_state ^ 0x01;
   967  0069  0871               	movf	_btn_state,w
   968  006A  3A01               	xorlw	1
   969  006B  00F3               	movwf	??_btn_dn
   970  006C  0873               	movf	??_btn_dn,w
   971  006D  00F1               	movwf	_btn_state
   972                           
   973                           ;fncts.c: 55:         btn_streak = 0;
   974  006E  01F0               	clrf	_btn_streak
   975  006F  0008               	return
   976  0070                     __end_of_btn_dn:	
   977  007E                     btemp	set	126	;btemp
   978  007E                     int$flags	set	126
   979  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       5
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    _myIsr->_fixedUpdate
    _fixedUpdate->_btn_dn
    _fixedUpdate->_btn_up

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
                             _update
 ---------------------------------------------------------------------------------
 (1) _update                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIsr                                                0     0      0       0
                        _fixedUpdate
                         _toggle_RA2
 ---------------------------------------------------------------------------------
 (3) _toggle_RA2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _fixedUpdate                                          1     1      0       0
                                              1 COMMON     1     1      0
                             _btn_dn
                             _btn_up
 ---------------------------------------------------------------------------------
 (4) _btn_up                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _btn_dn                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _update

 _myIsr (ROOT)
   _fixedUpdate
     _btn_dn
     _btn_up
   _toggle_RA2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      2       5       2       35.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       5       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       5       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jun 05 12:58:32 2019

            __CFG_CP$OFF 0000                      l734 008F             ?_fixedUpdate 0073  
           __CFG_BORV$LO 0000             __CFG_IESO$ON 0000             __CFG_LVP$OFF 0000  
                   _T0IE 005D                     _T0IF 005A                     _LATA 010C  
                   _LATB 010D                     _LATC 010E                     i1l54 007E  
                   i1l64 001B                     _TMR0 0015                     u8_20 008B  
           __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000                     _main 008E  
                   _init 0024                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 001D            __CFG_MCLRE$ON 0000                    ?_main 0073  
                  ?_init 0073            __CFG_WDTE$OFF 0000                    i1l722 000B  
                  i1l648 0069                    i1l728 0019                    i1l658 0054  
                  u14_20 0017                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _myIsr 0004                    status 0003  
                  wtemp0 007E          __initialization 001E             __end_of_main 0091  
           __end_of_init 0046           __CFG_LPBOR$OFF 0000                   ??_main 0075  
                 ??_init 0075                   ?_myIsr 0073                   _ANSELA 018C  
                 _ANSELB 018D                   _ANSELC 018E           __CFG_PWRTE$OFF 0000  
         __CFG_STVREN$ON 0000                   _btn_dn 005B                   _btn_up 0046  
                 _update 0091     __size_of_fixedUpdate 0012  __end_of__initialization 0021  
         __pcstackCOMMON 0073            __end_of_myIsr 001D           _OPTION_REGbits 0095  
                ??_myIsr 0075          __CFG_VCAPEN$OFF 0000               __pmaintext 008E  
             __pintentry 0004                  ?_btn_dn 0073                  ?_btn_up 0073  
                ?_update 0073               _btn_streak 0070          __size_of_btn_dn 0015  
        __size_of_btn_up 0015                  __ptext1 0091                  __ptext2 0024  
                __ptext4 0082                  __ptext5 0070                  __ptext6 0046  
                __ptext7 005B          __size_of_update 0001                  _counter 0072  
   end_of_initialization 0021                _PORTAbits 000C               _toggle_RA2 0082  
       __CFG_FOSC$INTOSC 0000           __end_of_btn_dn 0070           __end_of_btn_up 005B  
          ??_fixedUpdate 0074           __end_of_update 0092      start_initialization 001E  
               ??_btn_dn 0073                 ??_btn_up 0073                 ??_update 0075  
            ?_toggle_RA2 0073              __pbssCOMMON 0070                ___latbits 0000  
    __end_of_fixedUpdate 0082                _btn_state 0071           __size_of_myIsr 0019  
               _LATAbits 010C      __size_of_toggle_RA2 000C              _fixedUpdate 0070  
          __size_of_main 0003            __size_of_init 0022                 int$flags 007E  
           ??_toggle_RA2 0073               _INTCONbits 000B                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000               _OSCCONbits 0099       __end_of_toggle_RA2 008E  
             _OPTION_REG 0095  
