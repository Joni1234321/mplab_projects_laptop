

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Aug 05 16:25:03 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1512
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.05
    20                           ; Generated 20/12/2018 GMT
    21                           ; 
    22                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F1512 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  008E                     	;# 
    83  0090                     	;# 
    84  0091                     	;# 
    85  0092                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0099                     	;# 
    90  009A                     	;# 
    91  009B                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009B                     	;# 
    95  009C                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  0116                     	;# 
   103  0117                     	;# 
   104  011D                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  018E                     	;# 
   108  0191                     	;# 
   109  0191                     	;# 
   110  0192                     	;# 
   111  0193                     	;# 
   112  0193                     	;# 
   113  0194                     	;# 
   114  0195                     	;# 
   115  0196                     	;# 
   116  0197                     	;# 
   117  0199                     	;# 
   118  019A                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019C                     	;# 
   124  019C                     	;# 
   125  019D                     	;# 
   126  019E                     	;# 
   127  019F                     	;# 
   128  020D                     	;# 
   129  0210                     	;# 
   130  0211                     	;# 
   131  0211                     	;# 
   132  0212                     	;# 
   133  0212                     	;# 
   134  0213                     	;# 
   135  0213                     	;# 
   136  0214                     	;# 
   137  0214                     	;# 
   138  0215                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0216                     	;# 
   142  0216                     	;# 
   143  0217                     	;# 
   144  0217                     	;# 
   145  0291                     	;# 
   146  0291                     	;# 
   147  0292                     	;# 
   148  0293                     	;# 
   149  0298                     	;# 
   150  0298                     	;# 
   151  0299                     	;# 
   152  029A                     	;# 
   153  0394                     	;# 
   154  0395                     	;# 
   155  0396                     	;# 
   156  0FE4                     	;# 
   157  0FE5                     	;# 
   158  0FE6                     	;# 
   159  0FE7                     	;# 
   160  0FE8                     	;# 
   161  0FE9                     	;# 
   162  0FEA                     	;# 
   163  0FEB                     	;# 
   164  0FED                     	;# 
   165  0FEE                     	;# 
   166  0FEF                     	;# 
   167  0711                     	;# 
   168  0712                     	;# 
   169  0713                     	;# 
   170  0714                     	;# 
   171  0715                     	;# 
   172  0716                     	;# 
   173  0717                     	;# 
   174  0718                     	;# 
   175  0719                     	;# 
   176  071A                     	;# 
   177  071A                     	;# 
   178  071A                     	;# 
   179  071B                     	;# 
   180  071C                     	;# 
   181  071C                     	;# 
   182  071C                     	;# 
   183  071D                     	;# 
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  0008                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000D                     	;# 
   198  000E                     	;# 
   199  0010                     	;# 
   200  0011                     	;# 
   201  0012                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0016                     	;# 
   205  0017                     	;# 
   206  0018                     	;# 
   207  0019                     	;# 
   208  001A                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  0090                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009B                     	;# 
   224  009B                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  0116                     	;# 
   234  0117                     	;# 
   235  011D                     	;# 
   236  018C                     	;# 
   237  018D                     	;# 
   238  018E                     	;# 
   239  0191                     	;# 
   240  0191                     	;# 
   241  0192                     	;# 
   242  0193                     	;# 
   243  0193                     	;# 
   244  0194                     	;# 
   245  0195                     	;# 
   246  0196                     	;# 
   247  0197                     	;# 
   248  0199                     	;# 
   249  019A                     	;# 
   250  019B                     	;# 
   251  019B                     	;# 
   252  019B                     	;# 
   253  019B                     	;# 
   254  019C                     	;# 
   255  019C                     	;# 
   256  019D                     	;# 
   257  019E                     	;# 
   258  019F                     	;# 
   259  020D                     	;# 
   260  0210                     	;# 
   261  0211                     	;# 
   262  0211                     	;# 
   263  0212                     	;# 
   264  0212                     	;# 
   265  0213                     	;# 
   266  0213                     	;# 
   267  0214                     	;# 
   268  0214                     	;# 
   269  0215                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0216                     	;# 
   273  0216                     	;# 
   274  0217                     	;# 
   275  0217                     	;# 
   276  0291                     	;# 
   277  0291                     	;# 
   278  0292                     	;# 
   279  0293                     	;# 
   280  0298                     	;# 
   281  0298                     	;# 
   282  0299                     	;# 
   283  029A                     	;# 
   284  0394                     	;# 
   285  0395                     	;# 
   286  0396                     	;# 
   287  0FE4                     	;# 
   288  0FE5                     	;# 
   289  0FE6                     	;# 
   290  0FE7                     	;# 
   291  0FE8                     	;# 
   292  0FE9                     	;# 
   293  0FEA                     	;# 
   294  0FEB                     	;# 
   295  0FED                     	;# 
   296  0FEE                     	;# 
   297  0FEF                     	;# 
   298  0711                     	;# 
   299  0712                     	;# 
   300  0713                     	;# 
   301  0714                     	;# 
   302  0715                     	;# 
   303  0716                     	;# 
   304  0717                     	;# 
   305  0718                     	;# 
   306  0719                     	;# 
   307  071A                     	;# 
   308  071A                     	;# 
   309  071A                     	;# 
   310  071B                     	;# 
   311  071C                     	;# 
   312  071C                     	;# 
   313  071C                     	;# 
   314  071D                     	;# 
   315  000B                     _INTCONbits	set	11
   316  008B                     _SSPIF	set	139
   317  008E                     _TRISC	set	142
   318  008D                     _TRISB	set	141
   319  008C                     _TRISA	set	140
   320  0099                     _OSCCONbits	set	153
   321  048B                     _SSPIE	set	1163
   322  010E                     _LATC	set	270
   323  010D                     _LATB	set	269
   324  010E                     _LATCbits	set	270
   325  010C                     _LATA	set	268
   326  018E                     _ANSELC	set	398
   327  018D                     _ANSELB	set	397
   328  018C                     _ANSELA	set	396
   329  0214                     _SSPSTAT	set	532
   330  0212                     _SSPADD	set	530
   331  0216                     _SSPCON2	set	534
   332  0215                     _SSPCON1	set	533
   333  0214                     _SSPSTATbits	set	532
   334  0211                     _SSPBUF	set	529
   335  0215                     _SSPCONbits	set	533
   336  10A0                     _BF	set	4256
   337                           
   338                           	psect	cinit
   339  0020                     start_initialization:	
   340                           ; #config settings
   341                           
   342  0020                     __initialization:	
   343                           
   344                           ; Clear objects allocated to COMMON
   345  0020  01F5               	clrf	__pbssCOMMON& (0+127)
   346  0021  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   347  0022  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   348  0023  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   349  0024                     end_of_initialization:	
   350                           ;End of C runtime variable initialization code
   351                           
   352  0024                     __end_of__initialization:	
   353  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   354  0025  0020               	movlb	0
   355  0026  288E               	ljmp	_main	;jump to C main() function
   356                           
   357                           	psect	bssCOMMON
   358  0075                     __pbssCOMMON:	
   359  0075                     _d:	
   360  0075                     	ds	2
   361  0077                     _z:	
   362  0077                     	ds	2
   363                           
   364                           	psect	cstackCOMMON
   365  0070                     __pcstackCOMMON:	
   366  0070                     ?_init:	
   367  0070                     ?_init_oscillator:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_init_ports:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_init_i2c:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_I2C_Slave_Read:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ??_I2C_Slave_Read:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_on_interrupt_i2c:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_interruptHandler:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_main:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_reset_ports:	
   392                           ; 1 bytes @ 0x0
   393                           
   394                           
   395                           ; 1 bytes @ 0x0
   396  0070                     	ds	2
   397  0072                     ??_on_interrupt_i2c:	
   398  0072                     ??_interruptHandler:	
   399                           ; 1 bytes @ 0x2
   400                           
   401                           
   402                           ; 1 bytes @ 0x2
   403  0072                     	ds	1
   404  0073                     ??_init_oscillator:	
   405  0073                     ??_init_ports:	
   406                           ; 1 bytes @ 0x3
   407                           
   408  0073                     ?_init_i2c_slave:	
   409                           ; 1 bytes @ 0x3
   410                           
   411  0073                     ??_reset_ports:	
   412                           ; 1 bytes @ 0x3
   413                           
   414  0073                     init_i2c_slave@address:	
   415                           ; 1 bytes @ 0x3
   416                           
   417                           
   418                           ; 2 bytes @ 0x3
   419  0073                     	ds	2
   420  0075                     ??_init:	
   421  0075                     ??_init_i2c:	
   422                           ; 1 bytes @ 0x5
   423                           
   424  0075                     ??_init_i2c_slave:	
   425                           ; 1 bytes @ 0x5
   426                           
   427  0075                     ??_main:	
   428                           ; 1 bytes @ 0x5
   429                           
   430                           
   431                           	psect	maintext
   432  008E                     __pmaintext:	
   433                           ; 1 bytes @ 0x5
   434 ;;
   435 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   436 ;;
   437 ;; *************** function _main *****************
   438 ;; Defined at:
   439 ;;		line 72 in file "main.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0, pclath, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : B1F/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON   BANK0   BANK1
   453 ;;      Params:         0       0       0
   454 ;;      Locals:         0       0       0
   455 ;;      Temps:          0       0       0
   456 ;;      Totals:         0       0       0
   457 ;;Total ram usage:        0 bytes
   458 ;; Hardware stack levels required when called:    6
   459 ;; This function calls:
   460 ;;		_init
   461 ;; This function is called by:
   462 ;;		Startup code after reset
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           
   467                           ;psect for function _main
   468  008E                     _main:	
   469                           
   470                           ;main.c: 73:     init();
   471                           
   472                           ;incstack = 0
   473                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   474  008E  2092               	fcall	_init
   475                           
   476                           ;main.c: 74:     LATCbits.LATC6 = 1;
   477  008F  0022               	movlb	2	; select bank2
   478  0090  170E               	bsf	14,6	;volatile
   479  0091                     l51:	
   480                           ;main.c: 75:     while (1);
   481                           
   482  0091  2891               	goto	l51
   483  0092                     __end_of_main:	
   484                           
   485                           	psect	text1
   486  0092                     __ptext1:	
   487 ;; *************** function _init *****************
   488 ;; Defined at:
   489 ;;		line 8 in file "conf.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, status,2, status,0, pclath, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1
   503 ;;      Params:         0       0       0
   504 ;;      Locals:         0       0       0
   505 ;;      Temps:          0       0       0
   506 ;;      Totals:         0       0       0
   507 ;;Total ram usage:        0 bytes
   508 ;; Hardware stack levels used:    1
   509 ;; Hardware stack levels required when called:    5
   510 ;; This function calls:
   511 ;;		_init_i2c
   512 ;;		_init_oscillator
   513 ;;		_init_ports
   514 ;; This function is called by:
   515 ;;		_main
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           
   520                           ;psect for function _init
   521  0092                     _init:	
   522                           
   523                           ;conf.c: 9:     init_oscillator();
   524                           
   525                           ;incstack = 0
   526                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   527  0092  2082               	fcall	_init_oscillator
   528                           
   529                           ;conf.c: 10:     init_ports();
   530  0093  2089               	fcall	_init_ports
   531                           
   532                           ;conf.c: 13:     init_i2c();
   533  0094  2079               	fcall	_init_i2c
   534  0095  0008               	return
   535  0096                     __end_of_init:	
   536                           
   537                           	psect	text2
   538  0089                     __ptext2:	
   539 ;; *************** function _init_ports *****************
   540 ;; Defined at:
   541 ;;		line 53 in file "conf.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, status,2, status,0, pclath, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1
   555 ;;      Params:         0       0       0
   556 ;;      Locals:         0       0       0
   557 ;;      Temps:          0       0       0
   558 ;;      Totals:         0       0       0
   559 ;;Total ram usage:        0 bytes
   560 ;; Hardware stack levels used:    1
   561 ;; Hardware stack levels required when called:    4
   562 ;; This function calls:
   563 ;;		_reset_ports
   564 ;; This function is called by:
   565 ;;		_init
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           
   570                           ;psect for function _init_ports
   571  0089                     _init_ports:	
   572                           
   573                           ;conf.c: 55:     reset_ports ();
   574                           
   575                           ;incstack = 0
   576                           ; Regs used in _init_ports: [wreg+status,2+status,0+pclath+cstack]
   577  0089  206C               	fcall	_reset_ports
   578                           
   579                           ;conf.c: 58:     TRISB = 0b00000111;
   580  008A  3007               	movlw	7
   581  008B  0021               	movlb	1	; select bank1
   582  008C  008D               	movwf	13	;volatile
   583  008D  0008               	return
   584  008E                     __end_of_init_ports:	
   585                           
   586                           	psect	text3
   587  006C                     __ptext3:	
   588 ;; *************** function _reset_ports *****************
   589 ;; Defined at:
   590 ;;		line 32 in file "conf.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		status,2
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1
   604 ;;      Params:         0       0       0
   605 ;;      Locals:         0       0       0
   606 ;;      Temps:          0       0       0
   607 ;;      Totals:         0       0       0
   608 ;;Total ram usage:        0 bytes
   609 ;; Hardware stack levels used:    1
   610 ;; Hardware stack levels required when called:    3
   611 ;; This function calls:
   612 ;;		Nothing
   613 ;; This function is called by:
   614 ;;		_init_ports
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           
   619                           ;psect for function _reset_ports
   620  006C                     _reset_ports:	
   621                           
   622                           ;conf.c: 36:     TRISA = 0x00;
   623                           
   624                           ;incstack = 0
   625                           ; Regs used in _reset_ports: [status,2]
   626  006C  0021               	movlb	1	; select bank1
   627  006D  018C               	clrf	12	;volatile
   628                           
   629                           ;conf.c: 37:     TRISB = 0x00;
   630  006E  018D               	clrf	13	;volatile
   631                           
   632                           ;conf.c: 38:     TRISC = 0x00;
   633  006F  018E               	clrf	14	;volatile
   634                           
   635                           ;conf.c: 41:     LATA = 0x00;
   636  0070  0022               	movlb	2	; select bank2
   637  0071  018C               	clrf	12	;volatile
   638                           
   639                           ;conf.c: 42:     LATB = 0x00;
   640  0072  018D               	clrf	13	;volatile
   641                           
   642                           ;conf.c: 43:     LATC = 0x00;
   643  0073  018E               	clrf	14	;volatile
   644                           
   645                           ;conf.c: 46:     ANSELA = 0x00;
   646  0074  0023               	movlb	3	; select bank3
   647  0075  018C               	clrf	12	;volatile
   648                           
   649                           ;conf.c: 47:     ANSELB = 0x00;
   650  0076  018D               	clrf	13	;volatile
   651                           
   652                           ;conf.c: 48:     ANSELC = 0x00;
   653  0077  018E               	clrf	14	;volatile
   654  0078  0008               	return
   655  0079                     __end_of_reset_ports:	
   656                           
   657                           	psect	text4
   658  0082                     __ptext4:	
   659 ;; *************** function _init_oscillator *****************
   660 ;; Defined at:
   661 ;;		line 17 in file "conf.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, status,2, status,0
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1
   675 ;;      Params:         0       0       0
   676 ;;      Locals:         0       0       0
   677 ;;      Temps:          0       0       0
   678 ;;      Totals:         0       0       0
   679 ;;Total ram usage:        0 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; Hardware stack levels required when called:    3
   682 ;; This function calls:
   683 ;;		Nothing
   684 ;; This function is called by:
   685 ;;		_init
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           
   690                           ;psect for function _init_oscillator
   691  0082                     _init_oscillator:	
   692                           
   693                           ;conf.c: 20:     OSCCONbits.SCS1 = 1;
   694                           
   695                           ;incstack = 0
   696                           ; Regs used in _init_oscillator: [wreg+status,2+status,0]
   697  0082  0021               	movlb	1	; select bank1
   698  0083  1499               	bsf	25,1	;volatile
   699                           
   700                           ;conf.c: 23:     OSCCONbits.IRCF = 0b1101;
   701  0084  0819               	movf	25,w	;volatile
   702  0085  3987               	andlw	-121
   703  0086  3868               	iorlw	104
   704  0087  0099               	movwf	25	;volatile
   705  0088  0008               	return
   706  0089                     __end_of_init_oscillator:	
   707                           
   708                           	psect	text5
   709  0079                     __ptext5:	
   710 ;; *************** function _init_i2c *****************
   711 ;; Defined at:
   712 ;;		line 64 in file "conf.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0, pclath, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1
   726 ;;      Params:         0       0       0
   727 ;;      Locals:         0       0       0
   728 ;;      Temps:          0       0       0
   729 ;;      Totals:         0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    4
   733 ;; This function calls:
   734 ;;		_init_i2c_slave
   735 ;; This function is called by:
   736 ;;		_init
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           
   741                           ;psect for function _init_i2c
   742  0079                     _init_i2c:	
   743                           
   744                           ;conf.c: 66:     TRISC = 0b00011000;
   745                           
   746                           ;incstack = 0
   747                           ; Regs used in _init_i2c: [wreg+status,2+status,0+pclath+cstack]
   748  0079  3018               	movlw	24
   749  007A  0021               	movlb	1	; select bank1
   750  007B  008E               	movwf	14	;volatile
   751                           
   752                           ;conf.c: 69:     init_i2c_slave (0x30);
   753  007C  3030               	movlw	48
   754  007D  00F3               	movwf	init_i2c_slave@address
   755  007E  3000               	movlw	0
   756  007F  00F4               	movwf	init_i2c_slave@address+1
   757  0080  205B               	fcall	_init_i2c_slave
   758  0081  0008               	return
   759  0082                     __end_of_init_i2c:	
   760                           
   761                           	psect	text6
   762  005B                     __ptext6:	
   763 ;; *************** function _init_i2c_slave *****************
   764 ;; Defined at:
   765 ;;		line 75 in file "conf.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  address         2    3[COMMON] short 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;		None
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1
   779 ;;      Params:         2       0       0
   780 ;;      Locals:         0       0       0
   781 ;;      Temps:          0       0       0
   782 ;;      Totals:         2       0       0
   783 ;;Total ram usage:        2 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    3
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_init_i2c
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           
   794                           ;psect for function _init_i2c_slave
   795  005B                     _init_i2c_slave:	
   796                           
   797                           ;conf.c: 80:     SSPCON1 = 0b00110110;
   798                           
   799                           ;incstack = 0
   800                           ; Regs used in _init_i2c_slave: [wreg]
   801  005B  3036               	movlw	54
   802  005C  0024               	movlb	4	; select bank4
   803  005D  0095               	movwf	21	;volatile
   804                           
   805                           ;conf.c: 83:     SSPCON2 = 0x01;
   806  005E  3001               	movlw	1
   807  005F  0096               	movwf	22	;volatile
   808                           
   809                           ;conf.c: 86:     SSPADD = 0x30;
   810  0060  3030               	movlw	48
   811  0061  0092               	movwf	18	;volatile
   812                           
   813                           ;conf.c: 89:     SSPSTAT = 0x80;
   814  0062  3080               	movlw	128
   815  0063  0094               	movwf	20	;volatile
   816                           
   817                           ;conf.c: 92:     INTCONbits.GIE = 1;
   818  0064  178B               	bsf	11,7	;volatile
   819                           
   820                           ;conf.c: 95:     INTCONbits.GIE = 1;
   821  0065  178B               	bsf	11,7	;volatile
   822                           
   823                           ;conf.c: 98:     INTCONbits.PEIE = 1;
   824  0066  170B               	bsf	11,6	;volatile
   825                           
   826                           ;conf.c: 101:     SSPIF = 0;
   827  0067  0020               	movlb	0	; select bank0
   828  0068  1191               	bcf	17,3	;volatile
   829                           
   830                           ;conf.c: 103:     SSPIE = 1;
   831  0069  0021               	movlb	1	; select bank1
   832  006A  1591               	bsf	17,3	;volatile
   833  006B  0008               	return
   834  006C                     __end_of_init_i2c_slave:	
   835                           
   836                           	psect	intentry
   837  0004                     __pintentry:	
   838 ;; *************** function _interruptHandler *****************
   839 ;; Defined at:
   840 ;;		line 63 in file "main.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, status,2, status,0, pclath, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1
   854 ;;      Params:         0       0       0
   855 ;;      Locals:         0       0       0
   856 ;;      Temps:          1       0       0
   857 ;;      Totals:         1       0       0
   858 ;;Total ram usage:        1 bytes
   859 ;; Hardware stack levels used:    1
   860 ;; Hardware stack levels required when called:    2
   861 ;; This function calls:
   862 ;;		_on_interrupt_i2c
   863 ;; This function is called by:
   864 ;;		Interrupt level 1
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868  0004                     _interruptHandler:	
   869                           
   870                           ;incstack = 0
   871  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   872                           
   873                           ; Regs used in _interruptHandler: [wreg+status,2+status,0+pclath+cstack]
   874  0005  3180               	pagesel	$
   875                           
   876                           ;main.c: 65:     if (SSPIE && SSPIF){
   877  0006  0021               	movlb	1	; select bank1
   878  0007  1D91               	btfss	17,3	;volatile
   879  0008  281D               	goto	i1l46
   880  0009  0020               	movlb	0	; select bank0
   881  000A  1D91               	btfss	17,3	;volatile
   882  000B  281D               	goto	i1l46
   883                           
   884                           ;main.c: 66:         LATCbits.LATC7 ^= 1;
   885  000C  0022               	movlb	2	; select bank2
   886  000D  0D0E               	rlf	14,w	;volatile
   887  000E  0D0E               	rlf	14,w	;volatile
   888  000F  3901               	andlw	1
   889  0010  00F2               	movwf	??_interruptHandler
   890  0011  3001               	movlw	1
   891  0012  06F2               	xorwf	??_interruptHandler,f
   892  0013  0CF2               	rrf	??_interruptHandler,f
   893  0014  0CF2               	rrf	??_interruptHandler,f
   894  0015  080E               	movf	14,w	;volatile
   895  0016  0672               	xorwf	??_interruptHandler,w
   896  0017  397F               	andlw	-129
   897  0018  0672               	xorwf	??_interruptHandler,w
   898  0019  008E               	movwf	14	;volatile
   899                           
   900                           ;main.c: 67:         on_interrupt_i2c ();
   901  001A  2096               	fcall	_on_interrupt_i2c
   902                           
   903                           ;main.c: 68:         SSPIF = 0;
   904  001B  0020               	movlb	0	; select bank0
   905  001C  1191               	bcf	17,3	;volatile
   906  001D                     i1l46:	
   907  001D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   908  001E  0009               	retfie
   909  001F                     __end_of_interruptHandler:	
   910                           
   911                           	psect	text8
   912  0096                     __ptext8:	
   913 ;; *************** function _on_interrupt_i2c *****************
   914 ;; Defined at:
   915 ;;		line 46 in file "main.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg, status,2, status,0, pclath, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1
   929 ;;      Params:         0       0       0
   930 ;;      Locals:         0       0       0
   931 ;;      Temps:          0       0       0
   932 ;;      Totals:         0       0       0
   933 ;;Total ram usage:        0 bytes
   934 ;; Hardware stack levels used:    1
   935 ;; Hardware stack levels required when called:    1
   936 ;; This function calls:
   937 ;;		_I2C_Slave_Read
   938 ;; This function is called by:
   939 ;;		_interruptHandler
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           
   944                           ;psect for function _on_interrupt_i2c
   945  0096                     _on_interrupt_i2c:	
   946                           
   947                           ;main.c: 60:     I2C_Slave_Read();
   948                           
   949                           ;incstack = 0
   950                           ; Regs used in _on_interrupt_i2c: [wreg+status,2+status,0+pclath+cstack]
   951  0096  2027               	fcall	_I2C_Slave_Read
   952  0097  0008               	return
   953  0098                     __end_of_on_interrupt_i2c:	
   954                           
   955                           	psect	text9
   956  0027                     __ptext9:	
   957 ;; *************** function _I2C_Slave_Read *****************
   958 ;; Defined at:
   959 ;;		line 17 in file "main.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1
   973 ;;      Params:         0       0       0
   974 ;;      Locals:         0       0       0
   975 ;;      Temps:          2       0       0
   976 ;;      Totals:         2       0       0
   977 ;;Total ram usage:        2 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; This function calls:
   980 ;;		Nothing
   981 ;; This function is called by:
   982 ;;		_on_interrupt_i2c
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           
   987                           ;psect for function _I2C_Slave_Read
   988  0027                     _I2C_Slave_Read:	
   989                           
   990                           ;main.c: 19:     SSPCONbits.CKP = 0;
   991                           
   992                           ;incstack = 0
   993                           ; Regs used in _I2C_Slave_Read: [wreg]
   994  0027  0024               	movlb	4	; select bank4
   995  0028  1215               	bcf	21,4	;volatile
   996                           
   997                           ;main.c: 21:     if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL))
   998  0029  1B15               	btfsc	21,6	;volatile
   999  002A  282D               	goto	i1l658
  1000  002B  1F95               	btfss	21,7	;volatile
  1001  002C  2837               	goto	i1l666
  1002  002D                     i1l658:	
  1003                           
  1004                           ;main.c: 22:     {;main.c: 23:       z = SSPBUF;
  1005  002D  0811               	movf	17,w	;volatile
  1006  002E  00F0               	movwf	??_I2C_Slave_Read
  1007  002F  01F1               	clrf	??_I2C_Slave_Read+1
  1008  0030  0870               	movf	??_I2C_Slave_Read,w
  1009  0031  00F7               	movwf	_z
  1010  0032  0871               	movf	??_I2C_Slave_Read+1,w
  1011  0033  00F8               	movwf	_z+1
  1012                           
  1013                           ;main.c: 24:       SSPCONbits.SSPOV = 0;
  1014  0034  1315               	bcf	21,6	;volatile
  1015                           
  1016                           ;main.c: 25:       SSPCONbits.WCOL = 0;
  1017  0035  1395               	bcf	21,7	;volatile
  1018                           
  1019                           ;main.c: 26:       SSPCONbits.CKP = 1;
  1020  0036  1615               	bsf	21,4	;volatile
  1021  0037                     i1l666:	
  1022                           
  1023                           ;main.c: 29:     if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW)
  1024  0037  1E94               	btfss	20,5	;volatile
  1025  0038  1914               	btfsc	20,2	;volatile
  1026  0039  2849               	goto	i1l26
  1027                           
  1028                           ;main.c: 30:     {;main.c: 31:       z = SSPBUF;
  1029  003A  0811               	movf	17,w	;volatile
  1030  003B  00F0               	movwf	??_I2C_Slave_Read
  1031  003C  01F1               	clrf	??_I2C_Slave_Read+1
  1032  003D  0870               	movf	??_I2C_Slave_Read,w
  1033  003E  00F7               	movwf	_z
  1034  003F  0871               	movf	??_I2C_Slave_Read+1,w
  1035  0040  00F8               	movwf	_z+1
  1036  0041                     i1l27:	
  1037                           ;main.c: 32:       while(!BF);
  1038                           
  1039  0041  1C14               	btfss	20,0	;volatile
  1040  0042  2841               	goto	i1l27
  1041                           
  1042                           ;main.c: 33:       LATA = SSPBUF;
  1043  0043  0811               	movf	17,w	;volatile
  1044  0044  0022               	movlb	2	; select bank2
  1045  0045  008C               	movwf	12	;volatile
  1046                           
  1047                           ;main.c: 34:       SSPCONbits.CKP = 1;
  1048  0046  0024               	movlb	4	; select bank4
  1049  0047  1615               	bsf	21,4	;volatile
  1050                           
  1051                           ;main.c: 35:     }
  1052  0048  0008               	return
  1053  0049                     i1l26:	
  1054                           ;main.c: 36:     else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW)
  1055                           
  1056  0049  1A94               	btfsc	20,5	;volatile
  1057  004A  0008               	return
  1058  004B  1D14               	btfss	20,2	;volatile
  1059  004C  0008               	return
  1060                           
  1061                           ;main.c: 37:     {;main.c: 38:       z = SSPBUF;
  1062  004D  0811               	movf	17,w	;volatile
  1063  004E  00F0               	movwf	??_I2C_Slave_Read
  1064  004F  01F1               	clrf	??_I2C_Slave_Read+1
  1065  0050  0870               	movf	??_I2C_Slave_Read,w
  1066  0051  00F7               	movwf	_z
  1067  0052  0871               	movf	??_I2C_Slave_Read+1,w
  1068  0053  00F8               	movwf	_z+1
  1069                           
  1070                           ;main.c: 39:       BF = 0;
  1071  0054  1014               	bcf	20,0	;volatile
  1072                           
  1073                           ;main.c: 40:       SSPBUF = 0xAA;
  1074  0055  30AA               	movlw	170
  1075  0056  0091               	movwf	17	;volatile
  1076                           
  1077                           ;main.c: 41:       SSPCONbits.CKP = 1;
  1078  0057  1615               	bsf	21,4	;volatile
  1079  0058                     i1l32:	
  1080                           ;main.c: 42:       while(SSPSTATbits.BF);
  1081                           
  1082  0058  1C14               	btfss	20,0	;volatile
  1083  0059  0008               	return
  1084  005A  2858               	goto	i1l32
  1085  005B                     __end_of_I2C_Slave_Read:	
  1086  007E                     btemp	set	126	;btemp
  1087  007E                     int$flags	set	126
  1088  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _init_i2c->_init_i2c_slave

Critical Paths under _interruptHandler in COMMON

    _on_interrupt_i2c->_I2C_Slave_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      76
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0      76
                           _init_i2c
                    _init_oscillator
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
                        _reset_ports
 ---------------------------------------------------------------------------------
 (3) _reset_ports                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscillator                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0      76
                     _init_i2c_slave
 ---------------------------------------------------------------------------------
 (3) _init_i2c_slave                                       2     0      2      76
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interruptHandler                                     1     1      0       0
                                              2 COMMON     1     1      0
                   _on_interrupt_i2c
 ---------------------------------------------------------------------------------
 (5) _on_interrupt_i2c                                     0     0      0       0
                     _I2C_Slave_Read
 ---------------------------------------------------------------------------------
 (6) _I2C_Slave_Read                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _init_i2c
       _init_i2c_slave
     _init_oscillator
     _init_ports
       _reset_ports

 _interruptHandler (ROOT)
   _on_interrupt_i2c
     _I2C_Slave_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       9       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       9       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Aug 05 16:25:03 2019

                        _d 0075                          _z 0077                _SSPSTATbits 0214  
                       _BF 10A0                         l51 0091                       _LATA 010C  
                     _LATB 010D                       _LATC 010E                       i1l32 0058  
                     i1l26 0049                       i1l27 0041                       i1l46 001D  
                     _main 008E   __end_of_interruptHandler 001F                       _init 0092  
                     btemp 007E          ??_init_oscillator 0073                       start 001F  
                    ?_main 0070                      ?_init 0070                      i1l666 0037  
                    i1l658 002D                      _TRISA 008C                      _TRISB 008D  
                    _TRISC 008E                      _SSPIE 048B                      _SSPIF 008B  
__size_of_on_interrupt_i2c 0002                      wtemp0 007E            __initialization 0020  
             __end_of_main 0092               __end_of_init 0096                     ??_main 0075  
                   ??_init 0075                     _ANSELA 018C                     _ANSELB 018D  
                   _ANSELC 018E                     _SSPADD 0212                     _SSPBUF 0211  
             ?_reset_ports 0070           __end_of_init_i2c 0082    __end_of__initialization 0024  
           __pcstackCOMMON 0070    __size_of_I2C_Slave_Read 0034    __size_of_init_i2c_slave 0011  
          _init_oscillator 0082           _on_interrupt_i2c 0096          ?_interruptHandler 0070  
       ??_interruptHandler 0072                 __pmaintext 008E                 __pintentry 0004  
                  _SSPCON1 0215                    _SSPCON2 0216                    _SSPSTAT 0214  
                ?_init_i2c 0070       __size_of_reset_ports 000D    __end_of_init_oscillator 0089  
               _init_ports 0089                    __ptext1 0092                    __ptext2 0089  
                  __ptext3 006C                    __ptext4 0082                    __ptext5 0079  
                  __ptext6 005B                    __ptext8 0096                    __ptext9 0027  
     end_of_initialization 0024                 ??_init_i2c 0075             _I2C_Slave_Read 0027  
           _init_i2c_slave 005B     __end_of_I2C_Slave_Read 005B     __end_of_init_i2c_slave 006C  
              ?_init_ports 0070           ?_init_oscillator 0070   __end_of_on_interrupt_i2c 0098  
      start_initialization 0020            ?_I2C_Slave_Read 0070            ?_init_i2c_slave 0073  
__size_of_interruptHandler 001B                __pbssCOMMON 0075                  ___latbits 0000  
      __size_of_init_ports 0005          __size_of_init_i2c 0009                   _LATCbits 010E  
            ??_reset_ports 0073      init_i2c_slave@address 0073               ??_init_ports 0073  
      __end_of_reset_ports 0079           _interruptHandler 0004          ?_on_interrupt_i2c 0070  
       ??_on_interrupt_i2c 0072           ??_I2C_Slave_Read 0070                   _init_i2c 0079  
            __size_of_main 0004              __size_of_init 0004         __end_of_init_ports 008E  
         ??_init_i2c_slave 0075                   int$flags 007E                 _INTCONbits 000B  
 __size_of_init_oscillator 0007                   intlevel1 0000                 _OSCCONbits 0099  
              _reset_ports 006C                 _SSPCONbits 0215  
