

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Dec 01 23:39:20 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1512
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.05
    41                           ; Generated 20/12/2018 GMT
    42                           ; 
    43                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F1512 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009B                     	;# 
   114  009B                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  011D                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  018E                     	;# 
   129  0191                     	;# 
   130  0191                     	;# 
   131  0192                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0197                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  019C                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019F                     	;# 
   149  020D                     	;# 
   150  0210                     	;# 
   151  0211                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0214                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0216                     	;# 
   163  0216                     	;# 
   164  0217                     	;# 
   165  0217                     	;# 
   166  0291                     	;# 
   167  0291                     	;# 
   168  0292                     	;# 
   169  0293                     	;# 
   170  0298                     	;# 
   171  0298                     	;# 
   172  0299                     	;# 
   173  029A                     	;# 
   174  0394                     	;# 
   175  0395                     	;# 
   176  0396                     	;# 
   177  0FE4                     	;# 
   178  0FE5                     	;# 
   179  0FE6                     	;# 
   180  0FE7                     	;# 
   181  0FE8                     	;# 
   182  0FE9                     	;# 
   183  0FEA                     	;# 
   184  0FEB                     	;# 
   185  0FED                     	;# 
   186  0FEE                     	;# 
   187  0FEF                     	;# 
   188  0711                     	;# 
   189  0712                     	;# 
   190  0713                     	;# 
   191  0714                     	;# 
   192  0715                     	;# 
   193  0716                     	;# 
   194  0717                     	;# 
   195  0718                     	;# 
   196  0719                     	;# 
   197  071A                     	;# 
   198  071A                     	;# 
   199  071A                     	;# 
   200  071B                     	;# 
   201  071C                     	;# 
   202  071C                     	;# 
   203  071C                     	;# 
   204  071D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0015                     	;# 
   224  0016                     	;# 
   225  0016                     	;# 
   226  0017                     	;# 
   227  0018                     	;# 
   228  0019                     	;# 
   229  001A                     	;# 
   230  001B                     	;# 
   231  001C                     	;# 
   232  008C                     	;# 
   233  008D                     	;# 
   234  008E                     	;# 
   235  0090                     	;# 
   236  0091                     	;# 
   237  0092                     	;# 
   238  0095                     	;# 
   239  0096                     	;# 
   240  0097                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009B                     	;# 
   245  009B                     	;# 
   246  009B                     	;# 
   247  009C                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009E                     	;# 
   251  010C                     	;# 
   252  010D                     	;# 
   253  010E                     	;# 
   254  0116                     	;# 
   255  0117                     	;# 
   256  011D                     	;# 
   257  018C                     	;# 
   258  018D                     	;# 
   259  018E                     	;# 
   260  0191                     	;# 
   261  0191                     	;# 
   262  0192                     	;# 
   263  0193                     	;# 
   264  0193                     	;# 
   265  0194                     	;# 
   266  0195                     	;# 
   267  0196                     	;# 
   268  0197                     	;# 
   269  0199                     	;# 
   270  019A                     	;# 
   271  019B                     	;# 
   272  019B                     	;# 
   273  019B                     	;# 
   274  019B                     	;# 
   275  019C                     	;# 
   276  019C                     	;# 
   277  019D                     	;# 
   278  019E                     	;# 
   279  019F                     	;# 
   280  020D                     	;# 
   281  0210                     	;# 
   282  0211                     	;# 
   283  0211                     	;# 
   284  0212                     	;# 
   285  0212                     	;# 
   286  0213                     	;# 
   287  0213                     	;# 
   288  0214                     	;# 
   289  0214                     	;# 
   290  0215                     	;# 
   291  0215                     	;# 
   292  0215                     	;# 
   293  0216                     	;# 
   294  0216                     	;# 
   295  0217                     	;# 
   296  0217                     	;# 
   297  0291                     	;# 
   298  0291                     	;# 
   299  0292                     	;# 
   300  0293                     	;# 
   301  0298                     	;# 
   302  0298                     	;# 
   303  0299                     	;# 
   304  029A                     	;# 
   305  0394                     	;# 
   306  0395                     	;# 
   307  0396                     	;# 
   308  0FE4                     	;# 
   309  0FE5                     	;# 
   310  0FE6                     	;# 
   311  0FE7                     	;# 
   312  0FE8                     	;# 
   313  0FE9                     	;# 
   314  0FEA                     	;# 
   315  0FEB                     	;# 
   316  0FED                     	;# 
   317  0FEE                     	;# 
   318  0FEF                     	;# 
   319  0711                     	;# 
   320  0712                     	;# 
   321  0713                     	;# 
   322  0714                     	;# 
   323  0715                     	;# 
   324  0716                     	;# 
   325  0717                     	;# 
   326  0718                     	;# 
   327  0719                     	;# 
   328  071A                     	;# 
   329  071A                     	;# 
   330  071A                     	;# 
   331  071B                     	;# 
   332  071C                     	;# 
   333  071C                     	;# 
   334  071C                     	;# 
   335  071D                     	;# 
   336  0000                     	;# 
   337  0001                     	;# 
   338  0002                     	;# 
   339  0003                     	;# 
   340  0004                     	;# 
   341  0005                     	;# 
   342  0006                     	;# 
   343  0007                     	;# 
   344  0008                     	;# 
   345  0009                     	;# 
   346  000A                     	;# 
   347  000B                     	;# 
   348  000C                     	;# 
   349  000D                     	;# 
   350  000E                     	;# 
   351  0010                     	;# 
   352  0011                     	;# 
   353  0012                     	;# 
   354  0015                     	;# 
   355  0016                     	;# 
   356  0016                     	;# 
   357  0017                     	;# 
   358  0018                     	;# 
   359  0019                     	;# 
   360  001A                     	;# 
   361  001B                     	;# 
   362  001C                     	;# 
   363  008C                     	;# 
   364  008D                     	;# 
   365  008E                     	;# 
   366  0090                     	;# 
   367  0091                     	;# 
   368  0092                     	;# 
   369  0095                     	;# 
   370  0096                     	;# 
   371  0097                     	;# 
   372  0099                     	;# 
   373  009A                     	;# 
   374  009B                     	;# 
   375  009B                     	;# 
   376  009B                     	;# 
   377  009B                     	;# 
   378  009C                     	;# 
   379  009C                     	;# 
   380  009D                     	;# 
   381  009E                     	;# 
   382  010C                     	;# 
   383  010D                     	;# 
   384  010E                     	;# 
   385  0116                     	;# 
   386  0117                     	;# 
   387  011D                     	;# 
   388  018C                     	;# 
   389  018D                     	;# 
   390  018E                     	;# 
   391  0191                     	;# 
   392  0191                     	;# 
   393  0192                     	;# 
   394  0193                     	;# 
   395  0193                     	;# 
   396  0194                     	;# 
   397  0195                     	;# 
   398  0196                     	;# 
   399  0197                     	;# 
   400  0199                     	;# 
   401  019A                     	;# 
   402  019B                     	;# 
   403  019B                     	;# 
   404  019B                     	;# 
   405  019B                     	;# 
   406  019C                     	;# 
   407  019C                     	;# 
   408  019D                     	;# 
   409  019E                     	;# 
   410  019F                     	;# 
   411  020D                     	;# 
   412  0210                     	;# 
   413  0211                     	;# 
   414  0211                     	;# 
   415  0212                     	;# 
   416  0212                     	;# 
   417  0213                     	;# 
   418  0213                     	;# 
   419  0214                     	;# 
   420  0214                     	;# 
   421  0215                     	;# 
   422  0215                     	;# 
   423  0215                     	;# 
   424  0216                     	;# 
   425  0216                     	;# 
   426  0217                     	;# 
   427  0217                     	;# 
   428  0291                     	;# 
   429  0291                     	;# 
   430  0292                     	;# 
   431  0293                     	;# 
   432  0298                     	;# 
   433  0298                     	;# 
   434  0299                     	;# 
   435  029A                     	;# 
   436  0394                     	;# 
   437  0395                     	;# 
   438  0396                     	;# 
   439  0FE4                     	;# 
   440  0FE5                     	;# 
   441  0FE6                     	;# 
   442  0FE7                     	;# 
   443  0FE8                     	;# 
   444  0FE9                     	;# 
   445  0FEA                     	;# 
   446  0FEB                     	;# 
   447  0FED                     	;# 
   448  0FEE                     	;# 
   449  0FEF                     	;# 
   450  0711                     	;# 
   451  0712                     	;# 
   452  0713                     	;# 
   453  0714                     	;# 
   454  0715                     	;# 
   455  0716                     	;# 
   456  0717                     	;# 
   457  0718                     	;# 
   458  0719                     	;# 
   459  071A                     	;# 
   460  071A                     	;# 
   461  071A                     	;# 
   462  071B                     	;# 
   463  071C                     	;# 
   464  071C                     	;# 
   465  071C                     	;# 
   466  071D                     	;# 
   467  0000                     	;# 
   468  0001                     	;# 
   469  0002                     	;# 
   470  0003                     	;# 
   471  0004                     	;# 
   472  0005                     	;# 
   473  0006                     	;# 
   474  0007                     	;# 
   475  0008                     	;# 
   476  0009                     	;# 
   477  000A                     	;# 
   478  000B                     	;# 
   479  000C                     	;# 
   480  000D                     	;# 
   481  000E                     	;# 
   482  0010                     	;# 
   483  0011                     	;# 
   484  0012                     	;# 
   485  0015                     	;# 
   486  0016                     	;# 
   487  0016                     	;# 
   488  0017                     	;# 
   489  0018                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001C                     	;# 
   494  008C                     	;# 
   495  008D                     	;# 
   496  008E                     	;# 
   497  0090                     	;# 
   498  0091                     	;# 
   499  0092                     	;# 
   500  0095                     	;# 
   501  0096                     	;# 
   502  0097                     	;# 
   503  0099                     	;# 
   504  009A                     	;# 
   505  009B                     	;# 
   506  009B                     	;# 
   507  009B                     	;# 
   508  009B                     	;# 
   509  009C                     	;# 
   510  009C                     	;# 
   511  009D                     	;# 
   512  009E                     	;# 
   513  010C                     	;# 
   514  010D                     	;# 
   515  010E                     	;# 
   516  0116                     	;# 
   517  0117                     	;# 
   518  011D                     	;# 
   519  018C                     	;# 
   520  018D                     	;# 
   521  018E                     	;# 
   522  0191                     	;# 
   523  0191                     	;# 
   524  0192                     	;# 
   525  0193                     	;# 
   526  0193                     	;# 
   527  0194                     	;# 
   528  0195                     	;# 
   529  0196                     	;# 
   530  0197                     	;# 
   531  0199                     	;# 
   532  019A                     	;# 
   533  019B                     	;# 
   534  019B                     	;# 
   535  019B                     	;# 
   536  019B                     	;# 
   537  019C                     	;# 
   538  019C                     	;# 
   539  019D                     	;# 
   540  019E                     	;# 
   541  019F                     	;# 
   542  020D                     	;# 
   543  0210                     	;# 
   544  0211                     	;# 
   545  0211                     	;# 
   546  0212                     	;# 
   547  0212                     	;# 
   548  0213                     	;# 
   549  0213                     	;# 
   550  0214                     	;# 
   551  0214                     	;# 
   552  0215                     	;# 
   553  0215                     	;# 
   554  0215                     	;# 
   555  0216                     	;# 
   556  0216                     	;# 
   557  0217                     	;# 
   558  0217                     	;# 
   559  0291                     	;# 
   560  0291                     	;# 
   561  0292                     	;# 
   562  0293                     	;# 
   563  0298                     	;# 
   564  0298                     	;# 
   565  0299                     	;# 
   566  029A                     	;# 
   567  0394                     	;# 
   568  0395                     	;# 
   569  0396                     	;# 
   570  0FE4                     	;# 
   571  0FE5                     	;# 
   572  0FE6                     	;# 
   573  0FE7                     	;# 
   574  0FE8                     	;# 
   575  0FE9                     	;# 
   576  0FEA                     	;# 
   577  0FEB                     	;# 
   578  0FED                     	;# 
   579  0FEE                     	;# 
   580  0FEF                     	;# 
   581  0711                     	;# 
   582  0712                     	;# 
   583  0713                     	;# 
   584  0714                     	;# 
   585  0715                     	;# 
   586  0716                     	;# 
   587  0717                     	;# 
   588  0718                     	;# 
   589  0719                     	;# 
   590  071A                     	;# 
   591  071A                     	;# 
   592  071A                     	;# 
   593  071B                     	;# 
   594  071C                     	;# 
   595  071C                     	;# 
   596  071C                     	;# 
   597  071D                     	;# 
   598  0000                     	;# 
   599  0001                     	;# 
   600  0002                     	;# 
   601  0003                     	;# 
   602  0004                     	;# 
   603  0005                     	;# 
   604  0006                     	;# 
   605  0007                     	;# 
   606  0008                     	;# 
   607  0009                     	;# 
   608  000A                     	;# 
   609  000B                     	;# 
   610  000C                     	;# 
   611  000D                     	;# 
   612  000E                     	;# 
   613  0010                     	;# 
   614  0011                     	;# 
   615  0012                     	;# 
   616  0015                     	;# 
   617  0016                     	;# 
   618  0016                     	;# 
   619  0017                     	;# 
   620  0018                     	;# 
   621  0019                     	;# 
   622  001A                     	;# 
   623  001B                     	;# 
   624  001C                     	;# 
   625  008C                     	;# 
   626  008D                     	;# 
   627  008E                     	;# 
   628  0090                     	;# 
   629  0091                     	;# 
   630  0092                     	;# 
   631  0095                     	;# 
   632  0096                     	;# 
   633  0097                     	;# 
   634  0099                     	;# 
   635  009A                     	;# 
   636  009B                     	;# 
   637  009B                     	;# 
   638  009B                     	;# 
   639  009B                     	;# 
   640  009C                     	;# 
   641  009C                     	;# 
   642  009D                     	;# 
   643  009E                     	;# 
   644  010C                     	;# 
   645  010D                     	;# 
   646  010E                     	;# 
   647  0116                     	;# 
   648  0117                     	;# 
   649  011D                     	;# 
   650  018C                     	;# 
   651  018D                     	;# 
   652  018E                     	;# 
   653  0191                     	;# 
   654  0191                     	;# 
   655  0192                     	;# 
   656  0193                     	;# 
   657  0193                     	;# 
   658  0194                     	;# 
   659  0195                     	;# 
   660  0196                     	;# 
   661  0197                     	;# 
   662  0199                     	;# 
   663  019A                     	;# 
   664  019B                     	;# 
   665  019B                     	;# 
   666  019B                     	;# 
   667  019B                     	;# 
   668  019C                     	;# 
   669  019C                     	;# 
   670  019D                     	;# 
   671  019E                     	;# 
   672  019F                     	;# 
   673  020D                     	;# 
   674  0210                     	;# 
   675  0211                     	;# 
   676  0211                     	;# 
   677  0212                     	;# 
   678  0212                     	;# 
   679  0213                     	;# 
   680  0213                     	;# 
   681  0214                     	;# 
   682  0214                     	;# 
   683  0215                     	;# 
   684  0215                     	;# 
   685  0215                     	;# 
   686  0216                     	;# 
   687  0216                     	;# 
   688  0217                     	;# 
   689  0217                     	;# 
   690  0291                     	;# 
   691  0291                     	;# 
   692  0292                     	;# 
   693  0293                     	;# 
   694  0298                     	;# 
   695  0298                     	;# 
   696  0299                     	;# 
   697  029A                     	;# 
   698  0394                     	;# 
   699  0395                     	;# 
   700  0396                     	;# 
   701  0FE4                     	;# 
   702  0FE5                     	;# 
   703  0FE6                     	;# 
   704  0FE7                     	;# 
   705  0FE8                     	;# 
   706  0FE9                     	;# 
   707  0FEA                     	;# 
   708  0FEB                     	;# 
   709  0FED                     	;# 
   710  0FEE                     	;# 
   711  0FEF                     	;# 
   712  0711                     	;# 
   713  0712                     	;# 
   714  0713                     	;# 
   715  0714                     	;# 
   716  0715                     	;# 
   717  0716                     	;# 
   718  0717                     	;# 
   719  0718                     	;# 
   720  0719                     	;# 
   721  071A                     	;# 
   722  071A                     	;# 
   723  071A                     	;# 
   724  071B                     	;# 
   725  071C                     	;# 
   726  071C                     	;# 
   727  071C                     	;# 
   728  071D                     	;# 
   729  0000                     	;# 
   730  0001                     	;# 
   731  0002                     	;# 
   732  0003                     	;# 
   733  0004                     	;# 
   734  0005                     	;# 
   735  0006                     	;# 
   736  0007                     	;# 
   737  0008                     	;# 
   738  0009                     	;# 
   739  000A                     	;# 
   740  000B                     	;# 
   741  000C                     	;# 
   742  000D                     	;# 
   743  000E                     	;# 
   744  0010                     	;# 
   745  0011                     	;# 
   746  0012                     	;# 
   747  0015                     	;# 
   748  0016                     	;# 
   749  0016                     	;# 
   750  0017                     	;# 
   751  0018                     	;# 
   752  0019                     	;# 
   753  001A                     	;# 
   754  001B                     	;# 
   755  001C                     	;# 
   756  008C                     	;# 
   757  008D                     	;# 
   758  008E                     	;# 
   759  0090                     	;# 
   760  0091                     	;# 
   761  0092                     	;# 
   762  0095                     	;# 
   763  0096                     	;# 
   764  0097                     	;# 
   765  0099                     	;# 
   766  009A                     	;# 
   767  009B                     	;# 
   768  009B                     	;# 
   769  009B                     	;# 
   770  009B                     	;# 
   771  009C                     	;# 
   772  009C                     	;# 
   773  009D                     	;# 
   774  009E                     	;# 
   775  010C                     	;# 
   776  010D                     	;# 
   777  010E                     	;# 
   778  0116                     	;# 
   779  0117                     	;# 
   780  011D                     	;# 
   781  018C                     	;# 
   782  018D                     	;# 
   783  018E                     	;# 
   784  0191                     	;# 
   785  0191                     	;# 
   786  0192                     	;# 
   787  0193                     	;# 
   788  0193                     	;# 
   789  0194                     	;# 
   790  0195                     	;# 
   791  0196                     	;# 
   792  0197                     	;# 
   793  0199                     	;# 
   794  019A                     	;# 
   795  019B                     	;# 
   796  019B                     	;# 
   797  019B                     	;# 
   798  019B                     	;# 
   799  019C                     	;# 
   800  019C                     	;# 
   801  019D                     	;# 
   802  019E                     	;# 
   803  019F                     	;# 
   804  020D                     	;# 
   805  0210                     	;# 
   806  0211                     	;# 
   807  0211                     	;# 
   808  0212                     	;# 
   809  0212                     	;# 
   810  0213                     	;# 
   811  0213                     	;# 
   812  0214                     	;# 
   813  0214                     	;# 
   814  0215                     	;# 
   815  0215                     	;# 
   816  0215                     	;# 
   817  0216                     	;# 
   818  0216                     	;# 
   819  0217                     	;# 
   820  0217                     	;# 
   821  0291                     	;# 
   822  0291                     	;# 
   823  0292                     	;# 
   824  0293                     	;# 
   825  0298                     	;# 
   826  0298                     	;# 
   827  0299                     	;# 
   828  029A                     	;# 
   829  0394                     	;# 
   830  0395                     	;# 
   831  0396                     	;# 
   832  0FE4                     	;# 
   833  0FE5                     	;# 
   834  0FE6                     	;# 
   835  0FE7                     	;# 
   836  0FE8                     	;# 
   837  0FE9                     	;# 
   838  0FEA                     	;# 
   839  0FEB                     	;# 
   840  0FED                     	;# 
   841  0FEE                     	;# 
   842  0FEF                     	;# 
   843  0711                     	;# 
   844  0712                     	;# 
   845  0713                     	;# 
   846  0714                     	;# 
   847  0715                     	;# 
   848  0716                     	;# 
   849  0717                     	;# 
   850  0718                     	;# 
   851  0719                     	;# 
   852  071A                     	;# 
   853  071A                     	;# 
   854  071A                     	;# 
   855  071B                     	;# 
   856  071C                     	;# 
   857  071C                     	;# 
   858  071C                     	;# 
   859  071D                     	;# 
   860                           
   861                           	psect	nvBANK0
   862  0000'                    __pnvBANK0:	
   863  0000'                    _p_disp:	
   864  0000'                    	ds	1
   865  000D                     _PORTBbits	set	13
   866  0011                     _PIR1bits	set	17
   867  0015                     _TMR0	set	21
   868  000B                     _INTCONbits	set	11
   869  005A                     _T0IF	set	90
   870  008B                     _SSPIF	set	139
   871  005D                     _T0IE	set	93
   872  0095                     _OPTION_REGbits	set	149
   873  008E                     _TRISCbits	set	142
   874  008D                     _TRISBbits	set	141
   875  008E                     _TRISC	set	142
   876  008D                     _TRISB	set	141
   877  008C                     _TRISA	set	140
   878  0099                     _OSCCONbits	set	153
   879  010E                     _LATC	set	270
   880  010C                     _LATA	set	268
   881  010D                     _LATB	set	269
   882  018E                     _ANSELC	set	398
   883  018D                     _ANSELB	set	397
   884  018C                     _ANSELA	set	396
   885  0214                     _SSPSTATbits	set	532
   886  0211                     _SSPBUF	set	529
   887  0216                     _SSPCON2bits	set	534
   888  0215                     _SSPCON1	set	533
   889  0212                     _SSPADD	set	530
   890  10B4                     _ACKEN	set	4276
   891  10B1                     _RSEN	set	4273
   892  10B2                     _PEN	set	4274
   893  10B0                     _SEN	set	4272
   894                           
   895                           ; #config settings
   896  0000                     
   897                           	psect	cinit
   898  0000'                    start_initialization:	
   899  0000'                    __initialization:	
   900                           
   901                           ; Clear objects allocated to BANK0
   902  0000' 3000'              	movlw	low __pbssBANK0
   903  0001' 0084               	movwf	4
   904  0002' 3000'              	movlw	high __pbssBANK0
   905  0003' 0085               	movwf	5
   906  0004' 300F               	movlw	15
   907  0005' 2000'              	fcall	clear_ram0
   908  0006'                    end_of_initialization:	
   909                           ;End of C runtime variable initialization code
   910                           
   911  0006'                    __end_of__initialization:	
   912  0006' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   913  0007' 0020               	movlb	0
   914  0008' 2800'              	ljmp	_main	;jump to C main() function
   915                           
   916                           	psect	bssBANK0
   917  0000'                    __pbssBANK0:	
   918  0000'                    _seg_disp_save:	
   919  0000'                    	ds	2
   920  0002'                    _seg_disp_sleep:	
   921  0002'                    	ds	2
   922  0004'                    _old_btns:	
   923  0004'                    	ds	1
   924  0005'                    _p_btns:	
   925  0005'                    	ds	1
   926  0006'                    _INT_FLAGS:	
   927  0006'                    	ds	1
   928  0007'                    _ee_seq_4:	
   929  0007'                    	ds	4
   930  000B'                    _v_disp:	
   931  000B'                    	ds	3
   932  000E'                    _v_btns:	
   933  000E'                    	ds	1
   934                           
   935                           	psect	clrtext
   936  0000'                    clear_ram0:	
   937                           ;	Called with FSR0 containing the base address, and
   938                           ;	WREG with the size to clear
   939                           
   940  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   941  0001'                    clrloop0:	
   942  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   943  0002' 3101               	addfsr 0,1
   944  0003' 0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   945  0004' 2801'              	goto	clrloop0	;have we reached the end yet?
   946  0005' 3400               	retlw	0	;all done for this memory range, return
   947                           
   948                           	psect	cstackCOMMON
   949  0000'                    __pcstackCOMMON:	
   950  0000'                    ?_init_oscillerator:	
   951  0000'                    ??_init_oscillerator:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0000'                    ?_init_ports:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0000'                    ??_init_ports:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0000'                    ?_init_i2c:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0000'                    ??_init_i2c:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0000'                    ?_init_interrupt:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0000'                    ??_init_interrupt:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0000'                    ?_res_ports:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0000'                    ??_res_ports:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0000'                    ?_set_ports:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0000'                    ??_set_ports:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0000'                    ?_init_interrupt_timer:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0000'                    ??_init_interrupt_timer:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0000'                    ?_seg_disp_47_set_val:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0000'                    ?_init_structs:	
   994                           ; 1 bytes @ 0x0
   995                           
   996  0000'                    ?_rst_storage:	
   997                           ; 1 bytes @ 0x0
   998                           
   999  0000'                    ??_rst_storage:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  0000'                    ?_update_switches:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0000'                    ?_update_int_flags:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0000'                    ?_init:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011  0000'                    ??_init:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  0000'                    ?_create_switch:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017  0000'                    ??_create_switch:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0000'                    ?_update_switch:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0000'                    ?_eeprom_write_16:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026  0000'                    ?_eeprom_read_16:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0000'                    ?_on_interrupt_timer_0:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0000'                    ??_on_interrupt_timer_0:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035  0000'                    ?_interruptHandler:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038  0000'                    ??_interruptHandler:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041  0000'                    ?_vis_next_digit:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044  0000'                    ?_create_seg_disp_47:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047  0000'                    ??_create_seg_disp_47:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050  0000'                    ?_seg_disp_47_on:	
  1051                           ; 1 bytes @ 0x0
  1052                           
  1053  0000'                    ??_seg_disp_47_on:	
  1054                           ; 1 bytes @ 0x0
  1055                           
  1056  0000'                    ?_seg_disp_47_off:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059  0000'                    ??_seg_disp_47_off:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0000'                    ?_main:	
  1063                           ; 1 bytes @ 0x0
  1064                           
  1065  0000'                    ?_seg_disp_47_get_val:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0000'                    ?___wmul:	
  1069                           ; 2 bytes @ 0x0
  1070                           
  1071  0000'                    ?___lwdiv:	
  1072                           ; 2 bytes @ 0x0
  1073                           
  1074  0000'                    update_switch@sbtn:	
  1075                           ; 2 bytes @ 0x0
  1076                           
  1077  0000'                    create_seg_disp_47@s_t:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0000'                    seg_disp_47_on@s_t:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0000'                    seg_disp_47_off@s_t:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0000'                    eeprom_write_16@add:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0000'                    eeprom_read_16@add:	
  1090                           ; 2 bytes @ 0x0
  1091                           
  1092  0000'                    seg_disp_47_set_val@value:	
  1093                           ; 2 bytes @ 0x0
  1094                           
  1095  0000'                    ___wmul@multiplier:	
  1096                           ; 2 bytes @ 0x0
  1097                           
  1098  0000'                    ___lwdiv@divisor:	
  1099                           ; 2 bytes @ 0x0
  1100                           
  1101                           
  1102                           ; 2 bytes @ 0x0
  1103  0000'                    	ds	1
  1104  0001'                    create_switch@s_t:	
  1105  0001'                    update_switch@streak:	
  1106                           ; 1 bytes @ 0x1
  1107                           
  1108                           
  1109                           ; 4 bytes @ 0x1
  1110  0001'                    	ds	1
  1111  0002'                    ??_seg_disp_47_get_val:	
  1112  0002'                    ??_seg_disp_47_set_val:	
  1113                           ; 1 bytes @ 0x2
  1114                           
  1115  0002'                    ??_init_structs:	
  1116                           ; 1 bytes @ 0x2
  1117                           
  1118  0002'                    ??_eeprom_read_16:	
  1119                           ; 1 bytes @ 0x2
  1120                           
  1121  0002'                    eeprom_write_16@eeData:	
  1122                           ; 1 bytes @ 0x2
  1123                           
  1124  0002'                    ___wmul@multiplicand:	
  1125                           ; 1 bytes @ 0x2
  1126                           
  1127  0002'                    ___lwdiv@dividend:	
  1128                           ; 2 bytes @ 0x2
  1129                           
  1130                           
  1131                           ; 2 bytes @ 0x2
  1132  0002'                    	ds	1
  1133  0003'                    ??_eeprom_write_16:	
  1134  0003'                    eeprom_read_16@addHigh:	
  1135                           ; 1 bytes @ 0x3
  1136                           
  1137                           
  1138                           ; 1 bytes @ 0x3
  1139  0003'                    	ds	1
  1140  0004'                    ??___wmul:	
  1141  0004'                    ??___lwdiv:	
  1142                           ; 1 bytes @ 0x4
  1143                           
  1144  0004'                    eeprom_write_16@slaveAdd:	
  1145                           ; 1 bytes @ 0x4
  1146                           
  1147  0004'                    eeprom_read_16@addLow:	
  1148                           ; 1 bytes @ 0x4
  1149                           
  1150  0004'                    seg_disp_47_set_val@s_t:	
  1151                           ; 1 bytes @ 0x4
  1152                           
  1153  0004'                    ___wmul@product:	
  1154                           ; 1 bytes @ 0x4
  1155                           
  1156                           
  1157                           ; 2 bytes @ 0x4
  1158  0004'                    	ds	1
  1159  0005'                    ??_update_switch:	
  1160  0005'                    ?_update_seg_disp_47:	
  1161                           ; 1 bytes @ 0x5
  1162                           
  1163  0005'                    eeprom_write_16@addHigh:	
  1164                           ; 1 bytes @ 0x5
  1165                           
  1166  0005'                    eeprom_read_16@tempData:	
  1167                           ; 1 bytes @ 0x5
  1168                           
  1169  0005'                    update_seg_disp_47@cur_val:	
  1170                           ; 1 bytes @ 0x5
  1171                           
  1172  0005'                    seg_disp_47_get_val@val:	
  1173                           ; 2 bytes @ 0x5
  1174                           
  1175  0005'                    ___lwdiv@quotient:	
  1176                           ; 2 bytes @ 0x5
  1177                           
  1178                           
  1179                           ; 2 bytes @ 0x5
  1180  0005'                    	ds	1
  1181  0006'                    eeprom_write_16@addLow:	
  1182  0006'                    eeprom_read_16@slaveAdd:	
  1183                           ; 1 bytes @ 0x6
  1184                           
  1185                           
  1186                           ; 1 bytes @ 0x6
  1187  0006'                    	ds	1
  1188  0007'                    ??_update_seg_disp_47:	
  1189  0007'                    update_seg_disp_47@s_t:	
  1190                           ; 1 bytes @ 0x7
  1191                           
  1192  0007'                    seg_disp_47_get_val@s_t:	
  1193                           ; 1 bytes @ 0x7
  1194                           
  1195  0007'                    ___lwdiv@counter:	
  1196                           ; 1 bytes @ 0x7
  1197                           
  1198                           
  1199                           ; 1 bytes @ 0x7
  1200  0007'                    	ds	1
  1201  0008'                    ?___lwmod:	
  1202  0008'                    ___lwmod@divisor:	
  1203                           ; 2 bytes @ 0x8
  1204                           
  1205                           
  1206                           ; 2 bytes @ 0x8
  1207  0008'                    	ds	1
  1208  0009'                    update_switch@s_t:	
  1209                           
  1210                           ; 1 bytes @ 0x9
  1211  0009'                    	ds	1
  1212  000A'                    ??_update_switches:	
  1213  000A'                    ___lwmod@dividend:	
  1214                           ; 1 bytes @ 0xA
  1215                           
  1216                           
  1217                           ; 2 bytes @ 0xA
  1218  000A'                    	ds	1
  1219  000B'                    update_switches@i:	
  1220                           
  1221                           ; 1 bytes @ 0xB
  1222  000B'                    	ds	1
  1223  000C'                    ??___lwmod:	
  1224                           
  1225                           ; 1 bytes @ 0xC
  1226  000C'                    	ds	1
  1227  000D'                    ___lwmod@counter:	
  1228                           
  1229                           ; 1 bytes @ 0xD
  1230  000D'                    	ds	1
  1231  000E'                    ??_update_int_flags:	
  1232                           
  1233                           	psect	cstackBANK0
  1234  0000'                    __pcstackBANK0:	
  1235                           ; 1 bytes @ 0xE
  1236                           
  1237  0000'                    ??_vis_next_digit:	
  1238                           
  1239                           ; 1 bytes @ 0x0
  1240  0000'                    	ds	3
  1241  0003'                    vis_next_digit@val:	
  1242                           
  1243                           ; 2 bytes @ 0x3
  1244  0003'                    	ds	2
  1245  0005'                    vis_next_digit@digit_val:	
  1246                           
  1247                           ; 1 bytes @ 0x5
  1248  0005'                    	ds	1
  1249  0006'                    vis_next_digit@sLATB:	
  1250                           
  1251                           ; 1 bytes @ 0x6
  1252  0006'                    	ds	1
  1253  0007'                    vis_next_digit@p:	
  1254                           
  1255                           ; 1 bytes @ 0x7
  1256  0007'                    	ds	1
  1257  0008'                    vis_next_digit@digit_divider:	
  1258                           
  1259                           ; 2 bytes @ 0x8
  1260  0008'                    	ds	2
  1261  000A'                    vis_next_digit@s_t:	
  1262                           
  1263                           ; 1 bytes @ 0xA
  1264  000A'                    	ds	1
  1265  000B'                    ??_main:	
  1266                           
  1267                           ; 1 bytes @ 0xB
  1268  000B'                    	ds	1
  1269  000C'                    main@k:	
  1270                           
  1271                           ; 1 bytes @ 0xC
  1272  000C'                    	ds	1
  1273  000D'                    main@f:	
  1274                           
  1275                           ; 1 bytes @ 0xD
  1276  000D'                    	ds	1
  1277                           
  1278                           	psect	maintext
  1279  0000'                    __pmaintext:	
  1280 ;;
  1281 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1282 ;;
  1283 ;; *************** function _main *****************
  1284 ;; Defined at:
  1285 ;;		line 40 in file "bust_1512.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  f               1   13[BANK0 ] unsigned char 
  1290 ;;  k               1   12[BANK0 ] unsigned char 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : B1F/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1
  1300 ;;      Params:         0       0       0
  1301 ;;      Locals:         0       2       0
  1302 ;;      Temps:          0       1       0
  1303 ;;      Totals:         0       3       0
  1304 ;;Total ram usage:        3 bytes
  1305 ;; Hardware stack levels required when called:    5
  1306 ;; This function calls:
  1307 ;;		_eeprom_read_16
  1308 ;;		_eeprom_write_16
  1309 ;;		_init
  1310 ;;		_init_structs
  1311 ;;		_rst_storage
  1312 ;;		_update_int_flags
  1313 ;;		_update_seg_disp_47
  1314 ;;		_update_switches
  1315 ;; This function is called by:
  1316 ;;		Startup code after reset
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           
  1321                           ;psect for function _main
  1322  0000'                    _main:	
  1323                           
  1324                           ;bust_1512.c: 41:     init();
  1325                           
  1326                           ;incstack = 0
  1327                           ; Regs used in _main: [allreg]
  1328  0000' 2000'              	fcall	_init
  1329                           
  1330                           ;bust_1512.c: 42:     init_structs();
  1331  0001' 2000'              	fcall	_init_structs
  1332                           
  1333                           ;bust_1512.c: 45:     if (eeprom_read_16(0xA0, 0x0001) != 0x01){
  1334  0002' 3001               	movlw	1
  1335  0003' 0080'              	movwf	eeprom_read_16@add
  1336  0004' 3000               	movlw	0
  1337  0005' 0081'              	movwf	eeprom_read_16@add+1
  1338  0006' 30A0               	movlw	160
  1339  0007' 2000'              	fcall	_eeprom_read_16
  1340  0008' 3A01               	xorlw	1
  1341  0009' 1903               	skipnz
  1342  000A' 281F'              	goto	l2014
  1343                           
  1344                           ;bust_1512.c: 46:         rst_storage();
  1345  000B' 3180' 2000' 3180'  	fcall	_rst_storage
  1346                           
  1347                           ;bust_1512.c: 47:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1348  000E' 300D               	movlw	13
  1349  000F' 0020               	movlb	0	; select bank0
  1350  0010' 008B'              	movwf	??_main
  1351  0011' 30FB               	movlw	251
  1352  0012'                    u2297:	
  1353  0012' 0B89               	decfsz	9,f
  1354  0013' 2812'              	goto	u2297
  1355  0014' 0B8B'              	decfsz	??_main,f
  1356  0015' 2812'              	goto	u2297
  1357  0016' 3200               	nop2
  1358                           
  1359                           ;bust_1512.c: 48:         eeprom_write_16(0xA0, 0x0001, 0x01);
  1360  0017' 3001               	movlw	1
  1361  0018' 0080'              	movwf	eeprom_write_16@add
  1362  0019' 3000               	movlw	0
  1363  001A' 0081'              	movwf	eeprom_write_16@add+1
  1364  001B' 0182'              	clrf	eeprom_write_16@eeData
  1365  001C' 0A82'              	incf	eeprom_write_16@eeData,f
  1366  001D' 30A0               	movlw	160
  1367  001E' 2000'              	fcall	_eeprom_write_16
  1368  001F'                    l2014:	
  1369                           
  1370                           ;bust_1512.c: 52:     uint8_t k = 0; uint8_t f = 0;
  1371  001F' 0020               	movlb	0	; select bank0
  1372  0020' 018C'              	clrf	main@k
  1373  0021' 018D'              	clrf	main@f
  1374  0022'                    l2018:	
  1375                           
  1376                           ;bust_1512.c: 55:         if (f == 0) k++; if (k >= 7 && f == 0) { f = 1; }
  1377  0022' 0020               	movlb	0	; select bank0
  1378  0023' 080D'              	movf	main@f,w
  1379  0024' 1D03               	btfss	3,2
  1380  0025' 282A'              	goto	l2022
  1381  0026' 3001               	movlw	1
  1382  0027' 008B'              	movwf	??_main
  1383  0028' 080B'              	movf	??_main,w
  1384  0029' 078C'              	addwf	main@k,f
  1385  002A'                    l2022:	
  1386  002A' 3007               	movlw	7
  1387  002B' 020C'              	subwf	main@k,w
  1388  002C' 1C03               	skipc
  1389  002D' 2834'              	goto	l2028
  1390  002E' 080D'              	movf	main@f,w
  1391  002F' 1D03               	btfss	3,2
  1392  0030' 2834'              	goto	l2028
  1393  0031' 018D'              	clrf	main@f
  1394  0032' 0A8D'              	incf	main@f,f
  1395  0033' 2822'              	goto	l2018
  1396  0034'                    l2028:	
  1397                           
  1398                           ;bust_1512.c: 58:             update_switches();
  1399  0034' 2000'              	fcall	_update_switches
  1400                           
  1401                           ;bust_1512.c: 59:             update_seg_disp_47(p_disp, 331);
  1402  0035' 304B               	movlw	75
  1403  0036' 0085'              	movwf	update_seg_disp_47@cur_val
  1404  0037' 3001               	movlw	1
  1405  0038' 0086'              	movwf	update_seg_disp_47@cur_val+1
  1406  0039' 0020               	movlb	0	; select bank0
  1407  003A' 0800'              	movf	_p_disp,w
  1408  003B' 2000'              	fcall	_update_seg_disp_47
  1409                           
  1410                           ;bust_1512.c: 60:             update_int_flags();
  1411  003C' 2000'              	fcall	_update_int_flags
  1412  003D' 2822'              	goto	l2018
  1413  003E'                    __end_of_main:	
  1414                           
  1415                           	psect	text1
  1416  0000'                    __ptext1:	
  1417 ;; *************** function _update_switches *****************
  1418 ;; Defined at:
  1419 ;;		line 67 in file "bust_1512.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  i               1   11[COMMON] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMMON   BANK0   BANK1
  1433 ;;      Params:         0       0       0
  1434 ;;      Locals:         1       0       0
  1435 ;;      Temps:          1       0       0
  1436 ;;      Totals:         2       0       0
  1437 ;;Total ram usage:        2 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; Hardware stack levels required when called:    3
  1440 ;; This function calls:
  1441 ;;		_update_switch
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           
  1448                           ;psect for function _update_switches
  1449  0000'                    _update_switches:	
  1450                           
  1451                           ;bust_1512.c: 69:     update_switch (p_btns[0], PORTBbits.RB4, 5);
  1452                           
  1453                           ;incstack = 0
  1454                           ; Regs used in _update_switches: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1455  0000' 3000               	movlw	0
  1456  0001' 0020               	movlb	0	; select bank0
  1457  0002' 1A0D               	btfsc	13,4	;volatile
  1458  0003' 3001               	movlw	1
  1459  0004' 0080'              	movwf	update_switch@sbtn
  1460  0005' 3000               	movlw	0
  1461  0006' 0084'              	movwf	update_switch@streak+3
  1462  0007' 3000               	movlw	0
  1463  0008' 0083'              	movwf	update_switch@streak+2
  1464  0009' 3000               	movlw	0
  1465  000A' 0082'              	movwf	update_switch@streak+1
  1466  000B' 3005               	movlw	5
  1467  000C' 0081'              	movwf	update_switch@streak
  1468  000D' 0805'              	movf	_p_btns,w
  1469  000E' 2000'              	fcall	_update_switch
  1470                           
  1471                           ;bust_1512.c: 72:     for (uint8_t i = 0; i < 1; i++){
  1472  000F' 018B'              	clrf	update_switches@i
  1473  0010'                    l1922:	
  1474                           
  1475                           ;bust_1512.c: 73:         old_btns[i] = v_btns[i];
  1476  0010' 080B'              	movf	update_switches@i,w
  1477  0011' 3E00'              	addlw	(low (_v_btns| 0))& (0+255)
  1478  0012' 0086               	movwf	6
  1479  0013' 0187               	clrf	7
  1480  0014' 0801               	movf	1,w
  1481  0015' 008A'              	movwf	??_update_switches
  1482  0016' 080B'              	movf	update_switches@i,w
  1483  0017' 3E00'              	addlw	(low (_old_btns| 0))& (0+255)
  1484  0018' 0086               	movwf	6
  1485  0019' 0187               	clrf	7
  1486  001A' 080A'              	movf	??_update_switches,w
  1487  001B' 0081               	movwf	1
  1488                           
  1489                           ;bust_1512.c: 74:     }
  1490  001C' 3001               	movlw	1
  1491  001D' 008A'              	movwf	??_update_switches
  1492  001E' 080A'              	movf	??_update_switches,w
  1493  001F' 078B'              	addwf	update_switches@i,f
  1494  0020' 080B'              	movf	update_switches@i,w
  1495  0021' 1D03               	btfss	3,2
  1496  0022' 0008               	return
  1497  0023' 2810'              	goto	l1922
  1498  0024'                    __end_of_update_switches:	
  1499                           
  1500                           	psect	text2
  1501  0000'                    __ptext2:	
  1502 ;; *************** function _update_switch *****************
  1503 ;; Defined at:
  1504 ;;		line 20 in file "switches.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  s_t             1    wreg     PTR struct .
  1507 ;;		 -> v_btns(1), 
  1508 ;;  sbtn            1    0[COMMON] unsigned char 
  1509 ;;  streak          4    1[COMMON] unsigned long 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  s_t             1    9[COMMON] PTR struct .
  1512 ;;		 -> v_btns(1), 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      void 
  1515 ;; Registers used:
  1516 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMMON   BANK0   BANK1
  1522 ;;      Params:         5       0       0
  1523 ;;      Locals:         1       0       0
  1524 ;;      Temps:          4       0       0
  1525 ;;      Totals:        10       0       0
  1526 ;;Total ram usage:       10 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    2
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_update_switches
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           
  1537                           ;psect for function _update_switch
  1538  0000'                    _update_switch:	
  1539                           
  1540                           ;incstack = 0
  1541                           ; Regs used in _update_switch: [wreg+fsr1l+fsr1h+status,2+status,0]
  1542                           ;update_switch@s_t stored from wreg
  1543  0000' 0089'              	movwf	update_switch@s_t
  1544                           
  1545                           ;switches.c: 21:     if (sbtn == s_t->prev && sbtn != s_t->state){
  1546  0001' 0809'              	movf	update_switch@s_t,w
  1547  0002' 0086               	movwf	6
  1548  0003' 0187               	clrf	7
  1549  0004' 0801               	movf	1,w
  1550  0005' 3901               	andlw	1
  1551  0006' 0600'              	xorwf	update_switch@sbtn,w
  1552  0007' 1D03               	skipz
  1553  0008' 2855'              	goto	l1738
  1554  0009' 0809'              	movf	update_switch@s_t,w
  1555  000A' 0086               	movwf	6
  1556  000B' 0187               	clrf	7
  1557  000C' 0C01               	rrf	1,w
  1558  000D' 3901               	andlw	1
  1559  000E' 0600'              	xorwf	update_switch@sbtn,w
  1560  000F' 1903               	skipnz
  1561  0010' 2855'              	goto	l1738
  1562                           
  1563                           ;switches.c: 22:         s_t->streak ++;
  1564  0011' 0809'              	movf	update_switch@s_t,w
  1565  0012' 0086               	movwf	6
  1566  0013' 0187               	clrf	7
  1567  0014' 0C01               	rrf	1,w
  1568  0015' 0085'              	movwf	??_update_switch
  1569  0016' 0C05'              	rrf	??_update_switch,w
  1570  0017' 391F               	andlw	31
  1571  0018' 0085'              	movwf	??_update_switch
  1572  0019' 0A85'              	incf	??_update_switch,f
  1573  001A' 0D85'              	rlf	??_update_switch,f
  1574  001B' 0D85'              	rlf	??_update_switch,f
  1575  001C' 0801               	movf	1,w
  1576  001D' 0605'              	xorwf	??_update_switch,w
  1577  001E' 3983               	andlw	-125
  1578  001F' 0605'              	xorwf	??_update_switch,w
  1579  0020' 0081               	movwf	1
  1580                           
  1581                           ;switches.c: 23:         if (s_t->streak >= streak){
  1582  0021' 0809'              	movf	update_switch@s_t,w
  1583  0022' 0086               	movwf	6
  1584  0023' 0187               	clrf	7
  1585  0024' 0C01               	rrf	1,w
  1586  0025' 0C89               	rrf	9,f
  1587  0026' 391F               	andlw	31
  1588  0027' 0085'              	movwf	??_update_switch
  1589  0028' 0186'              	clrf	??_update_switch+1
  1590  0029' 0187'              	clrf	??_update_switch+2
  1591  002A' 0188'              	clrf	??_update_switch+3
  1592  002B' 0804'              	movf	update_switch@streak+3,w
  1593  002C' 0208'              	subwf	??_update_switch+3,w
  1594  002D' 1D03               	skipz
  1595  002E' 2839'              	goto	u1615
  1596  002F' 0803'              	movf	update_switch@streak+2,w
  1597  0030' 0207'              	subwf	??_update_switch+2,w
  1598  0031' 1D03               	skipz
  1599  0032' 2839'              	goto	u1615
  1600  0033' 0802'              	movf	update_switch@streak+1,w
  1601  0034' 0206'              	subwf	??_update_switch+1,w
  1602  0035' 1D03               	skipz
  1603  0036' 2839'              	goto	u1615
  1604  0037' 0801'              	movf	update_switch@streak,w
  1605  0038' 0205'              	subwf	??_update_switch,w
  1606  0039'                    u1615:	
  1607  0039' 1C03               	skipc
  1608  003A' 0008               	return
  1609                           
  1610                           ;switches.c: 24:             s_t->state = sbtn;
  1611  003B' 0809'              	movf	update_switch@s_t,w
  1612  003C' 0086               	movwf	6
  1613  003D' 0187               	clrf	7
  1614  003E' 0800'              	movf	update_switch@sbtn,w
  1615  003F' 3901               	andlw	1
  1616  0040' 1081               	bcf	1,1
  1617  0041' 1D03               	skipz
  1618  0042' 1481               	bsf	1,1
  1619                           
  1620                           ;switches.c: 25:             s_t->status = !sbtn;
  1621  0043' 0800'              	movf	update_switch@sbtn,w
  1622  0044' 1D03               	btfss	3,2
  1623  0045' 2848'              	goto	u1620
  1624  0046' 3001               	movlw	1
  1625  0047' 2849'              	goto	u1630
  1626  0048'                    u1620:	
  1627  0048' 3000               	movlw	0
  1628  0049'                    u1630:	
  1629  0049' 0085'              	movwf	??_update_switch
  1630  004A' 0809'              	movf	update_switch@s_t,w
  1631  004B' 0086               	movwf	6
  1632  004C' 0187               	clrf	7
  1633  004D' 0C85'              	rrf	??_update_switch,f
  1634  004E' 0C85'              	rrf	??_update_switch,f
  1635  004F' 0801               	movf	1,w
  1636  0050' 0605'              	xorwf	??_update_switch,w
  1637  0051' 397F               	andlw	-129
  1638  0052' 0605'              	xorwf	??_update_switch,w
  1639  0053' 0081               	movwf	1
  1640  0054' 0008               	return
  1641  0055'                    l1738:	
  1642                           
  1643                           ;switches.c: 29:         s_t->prev = sbtn;
  1644  0055' 0809'              	movf	update_switch@s_t,w
  1645  0056' 0086               	movwf	6
  1646  0057' 0187               	clrf	7
  1647  0058' 0800'              	movf	update_switch@sbtn,w
  1648  0059' 3901               	andlw	1
  1649  005A' 1001               	bcf	1,0
  1650  005B' 1D03               	skipz
  1651  005C' 1401               	bsf	1,0
  1652                           
  1653                           ;switches.c: 30:         s_t->streak = 0;
  1654  005D' 0809'              	movf	update_switch@s_t,w
  1655  005E' 0086               	movwf	6
  1656  005F' 0187               	clrf	7
  1657  0060' 3083               	movlw	-125
  1658  0061' 0581               	andwf	1,f
  1659  0062' 0008               	return
  1660  0063'                    __end_of_update_switch:	
  1661                           
  1662                           	psect	text3
  1663  0000'                    __ptext3:	
  1664 ;; *************** function _update_seg_disp_47 *****************
  1665 ;; Defined at:
  1666 ;;		line 141 in file "segmentdisplay47.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  s_t             1    wreg     PTR struct .
  1669 ;;		 -> v_disp(3), NULL(0), 
  1670 ;;  cur_val         2    5[COMMON] unsigned short 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  s_t             1    7[COMMON] PTR struct .
  1673 ;;		 -> v_disp(3), NULL(0), 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0   BANK1
  1683 ;;      Params:         2       0       0
  1684 ;;      Locals:         1       0       0
  1685 ;;      Temps:          0       0       0
  1686 ;;      Totals:         3       0       0
  1687 ;;Total ram usage:        3 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    3
  1690 ;; This function calls:
  1691 ;;		_seg_disp_47_set_val
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           
  1698                           ;psect for function _update_seg_disp_47
  1699  0000'                    _update_seg_disp_47:	
  1700                           
  1701                           ;incstack = 0
  1702                           ; Regs used in _update_seg_disp_47: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1703                           ;update_seg_disp_47@s_t stored from wreg
  1704  0000' 0087'              	movwf	update_seg_disp_47@s_t
  1705                           
  1706                           ;segmentdisplay47.c: 142:     seg_disp_47_set_val (s_t, cur_val);
  1707  0001' 0806'              	movf	update_seg_disp_47@cur_val+1,w
  1708  0002' 0081'              	movwf	seg_disp_47_set_val@value+1
  1709  0003' 0805'              	movf	update_seg_disp_47@cur_val,w
  1710  0004' 0080'              	movwf	seg_disp_47_set_val@value
  1711  0005' 0807'              	movf	update_seg_disp_47@s_t,w
  1712  0006' 2000'              	fcall	_seg_disp_47_set_val
  1713  0007' 0008               	return
  1714  0008'                    __end_of_update_seg_disp_47:	
  1715                           
  1716                           	psect	text4
  1717  0000'                    __ptext4:	
  1718 ;; *************** function _seg_disp_47_set_val *****************
  1719 ;; Defined at:
  1720 ;;		line 152 in file "segmentdisplay47.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  s_t             1    wreg     PTR struct .
  1723 ;;		 -> v_disp(3), NULL(0), 
  1724 ;;  value           2    0[COMMON] unsigned short 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  s_t             1    4[COMMON] PTR struct .
  1727 ;;		 -> v_disp(3), NULL(0), 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1
  1737 ;;      Params:         2       0       0
  1738 ;;      Locals:         1       0       0
  1739 ;;      Temps:          2       0       0
  1740 ;;      Totals:         5       0       0
  1741 ;;Total ram usage:        5 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    2
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_update_seg_disp_47
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           
  1752                           ;psect for function _seg_disp_47_set_val
  1753  0000'                    _seg_disp_47_set_val:	
  1754                           
  1755                           ;incstack = 0
  1756                           ; Regs used in _seg_disp_47_set_val: [wreg+fsr1l+fsr1h+status,2+status,0]
  1757                           ;seg_disp_47_set_val@s_t stored from wreg
  1758  0000' 0084'              	movwf	seg_disp_47_set_val@s_t
  1759                           
  1760                           ;segmentdisplay47.c: 153:     s_t->value_lo = value;
  1761  0001' 0800'              	movf	seg_disp_47_set_val@value,w
  1762  0002' 0082'              	movwf	??_seg_disp_47_set_val
  1763  0003' 0A04'              	incf	seg_disp_47_set_val@s_t,w
  1764  0004' 0086               	movwf	6
  1765  0005' 0187               	clrf	7
  1766  0006' 0802'              	movf	??_seg_disp_47_set_val,w
  1767  0007' 0081               	movwf	1
  1768                           
  1769                           ;segmentdisplay47.c: 154:     s_t->value_hi = value >> 8;
  1770  0008' 0801'              	movf	seg_disp_47_set_val@value+1,w
  1771  0009' 0083'              	movwf	??_seg_disp_47_set_val+1
  1772  000A' 0800'              	movf	seg_disp_47_set_val@value,w
  1773  000B' 0082'              	movwf	??_seg_disp_47_set_val
  1774  000C' 0803'              	movf	??_seg_disp_47_set_val+1,w
  1775  000D' 0082'              	movwf	??_seg_disp_47_set_val
  1776  000E' 0183'              	clrf	??_seg_disp_47_set_val+1
  1777  000F' 0804'              	movf	seg_disp_47_set_val@s_t,w
  1778  0010' 3E02               	addlw	2
  1779  0011' 0086               	movwf	6
  1780  0012' 0187               	clrf	7
  1781  0013' 0801               	movf	1,w
  1782  0014' 0602'              	xorwf	??_seg_disp_47_set_val,w
  1783  0015' 39C0               	andlw	-64
  1784  0016' 0602'              	xorwf	??_seg_disp_47_set_val,w
  1785  0017' 0081               	movwf	1
  1786  0018' 0008               	return
  1787  0019'                    __end_of_seg_disp_47_set_val:	
  1788                           
  1789                           	psect	text5
  1790  0000'                    __ptext5:	
  1791 ;; *************** function _update_int_flags *****************
  1792 ;; Defined at:
  1793 ;;		line 77 in file "bust_1512.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMMON   BANK0   BANK1
  1807 ;;      Params:         0       0       0
  1808 ;;      Locals:         0       0       0
  1809 ;;      Temps:          0       0       0
  1810 ;;      Totals:         0       0       0
  1811 ;;Total ram usage:        0 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    4
  1814 ;; This function calls:
  1815 ;;		_seg_disp_47_off
  1816 ;;		_seg_disp_47_on
  1817 ;;		_vis_next_digit
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           
  1824                           ;psect for function _update_int_flags
  1825  0000'                    _update_int_flags:	
  1826                           
  1827                           ;bust_1512.c: 80:     if (INT_FLAGS.seg_disp_sleep){
  1828                           
  1829                           ;incstack = 0
  1830                           ; Regs used in _update_int_flags: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1831  0000' 0020               	movlb	0	; select bank0
  1832  0001' 1C06'              	btfss	_INT_FLAGS,0	;volatile
  1833  0002' 2807'              	goto	l1934
  1834                           
  1835                           ;bust_1512.c: 81:         seg_disp_47_off (p_disp);
  1836  0003' 0800'              	movf	_p_disp,w
  1837  0004' 2000'              	fcall	_seg_disp_47_off
  1838                           
  1839                           ;bust_1512.c: 82:         INT_FLAGS.seg_disp_sleep = 0;
  1840  0005' 0020               	movlb	0	; select bank0
  1841  0006' 1006'              	bcf	_INT_FLAGS,0	;volatile
  1842  0007'                    l1934:	
  1843                           
  1844                           ;bust_1512.c: 85:     if (INT_FLAGS.seg_disp_awake && v_disp.status == 0){
  1845  0007' 1886'              	btfsc	_INT_FLAGS,1	;volatile
  1846  0008' 1B0D'              	btfsc	_v_disp+2,6
  1847  0009' 280E'              	goto	l1942
  1848                           
  1849                           ;bust_1512.c: 86:         seg_disp_47_on (p_disp);
  1850  000A' 0800'              	movf	_p_disp,w
  1851  000B' 2000'              	fcall	_seg_disp_47_on
  1852                           
  1853                           ;bust_1512.c: 87:         INT_FLAGS.seg_disp_awake = 0;
  1854  000C' 0020               	movlb	0	; select bank0
  1855  000D' 1086'              	bcf	_INT_FLAGS,1	;volatile
  1856  000E'                    l1942:	
  1857                           
  1858                           ;bust_1512.c: 90:     if (INT_FLAGS.seg_disp_vis){
  1859  000E' 1D06'              	btfss	_INT_FLAGS,2	;volatile
  1860  000F' 2814'              	goto	l1948
  1861                           
  1862                           ;bust_1512.c: 91:         vis_next_digit (p_disp);
  1863  0010' 0800'              	movf	_p_disp,w
  1864  0011' 2000'              	fcall	_vis_next_digit
  1865                           
  1866                           ;bust_1512.c: 92:         INT_FLAGS.seg_disp_vis = 0;
  1867  0012' 0020               	movlb	0	; select bank0
  1868  0013' 1106'              	bcf	_INT_FLAGS,2	;volatile
  1869  0014'                    l1948:	
  1870                           
  1871                           ;bust_1512.c: 95:     if (INT_FLAGS.seg_disp_save && v_disp.status == 1){
  1872  0014' 1D86'              	btfss	_INT_FLAGS,3	;volatile
  1873  0015' 0008               	return
  1874  0016' 1F0D'              	btfss	_v_disp+2,6
  1875  0017' 0008               	return
  1876                           
  1877                           ;bust_1512.c: 96:         INT_FLAGS.seg_disp_save = 0;
  1878  0018' 1186'              	bcf	_INT_FLAGS,3	;volatile
  1879  0019' 0008               	return
  1880  001A'                    __end_of_update_int_flags:	
  1881                           
  1882                           	psect	text6
  1883  0000'                    __ptext6:	
  1884 ;; *************** function _vis_next_digit *****************
  1885 ;; Defined at:
  1886 ;;		line 73 in file "segmentdisplay47.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  s_t             1    wreg     PTR struct .
  1889 ;;		 -> v_disp(3), NULL(0), 
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;  s_t             1   10[BANK0 ] PTR struct .
  1892 ;;		 -> v_disp(3), NULL(0), 
  1893 ;;  p               1    7[BANK0 ] unsigned char 
  1894 ;;  digit_divide    2    8[BANK0 ] unsigned short 
  1895 ;;  val             2    3[BANK0 ] unsigned short 
  1896 ;;  sLATB           1    6[BANK0 ] unsigned char 
  1897 ;;  digit_val       1    5[BANK0 ] unsigned char 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1
  1907 ;;      Params:         0       0       0
  1908 ;;      Locals:         0       8       0
  1909 ;;      Temps:          0       3       0
  1910 ;;      Totals:         0      11       0
  1911 ;;Total ram usage:       11 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    3
  1914 ;; This function calls:
  1915 ;;		___lwdiv
  1916 ;;		___lwmod
  1917 ;;		___wmul
  1918 ;;		_seg_disp_47_get_val
  1919 ;; This function is called by:
  1920 ;;		_update_int_flags
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _vis_next_digit
  1926  0000'                    _vis_next_digit:	
  1927                           
  1928                           ;incstack = 0
  1929                           ; Regs used in _vis_next_digit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1930                           ;vis_next_digit@s_t stored from wreg
  1931  0000' 0020               	movlb	0	; select bank0
  1932  0001' 008A'              	movwf	vis_next_digit@s_t
  1933                           
  1934                           ;segmentdisplay47.c: 75:     if (!s_t->status){
  1935  0002' 080A'              	movf	vis_next_digit@s_t,w
  1936  0003' 3E02               	addlw	2
  1937  0004' 0086               	movwf	6
  1938  0005' 0187               	clrf	7
  1939  0006' 1F01               	btfss	1,6
  1940  0007' 0008               	return
  1941                           
  1942                           ;segmentdisplay47.c: 79:     uint16_t val = seg_disp_47_get_val(s_t);
  1943  0008' 080A'              	movf	vis_next_digit@s_t,w
  1944  0009' 2000'              	fcall	_seg_disp_47_get_val
  1945  000A' 0801'              	movf	?_seg_disp_47_get_val+1,w
  1946  000B' 0020               	movlb	0	; select bank0
  1947  000C' 0084'              	movwf	vis_next_digit@val+1
  1948  000D' 0800'              	movf	?_seg_disp_47_get_val,w
  1949  000E' 0083'              	movwf	vis_next_digit@val
  1950                           
  1951                           ;segmentdisplay47.c: 80:     uint16_t digit_divider = 1;
  1952  000F' 3001               	movlw	1
  1953  0010' 0088'              	movwf	vis_next_digit@digit_divider
  1954  0011' 3000               	movlw	0
  1955  0012' 0089'              	movwf	vis_next_digit@digit_divider+1
  1956                           
  1957                           ;segmentdisplay47.c: 81:     for (uint8_t p = 0; p < s_t->digit; p++) {
  1958  0013' 0187'              	clrf	vis_next_digit@p
  1959  0014'                    l1756:	
  1960  0014' 080A'              	movf	vis_next_digit@s_t,w
  1961  0015' 0086               	movwf	6
  1962  0016' 0187               	clrf	7
  1963  0017' 0801               	movf	1,w
  1964  0018' 3903               	andlw	3
  1965  0019' 0207'              	subwf	vis_next_digit@p,w
  1966  001A' 1803               	btfsc	3,0
  1967  001B' 282F'              	goto	l1758
  1968                           
  1969                           ;segmentdisplay47.c: 82:         digit_divider *= 10;
  1970  001C' 300A               	movlw	10
  1971  001D' 0080'              	movwf	___wmul@multiplier
  1972  001E' 3000               	movlw	0
  1973  001F' 0081'              	movwf	___wmul@multiplier+1
  1974  0020' 0809'              	movf	vis_next_digit@digit_divider+1,w
  1975  0021' 0083'              	movwf	___wmul@multiplicand+1
  1976  0022' 0808'              	movf	vis_next_digit@digit_divider,w
  1977  0023' 0082'              	movwf	___wmul@multiplicand
  1978  0024' 2000'              	fcall	___wmul
  1979  0025' 0801'              	movf	?___wmul+1,w
  1980  0026' 0020               	movlb	0	; select bank0
  1981  0027' 0089'              	movwf	vis_next_digit@digit_divider+1
  1982  0028' 0800'              	movf	?___wmul,w
  1983  0029' 0088'              	movwf	vis_next_digit@digit_divider
  1984                           
  1985                           ;segmentdisplay47.c: 83:     }
  1986  002A' 3001               	movlw	1
  1987  002B' 0080'              	movwf	??_vis_next_digit
  1988  002C' 0800'              	movf	??_vis_next_digit,w
  1989  002D' 0787'              	addwf	vis_next_digit@p,f
  1990  002E' 2814'              	goto	l1756
  1991  002F'                    l1758:	
  1992                           
  1993                           ;segmentdisplay47.c: 85:     uint8_t digit_val = ( val / digit_divider ) % 10;
  1994  002F' 300A               	movlw	10
  1995  0030' 0088'              	movwf	___lwmod@divisor
  1996  0031' 3000               	movlw	0
  1997  0032' 0089'              	movwf	___lwmod@divisor+1
  1998  0033' 0809'              	movf	vis_next_digit@digit_divider+1,w
  1999  0034' 0081'              	movwf	___lwdiv@divisor+1
  2000  0035' 0808'              	movf	vis_next_digit@digit_divider,w
  2001  0036' 0080'              	movwf	___lwdiv@divisor
  2002  0037' 0804'              	movf	vis_next_digit@val+1,w
  2003  0038' 0083'              	movwf	___lwdiv@dividend+1
  2004  0039' 0803'              	movf	vis_next_digit@val,w
  2005  003A' 0082'              	movwf	___lwdiv@dividend
  2006  003B' 2000'              	fcall	___lwdiv
  2007  003C' 0801'              	movf	?___lwdiv+1,w
  2008  003D' 008B'              	movwf	___lwmod@dividend+1
  2009  003E' 0800'              	movf	?___lwdiv,w
  2010  003F' 008A'              	movwf	___lwmod@dividend
  2011  0040' 2000'              	fcall	___lwmod
  2012  0041' 0808'              	movf	?___lwmod,w
  2013  0042' 0020               	movlb	0	; select bank0
  2014  0043' 0080'              	movwf	??_vis_next_digit
  2015  0044' 0800'              	movf	??_vis_next_digit,w
  2016  0045' 0085'              	movwf	vis_next_digit@digit_val
  2017                           
  2018                           ;segmentdisplay47.c: 89:     uint8_t sLATB = (0xF0 & LATB);
  2019  0046' 0022               	movlb	2	; select bank2
  2020  0047' 080D               	movf	13,w	;volatile
  2021  0048' 39F0               	andlw	240
  2022  0049' 0020               	movlb	0	; select bank0
  2023  004A' 0080'              	movwf	??_vis_next_digit
  2024  004B' 0800'              	movf	??_vis_next_digit,w
  2025  004C' 0086'              	movwf	vis_next_digit@sLATB
  2026                           
  2027                           ;segmentdisplay47.c: 91:     LATB = sLATB| (0x08 >> (s_t->digit));
  2028  004D' 080A'              	movf	vis_next_digit@s_t,w
  2029  004E' 0086               	movwf	6
  2030  004F' 0187               	clrf	7
  2031  0050' 0801               	movf	1,w
  2032  0051' 3903               	andlw	3
  2033  0052' 0080'              	movwf	??_vis_next_digit
  2034  0053' 0A80'              	incf	??_vis_next_digit,f
  2035  0054' 3008               	movlw	8
  2036  0055' 0081'              	movwf	??_vis_next_digit+1
  2037  0056' 3000               	movlw	0
  2038  0057' 0082'              	movwf	??_vis_next_digit+2
  2039  0058' 285C'              	goto	u1664
  2040  0059'                    u1665:	
  2041  0059' 0D02'              	rlf	??_vis_next_digit+2,w
  2042  005A' 0C82'              	rrf	??_vis_next_digit+2,f
  2043  005B' 0C81'              	rrf	??_vis_next_digit+1,f
  2044  005C'                    u1664:	
  2045  005C' 0B80'              	decfsz	??_vis_next_digit,f
  2046  005D' 2859'              	goto	u1665
  2047  005E' 0020               	movlb	0	; select bank0
  2048  005F' 0801'              	movf	??_vis_next_digit+1,w
  2049  0060' 0406'              	iorwf	vis_next_digit@sLATB,w
  2050  0061' 0022               	movlb	2	; select bank2
  2051  0062' 008D               	movwf	13	;volatile
  2052                           
  2053                           ;segmentdisplay47.c: 94:     switch (digit_val)
  2054  0063' 287C'              	goto	l1788
  2055  0064'                    l1764:	
  2056                           
  2057                           ;segmentdisplay47.c: 97:             LATA = 0xC0;
  2058  0064' 30C0               	movlw	192
  2059  0065' 2879'              	goto	L10
  2060  0066'                    l1766:	
  2061                           ;segmentdisplay47.c: 98:             break;
  2062                           
  2063                           
  2064                           ;segmentdisplay47.c: 100:             LATA = 0xF9;
  2065  0066' 30F9               	movlw	249
  2066  0067' 2879'              	goto	L10
  2067  0068'                    l1768:	
  2068                           ;segmentdisplay47.c: 101:             break;
  2069                           
  2070                           
  2071                           ;segmentdisplay47.c: 103:             LATA = 0xA4;
  2072  0068' 30A4               	movlw	164
  2073  0069' 2879'              	goto	L10
  2074  006A'                    l1770:	
  2075                           ;segmentdisplay47.c: 104:             break;
  2076                           
  2077                           
  2078                           ;segmentdisplay47.c: 106:             LATA = 0xB0;
  2079  006A' 30B0               	movlw	176
  2080  006B' 2879'              	goto	L10
  2081  006C'                    l1772:	
  2082                           ;segmentdisplay47.c: 107:             break;
  2083                           
  2084                           
  2085                           ;segmentdisplay47.c: 109:             LATA = 0x99;
  2086  006C' 3099               	movlw	153
  2087  006D' 2879'              	goto	L10
  2088  006E'                    l1774:	
  2089                           ;segmentdisplay47.c: 110:             break;
  2090                           
  2091                           
  2092                           ;segmentdisplay47.c: 112:             LATA = 0x92;
  2093  006E' 3092               	movlw	146
  2094  006F' 2879'              	goto	L10
  2095  0070'                    l1776:	
  2096                           ;segmentdisplay47.c: 113:             break;
  2097                           
  2098                           
  2099                           ;segmentdisplay47.c: 115:             LATA = 0x82;
  2100  0070' 3082               	movlw	130
  2101  0071' 2879'              	goto	L10
  2102  0072'                    l1778:	
  2103                           ;segmentdisplay47.c: 116:             break;
  2104                           
  2105                           
  2106                           ;segmentdisplay47.c: 118:             LATA = 0xF8;
  2107  0072' 30F8               	movlw	248
  2108  0073' 2879'              	goto	L10
  2109  0074'                    l1780:	
  2110                           ;segmentdisplay47.c: 119:             break;
  2111                           
  2112                           
  2113                           ;segmentdisplay47.c: 121:             LATA = 0x80;
  2114  0074' 3080               	movlw	128
  2115  0075' 2879'              	goto	L10
  2116  0076'                    l1782:	
  2117                           ;segmentdisplay47.c: 122:             break;
  2118                           
  2119                           
  2120                           ;segmentdisplay47.c: 124:             LATA = 0x90;
  2121  0076' 3090               	movlw	144
  2122  0077' 2879'              	goto	L10
  2123  0078'                    l1784:	
  2124                           ;segmentdisplay47.c: 125:             break;
  2125                           
  2126                           
  2127                           ;segmentdisplay47.c: 128:             LATA = 0xEF;
  2128  0078' 30EF               	movlw	239
  2129  0079'                    L10:	
  2130  0079' 0022               	movlb	2	; select bank2
  2131  007A' 008C               	movwf	12	;volatile
  2132                           
  2133                           ;segmentdisplay47.c: 129:             break;
  2134  007B' 28A5'              	goto	l1790
  2135  007C'                    l1788:	
  2136  007C' 0020               	movlb	0	; select bank0
  2137  007D' 0805'              	movf	vis_next_digit@digit_val,w
  2138  007E' 0080'              	movwf	??_vis_next_digit
  2139  007F' 0181'              	clrf	??_vis_next_digit+1
  2140                           
  2141                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2142                           ; Switch size 1, requested type "simple"
  2143                           ; Number of cases is 1, Range of values is 0 to 0
  2144                           ; switch strategies available:
  2145                           ; Name         Instructions Cycles
  2146                           ; simple_byte            4     3 (average)
  2147                           ; direct_byte            8     6 (fixed)
  2148                           ; jumptable            260     6 (fixed)
  2149                           ;	Chosen strategy is simple_byte
  2150  0080' 0801'              	movf	??_vis_next_digit+1,w
  2151  0081' 3A00               	xorlw	0	; case 0
  2152  0082' 1903               	skipnz
  2153  0083' 2885'              	goto	l2052
  2154  0084' 2878'              	goto	l1784
  2155  0085'                    l2052:	
  2156                           
  2157                           ; Switch size 1, requested type "simple"
  2158                           ; Number of cases is 10, Range of values is 0 to 9
  2159                           ; switch strategies available:
  2160                           ; Name         Instructions Cycles
  2161                           ; direct_byte           26     6 (fixed)
  2162                           ; simple_byte           31    16 (average)
  2163                           ; jumptable            260     6 (fixed)
  2164                           ;	Chosen strategy is simple_byte
  2165  0085' 0800'              	movf	??_vis_next_digit,w
  2166  0086' 3A00               	xorlw	0	; case 0
  2167  0087' 1903               	skipnz
  2168  0088' 2864'              	goto	l1764
  2169  0089' 3A01               	xorlw	1	; case 1
  2170  008A' 1903               	skipnz
  2171  008B' 2866'              	goto	l1766
  2172  008C' 3A03               	xorlw	3	; case 2
  2173  008D' 1903               	skipnz
  2174  008E' 2868'              	goto	l1768
  2175  008F' 3A01               	xorlw	1	; case 3
  2176  0090' 1903               	skipnz
  2177  0091' 286A'              	goto	l1770
  2178  0092' 3A07               	xorlw	7	; case 4
  2179  0093' 1903               	skipnz
  2180  0094' 286C'              	goto	l1772
  2181  0095' 3A01               	xorlw	1	; case 5
  2182  0096' 1903               	skipnz
  2183  0097' 286E'              	goto	l1774
  2184  0098' 3A03               	xorlw	3	; case 6
  2185  0099' 1903               	skipnz
  2186  009A' 2870'              	goto	l1776
  2187  009B' 3A01               	xorlw	1	; case 7
  2188  009C' 1903               	skipnz
  2189  009D' 2872'              	goto	l1778
  2190  009E' 3A0F               	xorlw	15	; case 8
  2191  009F' 1903               	skipnz
  2192  00A0' 2874'              	goto	l1780
  2193  00A1' 3A01               	xorlw	1	; case 9
  2194  00A2' 1903               	skipnz
  2195  00A3' 2876'              	goto	l1782
  2196  00A4' 2878'              	goto	l1784
  2197  00A5'                    l1790:	
  2198                           
  2199                           ;segmentdisplay47.c: 132:     s_t->digit++;
  2200  00A5' 0020               	movlb	0	; select bank0
  2201  00A6' 080A'              	movf	vis_next_digit@s_t,w
  2202  00A7' 0086               	movwf	6
  2203  00A8' 0187               	clrf	7
  2204  00A9' 0801               	movf	1,w
  2205  00AA' 3903               	andlw	3
  2206  00AB' 0080'              	movwf	??_vis_next_digit
  2207  00AC' 0A80'              	incf	??_vis_next_digit,f
  2208  00AD' 0801               	movf	1,w
  2209  00AE' 0600'              	xorwf	??_vis_next_digit,w
  2210  00AF' 39FC               	andlw	-4
  2211  00B0' 0600'              	xorwf	??_vis_next_digit,w
  2212  00B1' 0081               	movwf	1
  2213  00B2' 0008               	return
  2214  00B3'                    __end_of_vis_next_digit:	
  2215                           
  2216                           	psect	text7
  2217  0000'                    __ptext7:	
  2218 ;; *************** function _seg_disp_47_get_val *****************
  2219 ;; Defined at:
  2220 ;;		line 146 in file "segmentdisplay47.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  s_t             1    wreg     PTR struct .
  2223 ;;		 -> v_disp(3), NULL(0), 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  s_t             1    7[COMMON] PTR struct .
  2226 ;;		 -> v_disp(3), NULL(0), 
  2227 ;;  val             2    5[COMMON] unsigned short 
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  2    0[COMMON] unsigned short 
  2230 ;; Registers used:
  2231 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1
  2237 ;;      Params:         2       0       0
  2238 ;;      Locals:         3       0       0
  2239 ;;      Temps:          3       0       0
  2240 ;;      Totals:         8       0       0
  2241 ;;Total ram usage:        8 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    2
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_vis_next_digit
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           
  2252                           ;psect for function _seg_disp_47_get_val
  2253  0000'                    _seg_disp_47_get_val:	
  2254                           
  2255                           ;incstack = 0
  2256                           ; Regs used in _seg_disp_47_get_val: [wreg+fsr1l+fsr1h+status,2+status,0]
  2257                           ;seg_disp_47_get_val@s_t stored from wreg
  2258  0000' 0087'              	movwf	seg_disp_47_get_val@s_t
  2259                           
  2260                           ;segmentdisplay47.c: 147:     uint16_t val = 0;
  2261  0001' 0185'              	clrf	seg_disp_47_get_val@val
  2262  0002' 0186'              	clrf	seg_disp_47_get_val@val+1
  2263                           
  2264                           ;segmentdisplay47.c: 148:     val |= s_t->value_lo;
  2265  0003' 0A07'              	incf	seg_disp_47_get_val@s_t,w
  2266  0004' 0086               	movwf	6
  2267  0005' 0187               	clrf	7
  2268  0006' 0801               	movf	1,w
  2269  0007' 0082'              	movwf	??_seg_disp_47_get_val
  2270  0008' 0183'              	clrf	??_seg_disp_47_get_val+1
  2271  0009' 0802'              	movf	??_seg_disp_47_get_val,w
  2272  000A' 0485'              	iorwf	seg_disp_47_get_val@val,f
  2273  000B' 0803'              	movf	??_seg_disp_47_get_val+1,w
  2274  000C' 0486'              	iorwf	seg_disp_47_get_val@val+1,f
  2275                           
  2276                           ;segmentdisplay47.c: 149:     val |= s_t->value_hi << 8;
  2277  000D' 0807'              	movf	seg_disp_47_get_val@s_t,w
  2278  000E' 3E02               	addlw	2
  2279  000F' 0086               	movwf	6
  2280  0010' 0187               	clrf	7
  2281  0011' 0801               	movf	1,w
  2282  0012' 393F               	andlw	63
  2283  0013' 0082'              	movwf	??_seg_disp_47_get_val
  2284  0014' 0183'              	clrf	??_seg_disp_47_get_val+1
  2285  0015' 0802'              	movf	??_seg_disp_47_get_val,w
  2286  0016' 0083'              	movwf	??_seg_disp_47_get_val+1
  2287  0017' 0182'              	clrf	??_seg_disp_47_get_val
  2288  0018' 0802'              	movf	??_seg_disp_47_get_val,w
  2289  0019' 0485'              	iorwf	seg_disp_47_get_val@val,f
  2290  001A' 0803'              	movf	??_seg_disp_47_get_val+1,w
  2291  001B' 0486'              	iorwf	seg_disp_47_get_val@val+1,f
  2292                           
  2293                           ;segmentdisplay47.c: 150:     return val;
  2294  001C' 0806'              	movf	seg_disp_47_get_val@val+1,w
  2295  001D' 0081'              	movwf	?_seg_disp_47_get_val+1
  2296  001E' 0805'              	movf	seg_disp_47_get_val@val,w
  2297  001F' 0080'              	movwf	?_seg_disp_47_get_val
  2298  0020' 0008               	return
  2299  0021'                    __end_of_seg_disp_47_get_val:	
  2300                           
  2301                           	psect	text8
  2302  0000'                    __ptext8:	
  2303 ;; *************** function ___wmul *****************
  2304 ;; Defined at:
  2305 ;;		line 15 in file "D:\Programs\Compilers\8 bit\pic\sources\c99\common\Umul16.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  multiplier      2    0[COMMON] unsigned int 
  2308 ;;  multiplicand    2    2[COMMON] unsigned int 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  product         2    4[COMMON] unsigned int 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  2    0[COMMON] unsigned int 
  2313 ;; Registers used:
  2314 ;;		wreg, status,2, status,0
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1
  2320 ;;      Params:         4       0       0
  2321 ;;      Locals:         2       0       0
  2322 ;;      Temps:          0       0       0
  2323 ;;      Totals:         6       0       0
  2324 ;;Total ram usage:        6 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    2
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_vis_next_digit
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           
  2335                           ;psect for function ___wmul
  2336  0000'                    ___wmul:	
  2337                           
  2338                           ;incstack = 0
  2339                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2340  0000' 0184'              	clrf	___wmul@product
  2341  0001' 0185'              	clrf	___wmul@product+1
  2342  0002'                    l1648:	
  2343  0002' 1C00'              	btfss	___wmul@multiplier,0
  2344  0003' 2808'              	goto	l590
  2345  0004' 0802'              	movf	___wmul@multiplicand,w
  2346  0005' 0784'              	addwf	___wmul@product,f
  2347  0006' 0803'              	movf	___wmul@multiplicand+1,w
  2348  0007' 3D85'              	addwfc	___wmul@product+1,f
  2349  0008'                    l590:	
  2350  0008' 3001               	movlw	1
  2351  0009'                    u1435:	
  2352  0009' 3582'              	lslf	___wmul@multiplicand,f
  2353  000A' 0D83'              	rlf	___wmul@multiplicand+1,f
  2354  000B' 0B89               	decfsz	9,f
  2355  000C' 2809'              	goto	u1435
  2356  000D' 3001               	movlw	1
  2357  000E'                    u1445:	
  2358  000E' 3681'              	lsrf	___wmul@multiplier+1,f
  2359  000F' 0C80'              	rrf	___wmul@multiplier,f
  2360  0010' 0B89               	decfsz	9,f
  2361  0011' 280E'              	goto	u1445
  2362  0012' 0800'              	movf	___wmul@multiplier,w
  2363  0013' 0401'              	iorwf	___wmul@multiplier+1,w
  2364  0014' 1D03               	btfss	3,2
  2365  0015' 2802'              	goto	l1648
  2366  0016' 0805'              	movf	___wmul@product+1,w
  2367  0017' 0081'              	movwf	?___wmul+1
  2368  0018' 0804'              	movf	___wmul@product,w
  2369  0019' 0080'              	movwf	?___wmul
  2370  001A' 0008               	return
  2371  001B'                    __end_of___wmul:	
  2372                           
  2373                           	psect	text9
  2374  0000'                    __ptext9:	
  2375 ;; *************** function ___lwmod *****************
  2376 ;; Defined at:
  2377 ;;		line 5 in file "D:\Programs\Compilers\8 bit\pic\sources\c99\common\lwmod.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  divisor         2    8[COMMON] unsigned int 
  2380 ;;  dividend        2   10[COMMON] unsigned int 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  counter         1   13[COMMON] unsigned char 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  2    8[COMMON] unsigned int 
  2385 ;; Registers used:
  2386 ;;		wreg, status,2, status,0
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1
  2392 ;;      Params:         4       0       0
  2393 ;;      Locals:         1       0       0
  2394 ;;      Temps:          1       0       0
  2395 ;;      Totals:         6       0       0
  2396 ;;Total ram usage:        6 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    2
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		_vis_next_digit
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function ___lwmod
  2408  0000'                    ___lwmod:	
  2409                           
  2410                           ;incstack = 0
  2411                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2412  0000' 0808'              	movf	___lwmod@divisor,w
  2413  0001' 0409'              	iorwf	___lwmod@divisor+1,w
  2414  0002' 1903               	btfsc	3,2
  2415  0003' 2827'              	goto	l1704
  2416  0004' 018D'              	clrf	___lwmod@counter
  2417  0005' 0A8D'              	incf	___lwmod@counter,f
  2418  0006'                    l1694:	
  2419  0006' 1B89'              	btfsc	___lwmod@divisor+1,7
  2420  0007' 2812'              	goto	l1696
  2421  0008' 3001               	movlw	1
  2422  0009'                    u1545:	
  2423  0009' 3588'              	lslf	___lwmod@divisor,f
  2424  000A' 0D89'              	rlf	___lwmod@divisor+1,f
  2425  000B' 0B89               	decfsz	9,f
  2426  000C' 2809'              	goto	u1545
  2427  000D' 3001               	movlw	1
  2428  000E' 008C'              	movwf	??___lwmod
  2429  000F' 080C'              	movf	??___lwmod,w
  2430  0010' 078D'              	addwf	___lwmod@counter,f
  2431  0011' 2806'              	goto	l1694
  2432  0012'                    l1696:	
  2433  0012' 0809'              	movf	___lwmod@divisor+1,w
  2434  0013' 020B'              	subwf	___lwmod@dividend+1,w
  2435  0014' 1D03               	skipz
  2436  0015' 2818'              	goto	u1565
  2437  0016' 0808'              	movf	___lwmod@divisor,w
  2438  0017' 020A'              	subwf	___lwmod@dividend,w
  2439  0018'                    u1565:	
  2440  0018' 1C03               	skipc
  2441  0019' 281E'              	goto	l1700
  2442  001A' 0808'              	movf	___lwmod@divisor,w
  2443  001B' 028A'              	subwf	___lwmod@dividend,f
  2444  001C' 0809'              	movf	___lwmod@divisor+1,w
  2445  001D' 3B8B'              	subwfb	___lwmod@dividend+1,f
  2446  001E'                    l1700:	
  2447  001E' 3001               	movlw	1
  2448  001F'                    u1575:	
  2449  001F' 3689'              	lsrf	___lwmod@divisor+1,f
  2450  0020' 0C88'              	rrf	___lwmod@divisor,f
  2451  0021' 0B89               	decfsz	9,f
  2452  0022' 281F'              	goto	u1575
  2453  0023' 3001               	movlw	1
  2454  0024' 028D'              	subwf	___lwmod@counter,f
  2455  0025' 1D03               	btfss	3,2
  2456  0026' 2812'              	goto	l1696
  2457  0027'                    l1704:	
  2458  0027' 080B'              	movf	___lwmod@dividend+1,w
  2459  0028' 0089'              	movwf	?___lwmod+1
  2460  0029' 080A'              	movf	___lwmod@dividend,w
  2461  002A' 0088'              	movwf	?___lwmod
  2462  002B' 0008               	return
  2463  002C'                    __end_of___lwmod:	
  2464                           
  2465                           	psect	text10
  2466  0000'                    __ptext10:	
  2467 ;; *************** function ___lwdiv *****************
  2468 ;; Defined at:
  2469 ;;		line 5 in file "D:\Programs\Compilers\8 bit\pic\sources\c99\common\lwdiv.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  divisor         2    0[COMMON] unsigned int 
  2472 ;;  dividend        2    2[COMMON] unsigned int 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  quotient        2    5[COMMON] unsigned int 
  2475 ;;  counter         1    7[COMMON] unsigned char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  2    0[COMMON] unsigned int 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1
  2485 ;;      Params:         4       0       0
  2486 ;;      Locals:         3       0       0
  2487 ;;      Temps:          1       0       0
  2488 ;;      Totals:         8       0       0
  2489 ;;Total ram usage:        8 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    2
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_vis_next_digit
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           
  2500                           ;psect for function ___lwdiv
  2501  0000'                    ___lwdiv:	
  2502                           
  2503                           ;incstack = 0
  2504                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2505  0000' 0185'              	clrf	___lwdiv@quotient
  2506  0001' 0186'              	clrf	___lwdiv@quotient+1
  2507  0002' 0800'              	movf	___lwdiv@divisor,w
  2508  0003' 0401'              	iorwf	___lwdiv@divisor+1,w
  2509  0004' 1903               	btfsc	3,2
  2510  0005' 282F'              	goto	l1682
  2511  0006' 0187'              	clrf	___lwdiv@counter
  2512  0007' 0A87'              	incf	___lwdiv@counter,f
  2513  0008'                    l1670:	
  2514  0008' 1B81'              	btfsc	___lwdiv@divisor+1,7
  2515  0009' 2814'              	goto	l1672
  2516  000A' 3001               	movlw	1
  2517  000B'                    u1475:	
  2518  000B' 3580'              	lslf	___lwdiv@divisor,f
  2519  000C' 0D81'              	rlf	___lwdiv@divisor+1,f
  2520  000D' 0B89               	decfsz	9,f
  2521  000E' 280B'              	goto	u1475
  2522  000F' 3001               	movlw	1
  2523  0010' 0084'              	movwf	??___lwdiv
  2524  0011' 0804'              	movf	??___lwdiv,w
  2525  0012' 0787'              	addwf	___lwdiv@counter,f
  2526  0013' 2808'              	goto	l1670
  2527  0014'                    l1672:	
  2528  0014' 3001               	movlw	1
  2529  0015'                    u1495:	
  2530  0015' 3585'              	lslf	___lwdiv@quotient,f
  2531  0016' 0D86'              	rlf	___lwdiv@quotient+1,f
  2532  0017' 0B89               	decfsz	9,f
  2533  0018' 2815'              	goto	u1495
  2534  0019' 0801'              	movf	___lwdiv@divisor+1,w
  2535  001A' 0203'              	subwf	___lwdiv@dividend+1,w
  2536  001B' 1D03               	skipz
  2537  001C' 281F'              	goto	u1505
  2538  001D' 0800'              	movf	___lwdiv@divisor,w
  2539  001E' 0202'              	subwf	___lwdiv@dividend,w
  2540  001F'                    u1505:	
  2541  001F' 1C03               	skipc
  2542  0020' 2826'              	goto	l1678
  2543  0021' 0800'              	movf	___lwdiv@divisor,w
  2544  0022' 0282'              	subwf	___lwdiv@dividend,f
  2545  0023' 0801'              	movf	___lwdiv@divisor+1,w
  2546  0024' 3B83'              	subwfb	___lwdiv@dividend+1,f
  2547  0025' 1405'              	bsf	___lwdiv@quotient,0
  2548  0026'                    l1678:	
  2549  0026' 3001               	movlw	1
  2550  0027'                    u1515:	
  2551  0027' 3681'              	lsrf	___lwdiv@divisor+1,f
  2552  0028' 0C80'              	rrf	___lwdiv@divisor,f
  2553  0029' 0B89               	decfsz	9,f
  2554  002A' 2827'              	goto	u1515
  2555  002B' 3001               	movlw	1
  2556  002C' 0287'              	subwf	___lwdiv@counter,f
  2557  002D' 1D03               	btfss	3,2
  2558  002E' 2814'              	goto	l1672
  2559  002F'                    l1682:	
  2560  002F' 0806'              	movf	___lwdiv@quotient+1,w
  2561  0030' 0081'              	movwf	?___lwdiv+1
  2562  0031' 0805'              	movf	___lwdiv@quotient,w
  2563  0032' 0080'              	movwf	?___lwdiv
  2564  0033' 0008               	return
  2565  0034'                    __end_of___lwdiv:	
  2566                           
  2567                           	psect	text11
  2568  0000'                    __ptext11:	
  2569 ;; *************** function _seg_disp_47_on *****************
  2570 ;; Defined at:
  2571 ;;		line 159 in file "segmentdisplay47.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  s_t             1    wreg     PTR struct .
  2574 ;;		 -> v_disp(3), NULL(0), 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  s_t             1    0[COMMON] PTR struct .
  2577 ;;		 -> v_disp(3), NULL(0), 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      void 
  2580 ;; Registers used:
  2581 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMMON   BANK0   BANK1
  2587 ;;      Params:         0       0       0
  2588 ;;      Locals:         1       0       0
  2589 ;;      Temps:          0       0       0
  2590 ;;      Totals:         1       0       0
  2591 ;;Total ram usage:        1 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:    2
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_update_int_flags
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           
  2602                           ;psect for function _seg_disp_47_on
  2603  0000'                    _seg_disp_47_on:	
  2604                           
  2605                           ;incstack = 0
  2606                           ; Regs used in _seg_disp_47_on: [wreg+fsr1l+fsr1h+status,2+status,0]
  2607                           ;seg_disp_47_on@s_t stored from wreg
  2608  0000' 0080'              	movwf	seg_disp_47_on@s_t
  2609  0001' 0800'              	movf	seg_disp_47_on@s_t,w
  2610  0002' 3E02               	addlw	2
  2611  0003' 0086               	movwf	6
  2612  0004' 0187               	clrf	7
  2613  0005' 1701               	bsf	1,6
  2614  0006' 0008               	return
  2615  0007'                    __end_of_seg_disp_47_on:	
  2616                           
  2617                           	psect	text12
  2618  0000'                    __ptext12:	
  2619 ;; *************** function _seg_disp_47_off *****************
  2620 ;; Defined at:
  2621 ;;		line 160 in file "segmentdisplay47.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  s_t             1    wreg     PTR struct .
  2624 ;;		 -> v_disp(3), NULL(0), 
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;  s_t             1    0[COMMON] PTR struct .
  2627 ;;		 -> v_disp(3), NULL(0), 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1
  2637 ;;      Params:         0       0       0
  2638 ;;      Locals:         1       0       0
  2639 ;;      Temps:          0       0       0
  2640 ;;      Totals:         1       0       0
  2641 ;;Total ram usage:        1 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    2
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		_update_int_flags
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           
  2652                           ;psect for function _seg_disp_47_off
  2653  0000'                    _seg_disp_47_off:	
  2654                           
  2655                           ;incstack = 0
  2656                           ; Regs used in _seg_disp_47_off: [wreg+fsr1l+fsr1h+status,2+status,0]
  2657                           ;seg_disp_47_off@s_t stored from wreg
  2658  0000' 0080'              	movwf	seg_disp_47_off@s_t
  2659  0001' 0800'              	movf	seg_disp_47_off@s_t,w
  2660  0002' 3E02               	addlw	2
  2661  0003' 0086               	movwf	6
  2662  0004' 0187               	clrf	7
  2663  0005' 1301               	bcf	1,6
  2664  0006' 30FF               	movlw	255
  2665  0007' 0022               	movlb	2	; select bank2
  2666  0008' 008C               	movwf	12	;volatile
  2667  0009' 0008               	return
  2668  000A'                    __end_of_seg_disp_47_off:	
  2669                           
  2670                           	psect	text13
  2671  0000'                    __ptext13:	
  2672 ;; *************** function _init_structs *****************
  2673 ;; Defined at:
  2674 ;;		line 104 in file "bust_1512.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1
  2688 ;;      Params:         0       0       0
  2689 ;;      Locals:         0       0       0
  2690 ;;      Temps:          1       0       0
  2691 ;;      Totals:         1       0       0
  2692 ;;Total ram usage:        1 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    3
  2695 ;; This function calls:
  2696 ;;		_create_seg_disp_47
  2697 ;;		_create_switch
  2698 ;; This function is called by:
  2699 ;;		_main
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function _init_structs
  2705  0000'                    _init_structs:	
  2706                           
  2707                           ;bust_1512.c: 107:     p_btns[0] = &v_btns[0];
  2708                           
  2709                           ;incstack = 0
  2710                           ; Regs used in _init_structs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2711  0000' 3000'              	movlw	(low (_v_btns| 0))& (0+255)
  2712  0001' 0082'              	movwf	??_init_structs
  2713  0002' 0802'              	movf	??_init_structs,w
  2714  0003' 0020               	movlb	0	; select bank0
  2715  0004' 0085'              	movwf	_p_btns
  2716                           
  2717                           ;bust_1512.c: 110:     create_switch(p_btns[0]);
  2718  0005' 0805'              	movf	_p_btns,w
  2719  0006' 2000'              	fcall	_create_switch
  2720                           
  2721                           ;bust_1512.c: 114:     p_disp = &v_disp;
  2722  0007' 3000'              	movlw	(low (_v_disp| 0))& (0+255)
  2723  0008' 0082'              	movwf	??_init_structs
  2724  0009' 0802'              	movf	??_init_structs,w
  2725  000A' 0020               	movlb	0	; select bank0
  2726  000B' 0080'              	movwf	_p_disp
  2727                           
  2728                           ;bust_1512.c: 115:     create_seg_disp_47 (p_disp);
  2729  000C' 0800'              	movf	_p_disp,w
  2730  000D' 2000'              	fcall	_create_seg_disp_47
  2731  000E' 0008               	return
  2732  000F'                    __end_of_init_structs:	
  2733                           
  2734                           	psect	text14
  2735  0000'                    __ptext14:	
  2736 ;; *************** function _create_switch *****************
  2737 ;; Defined at:
  2738 ;;		line 9 in file "switches.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  s_t             1    wreg     PTR struct .
  2741 ;;		 -> v_btns(1), 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  s_t             1    1[COMMON] PTR struct .
  2744 ;;		 -> v_btns(1), 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1
  2754 ;;      Params:         0       0       0
  2755 ;;      Locals:         1       0       0
  2756 ;;      Temps:          1       0       0
  2757 ;;      Totals:         2       0       0
  2758 ;;Total ram usage:        2 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    2
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_init_structs
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           
  2769                           ;psect for function _create_switch
  2770  0000'                    _create_switch:	
  2771                           
  2772                           ;incstack = 0
  2773                           ; Regs used in _create_switch: [wreg+fsr1l+fsr1h+status,2+status,0]
  2774                           ;create_switch@s_t stored from wreg
  2775  0000' 0081'              	movwf	create_switch@s_t
  2776                           
  2777                           ;switches.c: 12:     s_t->state = 1;
  2778  0001' 0801'              	movf	create_switch@s_t,w
  2779  0002' 0086               	movwf	6
  2780  0003' 0187               	clrf	7
  2781  0004' 1481               	bsf	1,1
  2782                           
  2783                           ;switches.c: 13:     s_t->prev = s_t->state;
  2784  0005' 0801'              	movf	create_switch@s_t,w
  2785  0006' 0086               	movwf	6
  2786  0007' 0187               	clrf	7
  2787  0008' 0C01               	rrf	1,w
  2788  0009' 3901               	andlw	1
  2789  000A' 0080'              	movwf	??_create_switch
  2790  000B' 0801'              	movf	create_switch@s_t,w
  2791  000C' 0086               	movwf	6
  2792  000D' 0187               	clrf	7
  2793  000E' 0801               	movf	1,w
  2794  000F' 0600'              	xorwf	??_create_switch,w
  2795  0010' 39FE               	andlw	-2
  2796  0011' 0600'              	xorwf	??_create_switch,w
  2797  0012' 0081               	movwf	1
  2798                           
  2799                           ;switches.c: 15:     s_t->streak = 0;
  2800  0013' 0801'              	movf	create_switch@s_t,w
  2801  0014' 0086               	movwf	6
  2802  0015' 0187               	clrf	7
  2803  0016' 3083               	movlw	-125
  2804  0017' 0581               	andwf	1,f
  2805                           
  2806                           ;switches.c: 16:     s_t->status = 0;
  2807  0018' 0801'              	movf	create_switch@s_t,w
  2808  0019' 0086               	movwf	6
  2809  001A' 0187               	clrf	7
  2810  001B' 1381               	bcf	1,7
  2811  001C' 0008               	return
  2812  001D'                    __end_of_create_switch:	
  2813                           
  2814                           	psect	text15
  2815  0000'                    __ptext15:	
  2816 ;; *************** function _create_seg_disp_47 *****************
  2817 ;; Defined at:
  2818 ;;		line 135 in file "segmentdisplay47.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  s_t             1    wreg     PTR struct .
  2821 ;;		 -> v_disp(3), NULL(0), 
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;  s_t             1    0[COMMON] PTR struct .
  2824 ;;		 -> v_disp(3), NULL(0), 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1
  2834 ;;      Params:         0       0       0
  2835 ;;      Locals:         1       0       0
  2836 ;;      Temps:          0       0       0
  2837 ;;      Totals:         1       0       0
  2838 ;;Total ram usage:        1 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    2
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_init_structs
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           
  2849                           ;psect for function _create_seg_disp_47
  2850  0000'                    _create_seg_disp_47:	
  2851                           
  2852                           ;incstack = 0
  2853                           ; Regs used in _create_seg_disp_47: [wreg+fsr1l+fsr1h+status,2+status,0]
  2854                           ;create_seg_disp_47@s_t stored from wreg
  2855  0000' 0080'              	movwf	create_seg_disp_47@s_t
  2856                           
  2857                           ;segmentdisplay47.c: 136:     s_t->digit = 0;
  2858  0001' 0800'              	movf	create_seg_disp_47@s_t,w
  2859  0002' 0086               	movwf	6
  2860  0003' 0187               	clrf	7
  2861  0004' 30FC               	movlw	-4
  2862  0005' 0581               	andwf	1,f
  2863                           
  2864                           ;segmentdisplay47.c: 137:     s_t->value_lo = 0;
  2865  0006' 0A00'              	incf	create_seg_disp_47@s_t,w
  2866  0007' 0086               	movwf	6
  2867  0008' 0187               	clrf	7
  2868  0009' 0181               	clrf	1
  2869                           
  2870                           ;segmentdisplay47.c: 138:     s_t->value_hi = 0;
  2871  000A' 0800'              	movf	create_seg_disp_47@s_t,w
  2872  000B' 3E02               	addlw	2
  2873  000C' 0086               	movwf	6
  2874  000D' 0187               	clrf	7
  2875  000E' 30C0               	movlw	-64
  2876  000F' 0581               	andwf	1,f
  2877                           
  2878                           ;segmentdisplay47.c: 139:     s_t->status = 1;
  2879  0010' 0800'              	movf	create_seg_disp_47@s_t,w
  2880  0011' 3E02               	addlw	2
  2881  0012' 0086               	movwf	6
  2882  0013' 0187               	clrf	7
  2883  0014' 1701               	bsf	1,6
  2884  0015' 0008               	return
  2885  0016'                    __end_of_create_seg_disp_47:	
  2886                           
  2887                           	psect	text16
  2888  0000'                    __ptext16:	
  2889 ;; *************** function _init *****************
  2890 ;; Defined at:
  2891 ;;		line 5 in file "init.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;		None
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;		None
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		wreg, status,2, status,0, pclath, cstack
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMMON   BANK0   BANK1
  2905 ;;      Params:         0       0       0
  2906 ;;      Locals:         0       0       0
  2907 ;;      Temps:          0       0       0
  2908 ;;      Totals:         0       0       0
  2909 ;;Total ram usage:        0 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; Hardware stack levels required when called:    4
  2912 ;; This function calls:
  2913 ;;		_init_i2c
  2914 ;;		_init_interrupt
  2915 ;;		_init_oscillerator
  2916 ;;		_init_ports
  2917 ;; This function is called by:
  2918 ;;		_main
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           
  2923                           ;psect for function _init
  2924  0000'                    _init:	
  2925                           
  2926                           ;init.c: 6:     init_oscillerator();
  2927                           
  2928                           ;incstack = 0
  2929                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  2930  0000' 2000'              	fcall	_init_oscillerator
  2931                           
  2932                           ;init.c: 7:     init_ports();
  2933  0001' 2000'              	fcall	_init_ports
  2934                           
  2935                           ;init.c: 8:     init_i2c();
  2936  0002' 2000'              	fcall	_init_i2c
  2937                           
  2938                           ;init.c: 9:     init_interrupt();
  2939  0003' 2000'              	fcall	_init_interrupt
  2940  0004' 0008               	return
  2941  0005'                    __end_of_init:	
  2942                           
  2943                           	psect	text17
  2944  0000'                    __ptext17:	
  2945 ;; *************** function _init_ports *****************
  2946 ;; Defined at:
  2947 ;;		line 16 in file "init.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;		None
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		status,2, status,0, pclath, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMMON   BANK0   BANK1
  2961 ;;      Params:         0       0       0
  2962 ;;      Locals:         0       0       0
  2963 ;;      Temps:          0       0       0
  2964 ;;      Totals:         0       0       0
  2965 ;;Total ram usage:        0 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; Hardware stack levels required when called:    3
  2968 ;; This function calls:
  2969 ;;		_res_ports
  2970 ;;		_set_ports
  2971 ;; This function is called by:
  2972 ;;		_init
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           
  2977                           ;psect for function _init_ports
  2978  0000'                    _init_ports:	
  2979                           
  2980                           ;init.c: 17:     res_ports ();
  2981                           
  2982                           ;incstack = 0
  2983                           ; Regs used in _init_ports: [status,2+status,0+pclath+cstack]
  2984  0000' 2000'              	fcall	_res_ports
  2985                           
  2986                           ;init.c: 18:     set_ports ();
  2987  0001' 2000'              	fcall	_set_ports
  2988  0002' 0008               	return
  2989  0003'                    __end_of_init_ports:	
  2990                           
  2991                           	psect	text18
  2992  0000'                    __ptext18:	
  2993 ;; *************** function _set_ports *****************
  2994 ;; Defined at:
  2995 ;;		line 40 in file "init.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;		None
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;		None
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  1    wreg      void 
  3002 ;; Registers used:
  3003 ;;		None
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMMON   BANK0   BANK1
  3009 ;;      Params:         0       0       0
  3010 ;;      Locals:         0       0       0
  3011 ;;      Temps:          0       0       0
  3012 ;;      Totals:         0       0       0
  3013 ;;Total ram usage:        0 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    2
  3016 ;; This function calls:
  3017 ;;		Nothing
  3018 ;; This function is called by:
  3019 ;;		_init_ports
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           
  3024                           ;psect for function _set_ports
  3025  0000'                    _set_ports:	
  3026                           
  3027                           ;init.c: 42:     TRISBbits.TRISB4 = 1;
  3028                           
  3029                           ;incstack = 0
  3030                           ; Regs used in _set_ports: []
  3031  0000' 0021               	movlb	1	; select bank1
  3032  0001' 160D               	bsf	13,4	;volatile
  3033                           
  3034                           ;init.c: 43:     TRISBbits.TRISB5 = 1;
  3035  0002' 168D               	bsf	13,5	;volatile
  3036                           
  3037                           ;init.c: 44:     TRISBbits.TRISB6 = 1;
  3038  0003' 170D               	bsf	13,6	;volatile
  3039                           
  3040                           ;init.c: 45:     TRISBbits.TRISB7 = 1;
  3041  0004' 178D               	bsf	13,7	;volatile
  3042                           
  3043                           ;init.c: 46:     TRISCbits.TRISC5 = 1;
  3044  0005' 168E               	bsf	14,5	;volatile
  3045  0006' 0008               	return
  3046  0007'                    __end_of_set_ports:	
  3047                           
  3048                           	psect	text19
  3049  0000'                    __ptext19:	
  3050 ;; *************** function _res_ports *****************
  3051 ;; Defined at:
  3052 ;;		line 22 in file "init.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		status,2
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1
  3066 ;;      Params:         0       0       0
  3067 ;;      Locals:         0       0       0
  3068 ;;      Temps:          0       0       0
  3069 ;;      Totals:         0       0       0
  3070 ;;Total ram usage:        0 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    2
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_init_ports
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           
  3081                           ;psect for function _res_ports
  3082  0000'                    _res_ports:	
  3083                           
  3084                           ;init.c: 24:     TRISA = 0x00;
  3085                           
  3086                           ;incstack = 0
  3087                           ; Regs used in _res_ports: [status,2]
  3088  0000' 0021               	movlb	1	; select bank1
  3089  0001' 018C               	clrf	12	;volatile
  3090                           
  3091                           ;init.c: 25:     TRISB = 0x00;
  3092  0002' 018D               	clrf	13	;volatile
  3093                           
  3094                           ;init.c: 26:     TRISC = 0x00;
  3095  0003' 018E               	clrf	14	;volatile
  3096                           
  3097                           ;init.c: 29:     LATA = 0x00;
  3098  0004' 0022               	movlb	2	; select bank2
  3099  0005' 018C               	clrf	12	;volatile
  3100                           
  3101                           ;init.c: 30:     LATB = 0x00;
  3102  0006' 018D               	clrf	13	;volatile
  3103                           
  3104                           ;init.c: 31:     LATC = 0x00;
  3105  0007' 018E               	clrf	14	;volatile
  3106                           
  3107                           ;init.c: 34:     ANSELA = 0x00;
  3108  0008' 0023               	movlb	3	; select bank3
  3109  0009' 018C               	clrf	12	;volatile
  3110                           
  3111                           ;init.c: 35:     ANSELB = 0x00;
  3112  000A' 018D               	clrf	13	;volatile
  3113                           
  3114                           ;init.c: 36:     ANSELC = 0x00;
  3115  000B' 018E               	clrf	14	;volatile
  3116  000C' 0008               	return
  3117  000D'                    __end_of_res_ports:	
  3118                           
  3119                           	psect	text20
  3120  0000'                    __ptext20:	
  3121 ;; *************** function _init_oscillerator *****************
  3122 ;; Defined at:
  3123 ;;		line 12 in file "init.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;		None
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;		None
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		wreg, status,2, status,0
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMMON   BANK0   BANK1
  3137 ;;      Params:         0       0       0
  3138 ;;      Locals:         0       0       0
  3139 ;;      Temps:          0       0       0
  3140 ;;      Totals:         0       0       0
  3141 ;;Total ram usage:        0 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; Hardware stack levels required when called:    2
  3144 ;; This function calls:
  3145 ;;		Nothing
  3146 ;; This function is called by:
  3147 ;;		_init
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           
  3152                           ;psect for function _init_oscillerator
  3153  0000'                    _init_oscillerator:	
  3154                           
  3155                           ;init.c: 13:     OSCCONbits.SCS1 = 1;
  3156                           
  3157                           ;incstack = 0
  3158                           ; Regs used in _init_oscillerator: [wreg+status,2+status,0]
  3159  0000' 0021               	movlb	1	; select bank1
  3160  0001' 1499               	bsf	25,1	;volatile
  3161                           
  3162                           ;init.c: 14:     OSCCONbits.IRCF = 0b1110;
  3163  0002' 0819               	movf	25,w	;volatile
  3164  0003' 3987               	andlw	-121
  3165  0004' 3870               	iorlw	112
  3166  0005' 0099               	movwf	25	;volatile
  3167  0006' 0008               	return
  3168  0007'                    __end_of_init_oscillerator:	
  3169                           
  3170                           	psect	text21
  3171  0000'                    __ptext21:	
  3172 ;; *************** function _init_interrupt *****************
  3173 ;; Defined at:
  3174 ;;		line 67 in file "init.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;		None
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;		None
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      void 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0, pclath, cstack
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMMON   BANK0   BANK1
  3188 ;;      Params:         0       0       0
  3189 ;;      Locals:         0       0       0
  3190 ;;      Temps:          0       0       0
  3191 ;;      Totals:         0       0       0
  3192 ;;Total ram usage:        0 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    3
  3195 ;; This function calls:
  3196 ;;		_init_interrupt_timer
  3197 ;; This function is called by:
  3198 ;;		_init
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           
  3203                           ;psect for function _init_interrupt
  3204  0000'                    _init_interrupt:	
  3205                           
  3206                           ;init.c: 69:     init_interrupt_timer ();
  3207                           
  3208                           ;incstack = 0
  3209                           ; Regs used in _init_interrupt: [wreg+status,2+status,0+pclath+cstack]
  3210  0000' 2000'              	fcall	_init_interrupt_timer
  3211                           
  3212                           ;init.c: 72:     INTCONbits.GIE = 1;
  3213  0001' 178B               	bsf	11,7	;volatile
  3214  0002' 0008               	return
  3215  0003'                    __end_of_init_interrupt:	
  3216                           
  3217                           	psect	text22
  3218  0000'                    __ptext22:	
  3219 ;; *************** function _init_interrupt_timer *****************
  3220 ;; Defined at:
  3221 ;;		line 76 in file "init.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;		None
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;		None
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg, status,2, status,0
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1
  3235 ;;      Params:         0       0       0
  3236 ;;      Locals:         0       0       0
  3237 ;;      Temps:          0       0       0
  3238 ;;      Totals:         0       0       0
  3239 ;;Total ram usage:        0 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    2
  3242 ;; This function calls:
  3243 ;;		Nothing
  3244 ;; This function is called by:
  3245 ;;		_init_interrupt
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           
  3250                           ;psect for function _init_interrupt_timer
  3251  0000'                    _init_interrupt_timer:	
  3252                           
  3253                           ;init.c: 78:     OPTION_REGbits.PSA = 0;
  3254                           
  3255                           ;incstack = 0
  3256                           ; Regs used in _init_interrupt_timer: [wreg+status,2+status,0]
  3257  0000' 0021               	movlb	1	; select bank1
  3258  0001' 1195               	bcf	21,3	;volatile
  3259                           
  3260                           ;init.c: 80:     OPTION_REGbits.PS = 0b100;
  3261  0002' 0815               	movf	21,w	;volatile
  3262  0003' 39F8               	andlw	-8
  3263  0004' 3804               	iorlw	4
  3264  0005' 0095               	movwf	21	;volatile
  3265                           
  3266                           ;init.c: 83:     OPTION_REGbits.TMR0CS = 0;
  3267  0006' 1295               	bcf	21,5	;volatile
  3268                           
  3269                           ;init.c: 86:     OPTION_REGbits.TMR0SE = 0;
  3270  0007' 1215               	bcf	21,4	;volatile
  3271                           
  3272                           ;init.c: 90:     T0IE = 1;
  3273  0008' 168B               	bsf	11,5	;volatile
  3274                           
  3275                           ;init.c: 92:     TMR0 = 0;
  3276  0009' 0020               	movlb	0	; select bank0
  3277  000A' 0195               	clrf	21	;volatile
  3278  000B' 0008               	return
  3279  000C'                    __end_of_init_interrupt_timer:	
  3280                           
  3281                           	psect	text23
  3282  0000'                    __ptext23:	
  3283 ;; *************** function _init_i2c *****************
  3284 ;; Defined at:
  3285 ;;		line 49 in file "init.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      void 
  3292 ;; Registers used:
  3293 ;;		wreg
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1
  3299 ;;      Params:         0       0       0
  3300 ;;      Locals:         0       0       0
  3301 ;;      Temps:          0       0       0
  3302 ;;      Totals:         0       0       0
  3303 ;;Total ram usage:        0 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    2
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_init
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           
  3314                           ;psect for function _init_i2c
  3315  0000'                    _init_i2c:	
  3316                           
  3317                           ;init.c: 51:     TRISCbits.TRISC3 = 1;
  3318                           
  3319                           ;incstack = 0
  3320                           ; Regs used in _init_i2c: [wreg]
  3321  0000' 0021               	movlb	1	; select bank1
  3322  0001' 158E               	bsf	14,3	;volatile
  3323                           
  3324                           ;init.c: 52:     TRISCbits.TRISC4 = 1;
  3325  0002' 160E               	bsf	14,4	;volatile
  3326                           
  3327                           ;init.c: 59:     SSPADD = 19;
  3328  0003' 3013               	movlw	19
  3329  0004' 0024               	movlb	4	; select bank4
  3330  0005' 0092               	movwf	18	;volatile
  3331                           
  3332                           ;init.c: 63:     SSPCON1 = 0x28;
  3333  0006' 3028               	movlw	40
  3334  0007' 0095               	movwf	21	;volatile
  3335  0008' 0008               	return
  3336  0009'                    __end_of_init_i2c:	
  3337                           
  3338                           	psect	text24
  3339  0000'                    __ptext24:	
  3340 ;; *************** function _eeprom_write_16 *****************
  3341 ;; Defined at:
  3342 ;;		line 115 in file "i2c_eeprom.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  slaveAdd        1    wreg     unsigned char 
  3345 ;;  add             2    0[COMMON] unsigned short 
  3346 ;;  eeData          1    2[COMMON] unsigned char 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  slaveAdd        1    4[COMMON] unsigned char 
  3349 ;;  addLow          1    6[COMMON] unsigned char 
  3350 ;;  addHigh         1    5[COMMON] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1
  3360 ;;      Params:         3       0       0
  3361 ;;      Locals:         3       0       0
  3362 ;;      Temps:          1       0       0
  3363 ;;      Totals:         7       0       0
  3364 ;;Total ram usage:        7 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    2
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		_main
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           
  3375                           ;psect for function _eeprom_write_16
  3376  0000'                    _eeprom_write_16:	
  3377                           
  3378                           ;incstack = 0
  3379                           ; Regs used in _eeprom_write_16: [wreg+status,2]
  3380                           ;eeprom_write_16@slaveAdd stored from wreg
  3381  0000' 0084'              	movwf	eeprom_write_16@slaveAdd
  3382                           
  3383                           ;i2c_eeprom.c: 116:     uint8_t addHigh = add >> 8;
  3384  0001' 0801'              	movf	eeprom_write_16@add+1,w
  3385  0002' 0083'              	movwf	??_eeprom_write_16
  3386  0003' 0803'              	movf	??_eeprom_write_16,w
  3387  0004' 0085'              	movwf	eeprom_write_16@addHigh
  3388                           
  3389                           ;i2c_eeprom.c: 117:     uint8_t addLow = add;
  3390  0005' 0800'              	movf	eeprom_write_16@add,w
  3391  0006' 0083'              	movwf	??_eeprom_write_16
  3392  0007' 0803'              	movf	??_eeprom_write_16,w
  3393  0008' 0086'              	movwf	eeprom_write_16@addLow
  3394                           
  3395                           ;i2c_eeprom.c: 118:     SSPCON2bits.SEN = 1;
  3396  0009' 0024               	movlb	4	; select bank4
  3397  000A' 1416               	bsf	22,0	;volatile
  3398  000B'                    l203:	
  3399                           ;i2c_eeprom.c: 119:     while (SEN);
  3400                           
  3401  000B' 1816               	btfsc	22,0	;volatile
  3402  000C' 280B'              	goto	l203
  3403                           
  3404                           ;i2c_eeprom.c: 120:     PIR1bits.SSPIF = 0;
  3405  000D' 0020               	movlb	0	; select bank0
  3406  000E' 1191               	bcf	17,3	;volatile
  3407                           
  3408                           ;i2c_eeprom.c: 122:     SSPBUF = slaveAdd;
  3409  000F' 0804'              	movf	eeprom_write_16@slaveAdd,w
  3410  0010' 0024               	movlb	4	; select bank4
  3411  0011' 0091               	movwf	17	;volatile
  3412  0012'                    l206:	
  3413                           ;i2c_eeprom.c: 123:     while (!SSPIF);
  3414                           
  3415  0012' 0020               	movlb	0	; select bank0
  3416  0013' 1D91               	btfss	17,3	;volatile
  3417  0014' 2812'              	goto	l206
  3418                           
  3419                           ;i2c_eeprom.c: 124:     PIR1bits.SSPIF = 0;
  3420  0015' 1191               	bcf	17,3	;volatile
  3421                           
  3422                           ;i2c_eeprom.c: 125:     if (SSPCON2bits.ACKSTAT) {
  3423  0016' 0024               	movlb	4	; select bank4
  3424  0017' 1F16               	btfss	22,6	;volatile
  3425  0018' 281D'              	goto	l1832
  3426                           
  3427                           ;i2c_eeprom.c: 126:         SSPCON2bits.PEN = 1;
  3428  0019' 1516               	bsf	22,2	;volatile
  3429  001A'                    l210:	
  3430                           ;i2c_eeprom.c: 127:         while (PEN);
  3431                           
  3432  001A' 1D16               	btfss	22,2	;volatile
  3433  001B' 0008               	return
  3434  001C' 281A'              	goto	l210
  3435  001D'                    l1832:	
  3436                           
  3437                           ;i2c_eeprom.c: 131:     SSPBUF = addHigh;
  3438  001D' 0805'              	movf	eeprom_write_16@addHigh,w
  3439  001E' 0091               	movwf	17	;volatile
  3440  001F'                    l214:	
  3441                           ;i2c_eeprom.c: 132:     while (!SSPIF);
  3442                           
  3443  001F' 0020               	movlb	0	; select bank0
  3444  0020' 1D91               	btfss	17,3	;volatile
  3445  0021' 281F'              	goto	l214
  3446                           
  3447                           ;i2c_eeprom.c: 133:     PIR1bits.SSPIF = 0;
  3448  0022' 1191               	bcf	17,3	;volatile
  3449                           
  3450                           ;i2c_eeprom.c: 134:     if (SSPCON2bits.ACKSTAT) {
  3451  0023' 0024               	movlb	4	; select bank4
  3452  0024' 1F16               	btfss	22,6	;volatile
  3453  0025' 282A'              	goto	l1836
  3454                           
  3455                           ;i2c_eeprom.c: 135:         SSPCON2bits.PEN = 1;
  3456  0026' 1516               	bsf	22,2	;volatile
  3457  0027'                    l218:	
  3458                           ;i2c_eeprom.c: 136:         while (PEN);
  3459                           
  3460  0027' 1D16               	btfss	22,2	;volatile
  3461  0028' 0008               	return
  3462  0029' 2827'              	goto	l218
  3463  002A'                    l1836:	
  3464                           
  3465                           ;i2c_eeprom.c: 140:     SSPBUF = addLow;
  3466  002A' 0806'              	movf	eeprom_write_16@addLow,w
  3467  002B' 0091               	movwf	17	;volatile
  3468  002C'                    l221:	
  3469                           ;i2c_eeprom.c: 141:     while (!SSPIF);
  3470                           
  3471  002C' 0020               	movlb	0	; select bank0
  3472  002D' 1D91               	btfss	17,3	;volatile
  3473  002E' 282C'              	goto	l221
  3474                           
  3475                           ;i2c_eeprom.c: 142:     PIR1bits.SSPIF = 0;
  3476  002F' 1191               	bcf	17,3	;volatile
  3477                           
  3478                           ;i2c_eeprom.c: 143:     if (SSPCON2bits.ACKSTAT) {
  3479  0030' 0024               	movlb	4	; select bank4
  3480  0031' 1F16               	btfss	22,6	;volatile
  3481  0032' 2837'              	goto	l1840
  3482                           
  3483                           ;i2c_eeprom.c: 144:         SSPCON2bits.PEN = 1;
  3484  0033' 1516               	bsf	22,2	;volatile
  3485  0034'                    l225:	
  3486                           ;i2c_eeprom.c: 145:         while (PEN);
  3487                           
  3488  0034' 1D16               	btfss	22,2	;volatile
  3489  0035' 0008               	return
  3490  0036' 2834'              	goto	l225
  3491  0037'                    l1840:	
  3492                           
  3493                           ;i2c_eeprom.c: 149:     SSPBUF = eeData;
  3494  0037' 0802'              	movf	eeprom_write_16@eeData,w
  3495  0038' 0091               	movwf	17	;volatile
  3496  0039'                    l228:	
  3497                           ;i2c_eeprom.c: 150:     while (!SSPIF);
  3498                           
  3499  0039' 0020               	movlb	0	; select bank0
  3500  003A' 1D91               	btfss	17,3	;volatile
  3501  003B' 2839'              	goto	l228
  3502                           
  3503                           ;i2c_eeprom.c: 151:     PIR1bits.SSPIF = 0;
  3504  003C' 1191               	bcf	17,3	;volatile
  3505                           
  3506                           ;i2c_eeprom.c: 153:     SSPCON2bits.PEN = 1;
  3507  003D' 0024               	movlb	4	; select bank4
  3508  003E' 1516               	bsf	22,2	;volatile
  3509  003F'                    l231:	
  3510                           ;i2c_eeprom.c: 154:     while (PEN);
  3511                           
  3512  003F' 1D16               	btfss	22,2	;volatile
  3513  0040' 0008               	return
  3514  0041' 283F'              	goto	l231
  3515  0042'                    __end_of_eeprom_write_16:	
  3516                           
  3517                           	psect	text25
  3518  0000'                    __ptext25:	
  3519 ;; *************** function _eeprom_read_16 *****************
  3520 ;; Defined at:
  3521 ;;		line 156 in file "i2c_eeprom.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  slaveAdd        1    wreg     unsigned char 
  3524 ;;  add             2    0[COMMON] unsigned short 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  slaveAdd        1    6[COMMON] unsigned char 
  3527 ;;  tempData        1    5[COMMON] unsigned char 
  3528 ;;  addLow          1    4[COMMON] unsigned char 
  3529 ;;  addHigh         1    3[COMMON] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      unsigned char 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1
  3539 ;;      Params:         2       0       0
  3540 ;;      Locals:         4       0       0
  3541 ;;      Temps:          1       0       0
  3542 ;;      Totals:         7       0       0
  3543 ;;Total ram usage:        7 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    2
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_main
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           
  3554                           ;psect for function _eeprom_read_16
  3555  0000'                    _eeprom_read_16:	
  3556                           
  3557                           ;incstack = 0
  3558                           ; Regs used in _eeprom_read_16: [wreg+status,2+status,0]
  3559                           ;eeprom_read_16@slaveAdd stored from wreg
  3560  0000' 0086'              	movwf	eeprom_read_16@slaveAdd
  3561                           
  3562                           ;i2c_eeprom.c: 157:     uint8_t addHigh = add >> 8;
  3563  0001' 0801'              	movf	eeprom_read_16@add+1,w
  3564  0002' 0082'              	movwf	??_eeprom_read_16
  3565  0003' 0802'              	movf	??_eeprom_read_16,w
  3566  0004' 0083'              	movwf	eeprom_read_16@addHigh
  3567                           
  3568                           ;i2c_eeprom.c: 158:     uint8_t addLow = add;
  3569  0005' 0800'              	movf	eeprom_read_16@add,w
  3570  0006' 0082'              	movwf	??_eeprom_read_16
  3571  0007' 0802'              	movf	??_eeprom_read_16,w
  3572  0008' 0084'              	movwf	eeprom_read_16@addLow
  3573                           
  3574                           ;i2c_eeprom.c: 159:     uint8_t tempData;;i2c_eeprom.c: 161:     SSPCON2bits.SEN = 1;
  3575  0009' 0024               	movlb	4	; select bank4
  3576  000A' 1416               	bsf	22,0	;volatile
  3577  000B'                    l236:	
  3578                           ;i2c_eeprom.c: 162:     while (SEN);
  3579                           
  3580  000B' 1816               	btfsc	22,0	;volatile
  3581  000C' 280B'              	goto	l236
  3582                           
  3583                           ;i2c_eeprom.c: 163:     PIR1bits.SSPIF = 0;
  3584  000D' 0020               	movlb	0	; select bank0
  3585  000E' 1191               	bcf	17,3	;volatile
  3586                           
  3587                           ;i2c_eeprom.c: 164:     SSPBUF = slaveAdd;
  3588  000F' 0806'              	movf	eeprom_read_16@slaveAdd,w
  3589  0010' 0024               	movlb	4	; select bank4
  3590  0011' 0091               	movwf	17	;volatile
  3591  0012'                    l239:	
  3592                           ;i2c_eeprom.c: 165:     while (!SSPIF);
  3593                           
  3594  0012' 0020               	movlb	0	; select bank0
  3595  0013' 1D91               	btfss	17,3	;volatile
  3596  0014' 2812'              	goto	l239
  3597                           
  3598                           ;i2c_eeprom.c: 166:     PIR1bits.SSPIF = 0;
  3599  0015' 1191               	bcf	17,3	;volatile
  3600                           
  3601                           ;i2c_eeprom.c: 167:     if (SSPCON2bits.ACKSTAT) {
  3602  0016' 0024               	movlb	4	; select bank4
  3603  0017' 1F16               	btfss	22,6	;volatile
  3604  0018' 281E'              	goto	l1856
  3605                           
  3606                           ;i2c_eeprom.c: 168:         SSPCON2bits.PEN = 1;
  3607  0019' 1516               	bsf	22,2	;volatile
  3608  001A'                    l243:	
  3609                           ;i2c_eeprom.c: 169:         while (PEN);
  3610                           
  3611  001A' 1916               	btfsc	22,2	;volatile
  3612  001B' 281A'              	goto	l243
  3613                           
  3614                           ;i2c_eeprom.c: 170:         return (0xFB);
  3615  001C' 30FB               	movlw	251
  3616  001D' 0008               	return
  3617  001E'                    l1856:	
  3618                           
  3619                           ;i2c_eeprom.c: 173:     SSPBUF = addHigh;
  3620  001E' 0803'              	movf	eeprom_read_16@addHigh,w
  3621  001F' 0091               	movwf	17	;volatile
  3622  0020'                    l247:	
  3623                           ;i2c_eeprom.c: 174:     while (!SSPIF);
  3624                           
  3625  0020' 0020               	movlb	0	; select bank0
  3626  0021' 1D91               	btfss	17,3	;volatile
  3627  0022' 2820'              	goto	l247
  3628                           
  3629                           ;i2c_eeprom.c: 175:     PIR1bits.SSPIF = 0;
  3630  0023' 1191               	bcf	17,3	;volatile
  3631                           
  3632                           ;i2c_eeprom.c: 176:     if (SSPCON2bits.ACKSTAT) {
  3633  0024' 0024               	movlb	4	; select bank4
  3634  0025' 1F16               	btfss	22,6	;volatile
  3635  0026' 282C'              	goto	l1864
  3636                           
  3637                           ;i2c_eeprom.c: 177:         SSPCON2bits.PEN = 1;
  3638  0027' 1516               	bsf	22,2	;volatile
  3639  0028'                    l251:	
  3640                           ;i2c_eeprom.c: 178:         while (PEN);
  3641                           
  3642  0028' 1916               	btfsc	22,2	;volatile
  3643  0029' 2828'              	goto	l251
  3644                           
  3645                           ;i2c_eeprom.c: 179:         return (0xFE);
  3646  002A' 30FE               	movlw	254
  3647  002B' 0008               	return
  3648  002C'                    l1864:	
  3649                           
  3650                           ;i2c_eeprom.c: 182:     SSPBUF = addLow;
  3651  002C' 0804'              	movf	eeprom_read_16@addLow,w
  3652  002D' 0091               	movwf	17	;volatile
  3653  002E'                    l254:	
  3654                           ;i2c_eeprom.c: 183:     while (!SSPIF);
  3655                           
  3656  002E' 0020               	movlb	0	; select bank0
  3657  002F' 1D91               	btfss	17,3	;volatile
  3658  0030' 282E'              	goto	l254
  3659                           
  3660                           ;i2c_eeprom.c: 184:     PIR1bits.SSPIF = 0;
  3661  0031' 1191               	bcf	17,3	;volatile
  3662                           
  3663                           ;i2c_eeprom.c: 185:     if (SSPCON2bits.ACKSTAT) {
  3664  0032' 0024               	movlb	4	; select bank4
  3665  0033' 1F16               	btfss	22,6	;volatile
  3666  0034' 283A'              	goto	l257
  3667                           
  3668                           ;i2c_eeprom.c: 186:         SSPCON2bits.PEN = 1;
  3669  0035' 1516               	bsf	22,2	;volatile
  3670  0036'                    l258:	
  3671                           ;i2c_eeprom.c: 187:         while (PEN);
  3672                           
  3673  0036' 1916               	btfsc	22,2	;volatile
  3674  0037' 2836'              	goto	l258
  3675                           
  3676                           ;i2c_eeprom.c: 188:         return (0xFD);
  3677  0038' 30FD               	movlw	253
  3678  0039' 0008               	return
  3679  003A'                    l257:	
  3680                           ;i2c_eeprom.c: 189:     }
  3681                           
  3682                           
  3683                           ;i2c_eeprom.c: 191:     SSPCON2bits.RSEN = 1;
  3684  003A' 1496               	bsf	22,1	;volatile
  3685  003B'                    l261:	
  3686                           ;i2c_eeprom.c: 192:     while (RSEN);
  3687                           
  3688  003B' 1896               	btfsc	22,1	;volatile
  3689  003C' 283B'              	goto	l261
  3690                           
  3691                           ;i2c_eeprom.c: 193:     PIR1bits.SSPIF = 0;
  3692  003D' 0020               	movlb	0	; select bank0
  3693  003E' 1191               	bcf	17,3	;volatile
  3694                           
  3695                           ;i2c_eeprom.c: 195:     SSPBUF = (slaveAdd+1);
  3696  003F' 0806'              	movf	eeprom_read_16@slaveAdd,w
  3697  0040' 3E01               	addlw	1
  3698  0041' 0024               	movlb	4	; select bank4
  3699  0042' 0091               	movwf	17	;volatile
  3700  0043'                    l264:	
  3701                           ;i2c_eeprom.c: 196:     while (!SSPIF);
  3702                           
  3703  0043' 0020               	movlb	0	; select bank0
  3704  0044' 1D91               	btfss	17,3	;volatile
  3705  0045' 2843'              	goto	l264
  3706                           
  3707                           ;i2c_eeprom.c: 197:     PIR1bits.SSPIF = 0;
  3708  0046' 1191               	bcf	17,3	;volatile
  3709                           
  3710                           ;i2c_eeprom.c: 198:     if (SSPCON2bits.ACKSTAT) {
  3711  0047' 0024               	movlb	4	; select bank4
  3712  0048' 1F16               	btfss	22,6	;volatile
  3713  0049' 284F'              	goto	l267
  3714                           
  3715                           ;i2c_eeprom.c: 199:         SSPCON2bits.PEN = 1;
  3716  004A' 1516               	bsf	22,2	;volatile
  3717  004B'                    l268:	
  3718                           ;i2c_eeprom.c: 200:         while (PEN);
  3719                           
  3720  004B' 1916               	btfsc	22,2	;volatile
  3721  004C' 284B'              	goto	l268
  3722                           
  3723                           ;i2c_eeprom.c: 201:         return (0xFC);
  3724  004D' 30FC               	movlw	252
  3725  004E' 0008               	return
  3726  004F'                    l267:	
  3727                           ;i2c_eeprom.c: 202:     }
  3728                           
  3729                           
  3730                           ;i2c_eeprom.c: 204:     SSPCON2bits.RCEN = 1;
  3731  004F' 1596               	bsf	22,3	;volatile
  3732  0050'                    l271:	
  3733                           ;i2c_eeprom.c: 205:     while (!SSPSTATbits.BF);
  3734                           
  3735  0050' 1C14               	btfss	20,0	;volatile
  3736  0051' 2850'              	goto	l271
  3737                           
  3738                           ;i2c_eeprom.c: 206:     tempData = SSPBUF;
  3739  0052' 0811               	movf	17,w	;volatile
  3740  0053' 0082'              	movwf	??_eeprom_read_16
  3741  0054' 0802'              	movf	??_eeprom_read_16,w
  3742  0055' 0085'              	movwf	eeprom_read_16@tempData
  3743                           
  3744                           ;i2c_eeprom.c: 208:     SSPCON2bits.ACKDT = 1;
  3745  0056' 1696               	bsf	22,5	;volatile
  3746                           
  3747                           ;i2c_eeprom.c: 209:     SSPCON2bits.ACKEN = 1;
  3748  0057' 1616               	bsf	22,4	;volatile
  3749  0058'                    l274:	
  3750                           ;i2c_eeprom.c: 210:     while (ACKEN);
  3751                           
  3752  0058' 1A16               	btfsc	22,4	;volatile
  3753  0059' 2858'              	goto	l274
  3754                           
  3755                           ;i2c_eeprom.c: 212:     SSPCON2bits.PEN = 1;
  3756  005A' 1516               	bsf	22,2	;volatile
  3757  005B'                    l277:	
  3758                           ;i2c_eeprom.c: 213:     while(PEN);
  3759                           
  3760  005B' 1916               	btfsc	22,2	;volatile
  3761  005C' 285B'              	goto	l277
  3762                           
  3763                           ;i2c_eeprom.c: 214:     return tempData;
  3764  005D' 0805'              	movf	eeprom_read_16@tempData,w
  3765  005E' 0008               	return
  3766  005F'                    __end_of_eeprom_read_16:	
  3767                           
  3768                           	psect	intentry
  3769  0000'                    __pintentry:	
  3770 ;; *************** function _interruptHandler *****************
  3771 ;; Defined at:
  3772 ;;		line 33 in file "interrupts.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;		None
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;		None
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      void 
  3779 ;; Registers used:
  3780 ;;		wreg, status,2, status,0, pclath, cstack
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMMON   BANK0   BANK1
  3786 ;;      Params:         0       0       0
  3787 ;;      Locals:         0       0       0
  3788 ;;      Temps:          0       0       0
  3789 ;;      Totals:         0       0       0
  3790 ;;Total ram usage:        0 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:    1
  3793 ;; This function calls:
  3794 ;;		_on_interrupt_timer_0
  3795 ;; This function is called by:
  3796 ;;		Interrupt level 1
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800  0000'                    _interruptHandler:	
  3801                           
  3802                           ;incstack = 0
  3803  0000' 147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3804                           
  3805                           ; Regs used in _interruptHandler: [wreg+status,2+status,0+pclath+cstack]
  3806  0001' 3180'              	pagesel	$
  3807                           
  3808                           ;interrupts.c: 36:     if (T0IE && T0IF){
  3809  0002' 1A8B               	btfsc	11,5	;volatile
  3810  0003' 1D0B               	btfss	11,2	;volatile
  3811  0004' 2807'              	goto	i1l379
  3812                           
  3813                           ;interrupts.c: 37:         on_interrupt_timer_0();
  3814  0005' 2000'              	fcall	_on_interrupt_timer_0
  3815                           
  3816                           ;interrupts.c: 38:         T0IF = 0;
  3817  0006' 110B               	bcf	11,2	;volatile
  3818  0007'                    i1l379:	
  3819  0007' 107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3820  0008' 0009               	retfie
  3821  0009'                    __end_of_interruptHandler:	
  3822                           
  3823                           	psect	text27
  3824  0000'                    __ptext27:	
  3825 ;; *************** function _on_interrupt_timer_0 *****************
  3826 ;; Defined at:
  3827 ;;		line 9 in file "interrupts.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		wreg, status,2
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMMON   BANK0   BANK1
  3841 ;;      Params:         0       0       0
  3842 ;;      Locals:         0       0       0
  3843 ;;      Temps:          0       0       0
  3844 ;;      Totals:         0       0       0
  3845 ;;Total ram usage:        0 bytes
  3846 ;; Hardware stack levels used:    1
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_interruptHandler
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           
  3855                           ;psect for function _on_interrupt_timer_0
  3856  0000'                    _on_interrupt_timer_0:	
  3857                           
  3858                           ;interrupts.c: 14:     seg_disp_sleep++;
  3859                           
  3860                           ;incstack = 0
  3861                           ; Regs used in _on_interrupt_timer_0: [wreg+status,2]
  3862  0000' 3001               	movlw	1
  3863  0001' 0020               	movlb	0	; select bank0
  3864  0002' 0782'              	addwf	_seg_disp_sleep,f
  3865  0003' 3000               	movlw	0
  3866  0004' 3D83'              	addwfc	_seg_disp_sleep+1,f
  3867                           
  3868                           ;interrupts.c: 15:     if (seg_disp_sleep >= 14648){
  3869  0005' 3039               	movlw	57
  3870  0006' 0203'              	subwf	_seg_disp_sleep+1,w
  3871  0007' 3038               	movlw	56
  3872  0008' 1903               	skipnz
  3873  0009' 0202'              	subwf	_seg_disp_sleep,w
  3874  000A' 1C03               	skipc
  3875  000B' 280F'              	goto	i1l1896
  3876                           
  3877                           ;interrupts.c: 16:         seg_disp_sleep = 0;
  3878  000C' 0182'              	clrf	_seg_disp_sleep
  3879  000D' 0183'              	clrf	_seg_disp_sleep+1
  3880                           
  3881                           ;interrupts.c: 17:         INT_FLAGS.seg_disp_sleep = 1;
  3882  000E' 1406'              	bsf	_INT_FLAGS,0	;volatile
  3883  000F'                    i1l1896:	
  3884                           
  3885                           ;interrupts.c: 20:     INT_FLAGS.seg_disp_vis = 1;
  3886  000F' 1506'              	bsf	_INT_FLAGS,2	;volatile
  3887                           
  3888                           ;interrupts.c: 22:     seg_disp_save++;
  3889  0010' 3001               	movlw	1
  3890  0011' 0780'              	addwf	_seg_disp_save,f
  3891  0012' 3000               	movlw	0
  3892  0013' 3D81'              	addwfc	_seg_disp_save+1,f
  3893                           
  3894                           ;interrupts.c: 23:     if (seg_disp_save >= 1464){
  3895  0014' 3005               	movlw	5
  3896  0015' 0201'              	subwf	_seg_disp_save+1,w
  3897  0016' 30B8               	movlw	184
  3898  0017' 1903               	skipnz
  3899  0018' 0200'              	subwf	_seg_disp_save,w
  3900  0019' 1C03               	skipc
  3901  001A' 0008               	return
  3902                           
  3903                           ;interrupts.c: 24:         seg_disp_save = 0;
  3904  001B' 0180'              	clrf	_seg_disp_save
  3905  001C' 0181'              	clrf	_seg_disp_save+1
  3906                           
  3907                           ;interrupts.c: 25:         INT_FLAGS.seg_disp_save = 1;
  3908  001D' 1586'              	bsf	_INT_FLAGS,3	;volatile
  3909  001E' 0008               	return
  3910  001F'                    __end_of_on_interrupt_timer_0:	
  3911  007E                     btemp	set	126	;btemp
  3912  007E                     int$flags	set	126
  3913  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         15
    Persistent  33
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      30
    BANK1            32      0       0

Pointer List with Targets:

    p_btns	PTR struct .[1] size(1) Largest target is 1
		 -> v_btns(BANK0[1]), 

    p_disp	PTR struct . size(1) Largest target is 3
		 -> v_disp(BANK0[3]), NULL(NULL[0]), 

    seg_disp_47_off@s_t	PTR struct . size(1) Largest target is 3
		 -> v_disp(BANK0[3]), NULL(NULL[0]), 

    seg_disp_47_on@s_t	PTR struct . size(1) Largest target is 3
		 -> v_disp(BANK0[3]), NULL(NULL[0]), 

    seg_disp_47_set_val@s_t	PTR struct . size(1) Largest target is 3
		 -> v_disp(BANK0[3]), NULL(NULL[0]), 

    seg_disp_47_get_val@s_t	PTR struct . size(1) Largest target is 3
		 -> v_disp(BANK0[3]), NULL(NULL[0]), 

    update_seg_disp_47@s_t	PTR struct . size(1) Largest target is 3
		 -> v_disp(BANK0[3]), NULL(NULL[0]), 

    create_seg_disp_47@s_t	PTR struct . size(1) Largest target is 3
		 -> v_disp(BANK0[3]), NULL(NULL[0]), 

    vis_next_digit@s_t	PTR struct . size(1) Largest target is 3
		 -> v_disp(BANK0[3]), NULL(NULL[0]), 

    sp__eeprom_sequential_4_read	PTR unsigned char  size(1) Largest target is 4
		 -> ee_seq_4(BANK0[4]), NULL(NULL[0]), 

    update_switch@s_t	PTR struct . size(1) Largest target is 1
		 -> v_btns(BANK0[1]), 

    create_switch@s_t	PTR struct . size(1) Largest target is 1
		 -> v_btns(BANK0[1]), 


Critical Paths under _main in COMMON

    _update_switches->_update_switch
    _update_seg_disp_47->_seg_disp_47_set_val
    _vis_next_digit->___lwmod
    ___lwmod->___lwdiv
    _init_structs->_create_switch

Critical Paths under _interruptHandler in COMMON

    None.

Critical Paths under _main in BANK0

    _update_int_flags->_vis_next_digit

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3149
                                             11 BANK0      3     3      0
                     _eeprom_read_16
                    _eeprom_write_16
                               _init
                       _init_structs
                        _rst_storage
                   _update_int_flags
                 _update_seg_disp_47
                    _update_switches
 ---------------------------------------------------------------------------------
 (1) _update_switches                                      2     2      0     583
                                             10 COMMON     2     2      0
                      _update_switch
 ---------------------------------------------------------------------------------
 (2) _update_switch                                       10     5      5     493
                                              0 COMMON    10     5      5
 ---------------------------------------------------------------------------------
 (1) _update_seg_disp_47                                   3     1      2     350
                                              5 COMMON     3     1      2
                _seg_disp_47_set_val
 ---------------------------------------------------------------------------------
 (2) _seg_disp_47_set_val                                  5     3      2     197
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _update_int_flags                                     0     0      0    1363
                    _seg_disp_47_off
                     _seg_disp_47_on
                     _vis_next_digit
 ---------------------------------------------------------------------------------
 (2) _vis_next_digit                                      11    11      0    1253
                                              0 BANK0     11    11      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                _seg_disp_47_get_val
 ---------------------------------------------------------------------------------
 (3) _seg_disp_47_get_val                                  8     6      2     102
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _seg_disp_47_on                                       1     1      0      55
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _seg_disp_47_off                                      1     1      0      55
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rst_storage                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_structs                                         1     1      0     264
                                              2 COMMON     1     1      0
                 _create_seg_disp_47
                      _create_switch
 ---------------------------------------------------------------------------------
 (2) _create_switch                                        2     2      0     143
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _create_seg_disp_47                                   1     1      0     121
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                           _init_i2c
                     _init_interrupt
                  _init_oscillerator
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
                          _res_ports
                          _set_ports
 ---------------------------------------------------------------------------------
 (3) _set_ports                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _res_ports                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscillerator                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
               _init_interrupt_timer
 ---------------------------------------------------------------------------------
 (3) _init_interrupt_timer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eeprom_write_16                                      7     4      3     286
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (1) _eeprom_read_16                                       7     5      2     233
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interruptHandler                                     0     0      0       0
               _on_interrupt_timer_0
 ---------------------------------------------------------------------------------
 (5) _on_interrupt_timer_0                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _eeprom_read_16
   _eeprom_write_16
   _init
     _init_i2c
     _init_interrupt
       _init_interrupt_timer
     _init_oscillerator
     _init_ports
       _res_ports
       _set_ports
   _init_structs
     _create_seg_disp_47
     _create_switch
   _rst_storage
   _update_int_flags
     _seg_disp_47_off
     _seg_disp_47_on
     _vis_next_digit
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _seg_disp_47_get_val
   _update_seg_disp_47
     _seg_disp_47_set_val
   _update_switches
     _update_switch

 _interruptHandler (ROOT)
   _on_interrupt_timer_0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      E      1E       6       37.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      2C       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Dec 01 23:39:20 2019

         eeprom_read_16@addLow 0004                    __CFG_CP$OFF 0000                    _SSPSTATbits 0214  
             ??_init_interrupt 0000            ___wmul@multiplicand 0002          eeprom_read_16@addHigh 0003  
                _update_switch 0000                            l210 001A                            l203 000B  
                          l221 002C                            l214 001F                            l206 0012  
                          l231 003F                            l225 0034                            l218 0027  
                          l251 0028                            l243 001A                            l236 000B  
                          l228 0039                            l261 003B                            l254 002E  
                          l271 0050                            l247 0020                            l239 0012  
                          l264 0043                            l257 003A                            l274 0058  
                          l258 0036                            l267 004F                            l268 004B  
                          l277 005B                            l590 0008                            _PEN 10B2  
                          _SEN 10B0                   __CFG_BORV$LO 0000                            wreg 0009  
                 __CFG_IESO$ON 0000         __end_of_seg_disp_47_on 0007                   __CFG_LVP$OFF 0000  
                         l2022 002A                           l2014 001F                           l2018 0022  
                         l2052 0085                           l2028 0034                           l1700 001E  
                         l1704 0027                           l1670 0008                           l1840 0037  
                         l1832 001D                           l1672 0014                           l1648 0002  
                         l1682 002F                           l1770 006A                           l1738 0055  
                         l1922 0010                           l1836 002A                           l1780 0074  
                         l1772 006C                           l1764 0064                           l1756 0014  
                         l1678 0026                           l1694 0006                           l1782 0076  
                         l1774 006E                           l1766 0066                           l1790 00A5  
                         l1758 002F                           l1942 000E                           l1934 0007  
                         l1864 002C                           l1856 001E                           l1696 0012  
                         l1784 0078                           l1776 0070                           l1768 0068  
                         l1778 0072                           l1788 007C                           l1948 0014  
                         _T0IE 005D                           _T0IF 005A                           _LATA 010C  
                         _LATB 010D                           _LATC 010E                           u1505 001F  
                         u1515 0027                           u1435 0009                           u1620 0048  
                         u1445 000E                           u1630 0049                           u1615 0039  
                         u1545 0009                           u1475 000B                           u1565 0018  
                         u1495 0015                           u1575 001F                           u1664 005C  
                         u1665 0059                           u2297 0012                           _TMR0 0015  
                         _RSEN 10B1                   __CFG_WRT$OFF 0000                  __CFG_FCMEN$ON 0000  
                  _rst_storage 0000*                          _main 0000       __end_of_interruptHandler 0009  
                         _init 0000                           fsr0h 0005                           fsr1h 0007  
                         indf0 0000                           fsr0l 0004                           indf1 0001  
                         fsr1l 0006                           btemp 007E                  __CFG_BOREN$ON 0000  
__size_of_init_interrupt_timer 000C                           start 0000*       __end_of_seg_disp_47_off 000A  
                __CFG_MCLRE$ON 0000                ??_create_switch 0000                _update_switches 0000  
               ?_update_switch 0000         eeprom_read_16@tempData 0005         seg_disp_47_get_val@s_t 0007  
       seg_disp_47_get_val@val 0005         eeprom_read_16@slaveAdd 0006                          ?_main 0000  
             _update_int_flags 0000                          _ACKEN 10B4                          ?_init 0000  
                __CFG_WDTE$OFF 0000     __end_of_update_seg_disp_47 0008             _create_seg_disp_47 0000  
              __end_of___lwdiv 0034                __end_of___lwmod 002C                          i1l379 0007  
                        _TRISA 008C                          _TRISB 008D                          _TRISC 008E  
                        _SSPIF 008B                ?_seg_disp_47_on 0000            ?_create_seg_disp_47 0000  
                        main@f 000D                          main@k 000C                          status 0003  
                        wtemp0 007E           _on_interrupt_timer_0 0000                __initialization 0000  
         ??_create_seg_disp_47 0000                   __end_of_main 003E                   __end_of_init 0005  
     seg_disp_47_set_val@value 0000                 __CFG_LPBOR$OFF 0000                         ??_main 000B  
                       ??_init 0000                 _vis_next_digit 0000               ??_eeprom_read_16 0002  
          _seg_disp_47_get_val 0000                         _ANSELA 018C                         _ANSELB 018D  
                       _ANSELC 018E                         i1l1896 000F                         _SSPADD 0212  
                       _SSPBUF 0211            _seg_disp_47_set_val 0000        __end_of_update_switches 0024  
        ?_on_interrupt_timer_0 0000                 __CFG_PWRTE$OFF 0000              _init_oscillerator 0000  
             ?_seg_disp_47_off 0000                  ?_init_structs 0000                         ___wmul 0000  
           ?_init_oscillerator 0000                 __CFG_STVREN$ON 0000                ??_update_switch 0005  
         ?_seg_disp_47_get_val 0000                      ??___lwdiv 0004                      ??___lwmod 000C  
             __end_of_init_i2c 0009                         _p_disp 0000                         _p_btns 0005  
                       _v_disp 000B                         _v_btns 000E         __end_of_vis_next_digit 00B3  
         ?_seg_disp_47_set_val 0000            ??_init_oscillerator 0000       __size_of_eeprom_write_16 0042  
      vis_next_digit@digit_val 0005        __end_of__initialization 0006          update_seg_disp_47@s_t 0007  
       eeprom_write_16@addHigh 0005      __end_of_init_oscillerator 0007                 ??_init_structs 0002  
               __pcstackCOMMON 0000          ??_seg_disp_47_get_val 0002          ??_seg_disp_47_set_val 0002  
              ?_vis_next_digit 0000         seg_disp_47_set_val@s_t 0004                 _OPTION_REGbits 0095  
             create_switch@s_t 0001                     __pbssBANK0 0000                   ?_rst_storage 0000  
              __CFG_VCAPEN$OFF 0000         ??_on_interrupt_timer_0 0000       __end_of_update_int_flags 001A  
            ?_interruptHandler 0000               ?_update_switches 0000             ??_interruptHandler 0000  
                   __pmaintext 0000                        ?___wmul 0000                     __pintentry 0000  
           __size_of_res_ports 000D               ??_seg_disp_47_on 0000   __end_of_init_interrupt_timer 000C  
           __size_of_set_ports 0007                        _SSPCON1 0215              ??_eeprom_write_16 0003  
           _update_seg_disp_47 0000                      ?_init_i2c 0000     __size_of_init_oscillerator 0007  
          ?_update_seg_disp_47 0005                __size_of___wmul 001B                        ___lwdiv 0000  
                      ___lwmod 0000          __end_of_create_switch 001D                     _init_ports 0000  
                      __ptext1 0000                        __ptext2 0000                        __ptext3 0000  
                      __ptext4 0000                        __ptext5 0000                        __ptext6 0000  
                      __ptext7 0000                        __ptext8 0000                        __ptext9 0000  
         ??_update_seg_disp_47 0007        __size_of_init_interrupt 0003           __end_of_init_structs 000F  
                      clrloop0 0001           end_of_initialization 0006               update_switch@s_t 0009  
                   ??_init_i2c 0000              __end_of_res_ports 000D               update_switches@i 000B  
                    _INT_FLAGS 0006              __end_of_set_ports 0007    __size_of_create_seg_disp_47 0016  
                    _PORTBbits 000D               __CFG_FOSC$INTOSC 0000                  _seg_disp_save 0000  
                    _TRISBbits 008D                      _TRISCbits 008E            vis_next_digit@sLATB 0006  
         _init_interrupt_timer 0000               ??_vis_next_digit 0000                 __end_of___wmul 001B  
        __end_of_update_switch 0063                    ?_init_ports 0000       __size_of_seg_disp_47_off 000A  
          start_initialization 0000        eeprom_write_16@slaveAdd 0004          create_seg_disp_47@s_t 0000  
           eeprom_write_16@add 0000          ?_init_interrupt_timer 0000    __end_of_seg_disp_47_get_val 0021  
            ?_update_int_flags 0000            update_switch@streak 0001        __size_of_eeprom_read_16 005F  
           ??_update_int_flags 000E    __end_of_seg_disp_47_set_val 0019                       ??___wmul 0004  
    update_seg_disp_47@cur_val 0005      __size_of_interruptHandler 0009                _eeprom_write_16 0000  
        __size_of_init_structs 000F          eeprom_write_16@eeData 0002          eeprom_write_16@addLow 0006  
                    ___latbits 0000                  __pcstackBANK0 0000                 _init_interrupt 0000  
          __size_of_init_ports 0003                      __pnvBANK0 0000              __size_of_init_i2c 0009  
__size_of_on_interrupt_timer_0 001F               ___lwdiv@dividend 0002                   _init_structs 0000  
                     ?___lwdiv 0000                       ?___lwmod 0008       __size_of_update_switches 0024  
       __end_of_init_interrupt 0003              ??_seg_disp_47_off 0000               ___lwdiv@quotient 0005  
       ??_init_interrupt_timer 0000                vis_next_digit@p 0007                 ___wmul@product 0004  
                    clear_ram0 0000                      _res_ports 0000                       _PIR1bits 0011  
                    _set_ports 0000        __end_of_eeprom_write_16 0042              ___wmul@multiplier 0000  
              ?_init_interrupt 0000    __size_of_update_seg_disp_47 0008        __size_of_seg_disp_47_on 0007  
       __size_of_create_switch 001D                 _eeprom_read_16 0000     __end_of_create_seg_disp_47 0016  
                   ?_res_ports 0000                     ?_set_ports 0000               __size_of___lwdiv 0034  
             __size_of___lwmod 002C                   ??_init_ports 0000             seg_disp_47_off@s_t 0000  
             _interruptHandler 0000              ??_update_switches 000A                       _ee_seq_4 0007  
              ___lwdiv@divisor 0000                ___lwdiv@counter 0007                       __ptext10 0000  
                     __ptext11 0000                       __ptext20 0000                       __ptext12 0000  
                     __ptext21 0000                       __ptext13 0000                       __ptext22 0000  
                     __ptext14 0000                       __ptext23 0000                       __ptext15 0000  
                     __ptext24 0000                       __ptext16 0000                       __ptext25 0000  
                     __ptext17 0000                       __ptext18 0000                       __ptext27 0000  
                     __ptext19 0000                  ??_rst_storage 0000                       _init_i2c 0000  
       __end_of_eeprom_read_16 005F                  __size_of_main 003E                  __size_of_init 0005  
                     _old_btns 0004             __end_of_init_ports 0003               ?_eeprom_write_16 0000  
                     int$flags 007E              vis_next_digit@s_t 000A              vis_next_digit@val 0003  
                _create_switch 0000      __size_of_update_int_flags 001A                     _INTCONbits 000B  
            update_switch@sbtn 0000              seg_disp_47_on@s_t 0000                       intlevel1 0000* 
             ___lwmod@dividend 000A                ?_eeprom_read_16 0000         __size_of_update_switch 0063  
            __CFG_CLKOUTEN$OFF 0000                     _OSCCONbits 0099                    ??_res_ports 0000  
                  ??_set_ports 0000   __size_of_seg_disp_47_get_val 0021                 ?_create_switch 0000  
              _seg_disp_47_off 0000   __size_of_seg_disp_47_set_val 0019    vis_next_digit@digit_divider 0008  
 __end_of_on_interrupt_timer_0 001F                ___lwmod@divisor 0008        __size_of_vis_next_digit 00B3  
              ___lwmod@counter 000D                    _SSPCON2bits 0216                 _seg_disp_47_on 0000  
               _seg_disp_sleep 0002              eeprom_read_16@add 0000  
