

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jun 05 15:17:20 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1512
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.05
    23                           ; Generated 20/12/2018 GMT
    24                           ; 
    25                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F1512 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  008C                     	;# 
    84  008D                     	;# 
    85  008E                     	;# 
    86  0090                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0095                     	;# 
    90  0096                     	;# 
    91  0097                     	;# 
    92  0099                     	;# 
    93  009A                     	;# 
    94  009B                     	;# 
    95  009B                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  011D                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  018E                     	;# 
   111  0191                     	;# 
   112  0191                     	;# 
   113  0192                     	;# 
   114  0193                     	;# 
   115  0193                     	;# 
   116  0194                     	;# 
   117  0195                     	;# 
   118  0196                     	;# 
   119  0197                     	;# 
   120  0199                     	;# 
   121  019A                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019C                     	;# 
   127  019C                     	;# 
   128  019D                     	;# 
   129  019E                     	;# 
   130  019F                     	;# 
   131  020D                     	;# 
   132  0210                     	;# 
   133  0211                     	;# 
   134  0211                     	;# 
   135  0212                     	;# 
   136  0212                     	;# 
   137  0213                     	;# 
   138  0213                     	;# 
   139  0214                     	;# 
   140  0214                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0216                     	;# 
   145  0216                     	;# 
   146  0217                     	;# 
   147  0217                     	;# 
   148  0291                     	;# 
   149  0291                     	;# 
   150  0292                     	;# 
   151  0293                     	;# 
   152  0298                     	;# 
   153  0298                     	;# 
   154  0299                     	;# 
   155  029A                     	;# 
   156  0394                     	;# 
   157  0395                     	;# 
   158  0396                     	;# 
   159  0FE4                     	;# 
   160  0FE5                     	;# 
   161  0FE6                     	;# 
   162  0FE7                     	;# 
   163  0FE8                     	;# 
   164  0FE9                     	;# 
   165  0FEA                     	;# 
   166  0FEB                     	;# 
   167  0FED                     	;# 
   168  0FEE                     	;# 
   169  0FEF                     	;# 
   170  0711                     	;# 
   171  0712                     	;# 
   172  0713                     	;# 
   173  0714                     	;# 
   174  0715                     	;# 
   175  0716                     	;# 
   176  0717                     	;# 
   177  0718                     	;# 
   178  0719                     	;# 
   179  071A                     	;# 
   180  071A                     	;# 
   181  071A                     	;# 
   182  071B                     	;# 
   183  071C                     	;# 
   184  071C                     	;# 
   185  071C                     	;# 
   186  071D                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0008                     	;# 
   196  0009                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  000D                     	;# 
   201  000E                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0015                     	;# 
   206  0016                     	;# 
   207  0016                     	;# 
   208  0017                     	;# 
   209  0018                     	;# 
   210  0019                     	;# 
   211  001A                     	;# 
   212  001B                     	;# 
   213  001C                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  0090                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0097                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009B                     	;# 
   227  009B                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  0116                     	;# 
   237  0117                     	;# 
   238  011D                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  018E                     	;# 
   242  0191                     	;# 
   243  0191                     	;# 
   244  0192                     	;# 
   245  0193                     	;# 
   246  0193                     	;# 
   247  0194                     	;# 
   248  0195                     	;# 
   249  0196                     	;# 
   250  0197                     	;# 
   251  0199                     	;# 
   252  019A                     	;# 
   253  019B                     	;# 
   254  019B                     	;# 
   255  019B                     	;# 
   256  019B                     	;# 
   257  019C                     	;# 
   258  019C                     	;# 
   259  019D                     	;# 
   260  019E                     	;# 
   261  019F                     	;# 
   262  020D                     	;# 
   263  0210                     	;# 
   264  0211                     	;# 
   265  0211                     	;# 
   266  0212                     	;# 
   267  0212                     	;# 
   268  0213                     	;# 
   269  0213                     	;# 
   270  0214                     	;# 
   271  0214                     	;# 
   272  0215                     	;# 
   273  0215                     	;# 
   274  0215                     	;# 
   275  0216                     	;# 
   276  0216                     	;# 
   277  0217                     	;# 
   278  0217                     	;# 
   279  0291                     	;# 
   280  0291                     	;# 
   281  0292                     	;# 
   282  0293                     	;# 
   283  0298                     	;# 
   284  0298                     	;# 
   285  0299                     	;# 
   286  029A                     	;# 
   287  0394                     	;# 
   288  0395                     	;# 
   289  0396                     	;# 
   290  0FE4                     	;# 
   291  0FE5                     	;# 
   292  0FE6                     	;# 
   293  0FE7                     	;# 
   294  0FE8                     	;# 
   295  0FE9                     	;# 
   296  0FEA                     	;# 
   297  0FEB                     	;# 
   298  0FED                     	;# 
   299  0FEE                     	;# 
   300  0FEF                     	;# 
   301  0711                     	;# 
   302  0712                     	;# 
   303  0713                     	;# 
   304  0714                     	;# 
   305  0715                     	;# 
   306  0716                     	;# 
   307  0717                     	;# 
   308  0718                     	;# 
   309  0719                     	;# 
   310  071A                     	;# 
   311  071A                     	;# 
   312  071A                     	;# 
   313  071B                     	;# 
   314  071C                     	;# 
   315  071C                     	;# 
   316  071C                     	;# 
   317  071D                     	;# 
   318  0000                     	;# 
   319  0001                     	;# 
   320  0002                     	;# 
   321  0003                     	;# 
   322  0004                     	;# 
   323  0005                     	;# 
   324  0006                     	;# 
   325  0007                     	;# 
   326  0008                     	;# 
   327  0009                     	;# 
   328  000A                     	;# 
   329  000B                     	;# 
   330  000C                     	;# 
   331  000D                     	;# 
   332  000E                     	;# 
   333  0010                     	;# 
   334  0011                     	;# 
   335  0012                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009B                     	;# 
   358  009B                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  0116                     	;# 
   368  0117                     	;# 
   369  011D                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372  018E                     	;# 
   373  0191                     	;# 
   374  0191                     	;# 
   375  0192                     	;# 
   376  0193                     	;# 
   377  0193                     	;# 
   378  0194                     	;# 
   379  0195                     	;# 
   380  0196                     	;# 
   381  0197                     	;# 
   382  0199                     	;# 
   383  019A                     	;# 
   384  019B                     	;# 
   385  019B                     	;# 
   386  019B                     	;# 
   387  019B                     	;# 
   388  019C                     	;# 
   389  019C                     	;# 
   390  019D                     	;# 
   391  019E                     	;# 
   392  019F                     	;# 
   393  020D                     	;# 
   394  0210                     	;# 
   395  0211                     	;# 
   396  0211                     	;# 
   397  0212                     	;# 
   398  0212                     	;# 
   399  0213                     	;# 
   400  0213                     	;# 
   401  0214                     	;# 
   402  0214                     	;# 
   403  0215                     	;# 
   404  0215                     	;# 
   405  0215                     	;# 
   406  0216                     	;# 
   407  0216                     	;# 
   408  0217                     	;# 
   409  0217                     	;# 
   410  0291                     	;# 
   411  0291                     	;# 
   412  0292                     	;# 
   413  0293                     	;# 
   414  0298                     	;# 
   415  0298                     	;# 
   416  0299                     	;# 
   417  029A                     	;# 
   418  0394                     	;# 
   419  0395                     	;# 
   420  0396                     	;# 
   421  0FE4                     	;# 
   422  0FE5                     	;# 
   423  0FE6                     	;# 
   424  0FE7                     	;# 
   425  0FE8                     	;# 
   426  0FE9                     	;# 
   427  0FEA                     	;# 
   428  0FEB                     	;# 
   429  0FED                     	;# 
   430  0FEE                     	;# 
   431  0FEF                     	;# 
   432  0711                     	;# 
   433  0712                     	;# 
   434  0713                     	;# 
   435  0714                     	;# 
   436  0715                     	;# 
   437  0716                     	;# 
   438  0717                     	;# 
   439  0718                     	;# 
   440  0719                     	;# 
   441  071A                     	;# 
   442  071A                     	;# 
   443  071A                     	;# 
   444  071B                     	;# 
   445  071C                     	;# 
   446  071C                     	;# 
   447  071C                     	;# 
   448  071D                     	;# 
   449  000C                     _PORTAbits	set	12
   450  0015                     _TMR0	set	21
   451  000B                     _INTCONbits	set	11
   452  005A                     _T0IF	set	90
   453  005D                     _T0IE	set	93
   454  0095                     _OPTION_REG	set	149
   455  0095                     _OPTION_REGbits	set	149
   456  008E                     _TRISC	set	142
   457  008D                     _TRISB	set	141
   458  008C                     _TRISA	set	140
   459  0099                     _OSCCONbits	set	153
   460  010C                     _LATAbits	set	268
   461  010E                     _LATC	set	270
   462  010D                     _LATB	set	269
   463  010C                     _LATA	set	268
   464  018E                     _ANSELC	set	398
   465  018D                     _ANSELB	set	397
   466  018C                     _ANSELA	set	396
   467                           
   468                           ; #config settings
   469  0000                     
   470                           	psect	cinit
   471  0013                     start_initialization:	
   472  0013                     __initialization:	
   473                           
   474                           ; Clear objects allocated to COMMON
   475  0013  01F9               	clrf	__pbssCOMMON& (0+127)
   476  0014  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   477  0015  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   478  0016                     end_of_initialization:	
   479                           ;End of C runtime variable initialization code
   480                           
   481  0016                     __end_of__initialization:	
   482  0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   483  0017  0020               	movlb	0
   484  0018  28F8               	ljmp	_main	;jump to C main() function
   485                           
   486                           	psect	bssCOMMON
   487  0079                     __pbssCOMMON:	
   488  0079                     _counter:	
   489  0079                     	ds	1
   490  007A                     _btn_streak:	
   491  007A                     	ds	1
   492  007B                     _btn_state:	
   493  007B                     	ds	1
   494                           
   495                           	psect	cstackCOMMON
   496  0070                     __pcstackCOMMON:	
   497  0070                     ?_toggle_RA2:	
   498  0070                     ??_toggle_RA2:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_fixedUpdate:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_update:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_btn_ch:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_interruptHandler:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_init:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_main:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_toggle_RA1:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ??_toggle_RA1:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_toggle_RA3:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ??_toggle_RA3:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_btn_dn:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ??_btn_dn:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_btn_up:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ??_btn_up:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?___awmod:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ___awmod@divisor:	
   547                           ; 2 bytes @ 0x0
   548                           
   549                           
   550                           ; 2 bytes @ 0x0
   551  0070                     	ds	1
   552  0071                     ??_btn_ch:	
   553                           
   554                           ; 1 bytes @ 0x1
   555  0071                     	ds	1
   556  0072                     ___awmod@dividend:	
   557                           
   558                           ; 2 bytes @ 0x2
   559  0072                     	ds	2
   560  0074                     ??___awmod:	
   561                           
   562                           ; 1 bytes @ 0x4
   563  0074                     	ds	1
   564  0075                     ___awmod@counter:	
   565                           
   566                           ; 1 bytes @ 0x5
   567  0075                     	ds	1
   568  0076                     ___awmod@sign:	
   569                           
   570                           ; 1 bytes @ 0x6
   571  0076                     	ds	1
   572  0077                     ??_fixedUpdate:	
   573                           
   574                           ; 1 bytes @ 0x7
   575  0077                     	ds	2
   576  0079                     ??_interruptHandler:	
   577                           
   578                           	psect	cstackBANK0
   579  0000                     __pcstackBANK0:	
   580                           ; 1 bytes @ 0x9
   581                           
   582  0000                     ??_update:	
   583  0000                     ??_init:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0000                     ??_main:	
   587                           ; 1 bytes @ 0x0
   588                           
   589                           
   590                           	psect	maintext
   591  00F8                     __pmaintext:	
   592                           ; 1 bytes @ 0x0
   593 ;;
   594 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   595 ;;
   596 ;; *************** function _main *****************
   597 ;; Defined at:
   598 ;;		line 102 in file "LEDTurnon.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;		None
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, status,2, status,0, pclath, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : B1F/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1
   612 ;;      Params:         0       0       0
   613 ;;      Locals:         0       0       0
   614 ;;      Temps:          0       0       0
   615 ;;      Totals:         0       0       0
   616 ;;Total ram usage:        0 bytes
   617 ;; Hardware stack levels required when called:    5
   618 ;; This function calls:
   619 ;;		_init
   620 ;;		_update
   621 ;; This function is called by:
   622 ;;		Startup code after reset
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           
   627                           ;psect for function _main
   628  00F8                     _main:	
   629                           
   630                           ;LEDTurnon.c: 103:     init();
   631                           
   632                           ;incstack = 0
   633                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   634  00F8  205E               	fcall	_init
   635  00F9                     l898:	
   636                           
   637                           ;LEDTurnon.c: 105:         update();
   638  00F9  20FB               	fcall	_update
   639  00FA  28F9               	goto	l898
   640  00FB                     __end_of_main:	
   641                           
   642                           	psect	text1
   643  00FB                     __ptext1:	
   644 ;; *************** function _update *****************
   645 ;; Defined at:
   646 ;;		line 36 in file "loops.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		None
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1
   660 ;;      Params:         0       0       0
   661 ;;      Locals:         0       0       0
   662 ;;      Temps:          0       0       0
   663 ;;      Totals:         0       0       0
   664 ;;Total ram usage:        0 bytes
   665 ;; Hardware stack levels used:    1
   666 ;; Hardware stack levels required when called:    4
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		_main
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           
   675                           ;psect for function _update
   676  00FB                     _update:	
   677                           
   678                           ;incstack = 0
   679                           ; Regs used in _update: []
   680  00FB  0008               	return
   681  00FC                     __end_of_update:	
   682                           
   683                           	psect	text2
   684  005E                     __ptext2:	
   685 ;; *************** function _init *****************
   686 ;; Defined at:
   687 ;;		line 61 in file "LEDTurnon.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1
   701 ;;      Params:         0       0       0
   702 ;;      Locals:         0       0       0
   703 ;;      Temps:          0       0       0
   704 ;;      Totals:         0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    4
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function _init
   717  005E                     _init:	
   718                           
   719                           ;LEDTurnon.c: 63:     OSCCONbits.SCS1 = 1;
   720                           
   721                           ;incstack = 0
   722                           ; Regs used in _init: [wreg+status,2+status,0]
   723  005E  0021               	movlb	1	; select bank1
   724  005F  1499               	bsf	25,1	;volatile
   725                           
   726                           ;LEDTurnon.c: 65:     OSCCONbits.IRCF = 0b0111;
   727  0060  0819               	movf	25,w	;volatile
   728  0061  3987               	andlw	-121
   729  0062  3838               	iorlw	56
   730  0063  0099               	movwf	25	;volatile
   731                           
   732                           ;LEDTurnon.c: 68:     TRISA = 0xFF;
   733  0064  30FF               	movlw	255
   734  0065  008C               	movwf	12	;volatile
   735                           
   736                           ;LEDTurnon.c: 69:     TRISB = 0xFF;
   737  0066  30FF               	movlw	255
   738  0067  008D               	movwf	13	;volatile
   739                           
   740                           ;LEDTurnon.c: 70:     TRISC = 0xFF;
   741  0068  30FF               	movlw	255
   742  0069  008E               	movwf	14	;volatile
   743                           
   744                           ;LEDTurnon.c: 73:     LATA = 0x00;
   745  006A  0022               	movlb	2	; select bank2
   746  006B  018C               	clrf	12	;volatile
   747                           
   748                           ;LEDTurnon.c: 74:     LATB = 0x00;
   749  006C  018D               	clrf	13	;volatile
   750                           
   751                           ;LEDTurnon.c: 75:     LATC = 0x00;
   752  006D  018E               	clrf	14	;volatile
   753                           
   754                           ;LEDTurnon.c: 78:     ANSELA = 0x00;
   755  006E  0023               	movlb	3	; select bank3
   756  006F  018C               	clrf	12	;volatile
   757                           
   758                           ;LEDTurnon.c: 79:     ANSELB = 0x00;
   759  0070  018D               	clrf	13	;volatile
   760                           
   761                           ;LEDTurnon.c: 80:     ANSELC = 0x00;
   762  0071  018E               	clrf	14	;volatile
   763                           
   764                           ;LEDTurnon.c: 83:     TRISA = 0b11110001;
   765  0072  30F1               	movlw	241
   766  0073  0021               	movlb	1	; select bank1
   767  0074  008C               	movwf	12	;volatile
   768                           
   769                           ;LEDTurnon.c: 87:     INTCONbits.INTF = 0;
   770  0075  108B               	bcf	11,1	;volatile
   771                           
   772                           ;LEDTurnon.c: 88:     OPTION_REGbits.INTEDG = 0;
   773  0076  1315               	bcf	21,6	;volatile
   774                           
   775                           ;LEDTurnon.c: 89:     INTCONbits.INTE = 1;
   776  0077  160B               	bsf	11,4	;volatile
   777                           
   778                           ;LEDTurnon.c: 91:     T0IE = 1;
   779  0078  168B               	bsf	11,5	;volatile
   780                           
   781                           ;LEDTurnon.c: 92:     TMR0 = 0;
   782  0079  0020               	movlb	0	; select bank0
   783  007A  0195               	clrf	21	;volatile
   784                           
   785                           ;LEDTurnon.c: 95:     OPTION_REG = 0B00001000;
   786  007B  3008               	movlw	8
   787  007C  0021               	movlb	1	; select bank1
   788  007D  0095               	movwf	21	;volatile
   789                           
   790                           ;LEDTurnon.c: 96:     INTCONbits.GIE = 1;
   791  007E  178B               	bsf	11,7	;volatile
   792  007F  0008               	return
   793  0080                     __end_of_init:	
   794                           
   795                           	psect	intentry
   796  0004                     __pintentry:	
   797 ;; *************** function _interruptHandler *****************
   798 ;; Defined at:
   799 ;;		line 44 in file "LEDTurnon.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0, pclath, cstack
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1
   813 ;;      Params:         0       0       0
   814 ;;      Locals:         0       0       0
   815 ;;      Temps:          0       0       0
   816 ;;      Totals:         0       0       0
   817 ;;Total ram usage:        0 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    3
   820 ;; This function calls:
   821 ;;		_fixedUpdate
   822 ;;		_toggle_RA2
   823 ;; This function is called by:
   824 ;;		Interrupt level 1
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828  0004                     _interruptHandler:	
   829                           
   830                           ;incstack = 0
   831  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   832                           
   833                           ; Regs used in _interruptHandler: [wreg+status,2+status,0+pclath+cstack]
   834  0005  3180               	pagesel	$
   835                           
   836                           ;LEDTurnon.c: 46:     if (INTCONbits.INTE && INTCONbits.INTF){
   837  0006  1A0B               	btfsc	11,4	;volatile
   838  0007  1C8B               	btfss	11,1	;volatile
   839  0008  280B               	goto	i1l888
   840                           
   841                           ;LEDTurnon.c: 48:         toggle_RA2();
   842  0009  20D7               	fcall	_toggle_RA2
   843                           
   844                           ;LEDTurnon.c: 51:         INTCONbits.INTF = 0;
   845  000A  108B               	bcf	11,1	;volatile
   846  000B                     i1l888:	
   847                           
   848                           ;LEDTurnon.c: 55:     if (T0IE && T0IF){
   849  000B  1A8B               	btfsc	11,5	;volatile
   850  000C  1D0B               	btfss	11,2	;volatile
   851  000D  2810               	goto	i1l45
   852                           
   853                           ;LEDTurnon.c: 56:         T0IF = 0;
   854  000E  110B               	bcf	11,2	;volatile
   855                           
   856                           ;LEDTurnon.c: 57:         fixedUpdate ();
   857  000F  2080               	fcall	_fixedUpdate
   858  0010                     i1l45:	
   859  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   860  0011  0009               	retfie
   861  0012                     __end_of_interruptHandler:	
   862                           
   863                           	psect	text4
   864  0080                     __ptext4:	
   865 ;; *************** function _fixedUpdate *****************
   866 ;; Defined at:
   867 ;;		line 13 in file "loops.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0, pclath, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1
   881 ;;      Params:         0       0       0
   882 ;;      Locals:         0       0       0
   883 ;;      Temps:          2       0       0
   884 ;;      Totals:         2       0       0
   885 ;;Total ram usage:        2 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; Hardware stack levels required when called:    2
   888 ;; This function calls:
   889 ;;		___awmod
   890 ;;		_btn_ch
   891 ;;		_toggle_RA1
   892 ;;		_toggle_RA2
   893 ;;		_toggle_RA3
   894 ;; This function is called by:
   895 ;;		_interruptHandler
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           
   900                           ;psect for function _fixedUpdate
   901  0080                     _fixedUpdate:	
   902                           
   903                           ;loops.c: 14:     ++counter;
   904                           
   905                           ;incstack = 0
   906                           ; Regs used in _fixedUpdate: [wreg+status,2+status,0+pclath+cstack]
   907  0080  3001               	movlw	1
   908  0081  00F7               	movwf	??_fixedUpdate
   909  0082  0877               	movf	??_fixedUpdate,w
   910  0083  07F9               	addwf	_counter,f
   911                           
   912                           ;loops.c: 16:     if (counter % 0x04 == 0){
   913  0084  0879               	movf	_counter,w
   914  0085  3903               	andlw	3
   915  0086  1D03               	btfss	3,2
   916  0087  2889               	goto	i1l830
   917                           
   918                           ;loops.c: 17:         toggle_RA1 ();
   919  0088  20E3               	fcall	_toggle_RA1
   920  0089                     i1l830:	
   921                           
   922                           ;loops.c: 20:     if (counter % 0x7F == 0){
   923  0089  307F               	movlw	127
   924  008A  00F0               	movwf	___awmod@divisor
   925  008B  3000               	movlw	0
   926  008C  00F1               	movwf	___awmod@divisor+1
   927  008D  0879               	movf	_counter,w
   928  008E  00F7               	movwf	??_fixedUpdate
   929  008F  01F8               	clrf	??_fixedUpdate+1
   930  0090  0877               	movf	??_fixedUpdate,w
   931  0091  00F2               	movwf	___awmod@dividend
   932  0092  0878               	movf	??_fixedUpdate+1,w
   933  0093  00F3               	movwf	___awmod@dividend+1
   934  0094  2019               	fcall	___awmod
   935  0095  0870               	movf	?___awmod,w
   936  0096  0471               	iorwf	?___awmod+1,w
   937  0097  1D03               	btfss	3,2
   938  0098  289A               	goto	i1l834
   939                           
   940                           ;loops.c: 21:         toggle_RA2 ();
   941  0099  20D7               	fcall	_toggle_RA2
   942  009A                     i1l834:	
   943                           
   944                           ;loops.c: 25:     if (counter == 0xFF){
   945  009A  0A79               	incf	_counter,w
   946  009B  1D03               	btfss	3,2
   947  009C  0008               	return
   948                           
   949                           ;loops.c: 26:         toggle_RA3 ();
   950  009D  20CB               	fcall	_toggle_RA3
   951                           
   952                           ;loops.c: 27:         counter = 0x00;
   953  009E  01F9               	clrf	_counter
   954                           
   955                           ;loops.c: 29:         btn_ch ();
   956  009F  20EF               	fcall	_btn_ch
   957  00A0  0008               	return
   958  00A1                     __end_of_fixedUpdate:	
   959                           
   960                           	psect	text5
   961  00CB                     __ptext5:	
   962 ;; *************** function _toggle_RA3 *****************
   963 ;; Defined at:
   964 ;;		line 15 in file "fncts.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;		None
   967 ;; Auto vars:     Size  Location     Type
   968 ;;		None
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      void 
   971 ;; Registers used:
   972 ;;		status,0
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMMON   BANK0   BANK1
   978 ;;      Params:         0       0       0
   979 ;;      Locals:         0       0       0
   980 ;;      Temps:          0       0       0
   981 ;;      Totals:         0       0       0
   982 ;;Total ram usage:        0 bytes
   983 ;; Hardware stack levels used:    1
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		_fixedUpdate
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           
   992                           ;psect for function _toggle_RA3
   993  00CB                     _toggle_RA3:	
   994                           
   995                           ;fncts.c: 16:     LATAbits.LATA3 = !LATAbits.LATA3;
   996                           
   997                           ;incstack = 0
   998                           ; Regs used in _toggle_RA3: [status,0]
   999  00CB  1003               	clrc
  1000  00CC  0022               	movlb	2	; select bank2
  1001  00CD  1D8C               	btfss	12,3	;volatile
  1002  00CE  1403               	setc
  1003  00CF  1C03               	btfss	3,0
  1004  00D0  28D4               	goto	u9_20
  1005  00D1  0022               	movlb	2	; select bank2
  1006  00D2  158C               	bsf	12,3	;volatile
  1007  00D3  0008               	return
  1008  00D4                     u9_20:	
  1009  00D4  0022               	movlb	2	; select bank2
  1010  00D5  118C               	bcf	12,3	;volatile
  1011  00D6  0008               	return
  1012  00D7                     __end_of_toggle_RA3:	
  1013                           
  1014                           	psect	text6
  1015  00D7                     __ptext6:	
  1016 ;; *************** function _toggle_RA2 *****************
  1017 ;; Defined at:
  1018 ;;		line 12 in file "fncts.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		status,0
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMMON   BANK0   BANK1
  1032 ;;      Params:         0       0       0
  1033 ;;      Locals:         0       0       0
  1034 ;;      Temps:          0       0       0
  1035 ;;      Totals:         0       0       0
  1036 ;;Total ram usage:        0 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_interruptHandler
  1042 ;;		_fixedUpdate
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           
  1047                           ;psect for function _toggle_RA2
  1048  00D7                     _toggle_RA2:	
  1049                           
  1050                           ;fncts.c: 13:     LATAbits.LATA2 = !LATAbits.LATA2;
  1051                           
  1052                           ;incstack = 0
  1053                           ; Regs used in _toggle_RA2: [status,0]
  1054  00D7  1003               	clrc
  1055  00D8  0022               	movlb	2	; select bank2
  1056  00D9  1D0C               	btfss	12,2	;volatile
  1057  00DA  1403               	setc
  1058  00DB  1C03               	btfss	3,0
  1059  00DC  28E0               	goto	u5_20
  1060  00DD  0022               	movlb	2	; select bank2
  1061  00DE  150C               	bsf	12,2	;volatile
  1062  00DF  0008               	return
  1063  00E0                     u5_20:	
  1064  00E0  0022               	movlb	2	; select bank2
  1065  00E1  110C               	bcf	12,2	;volatile
  1066  00E2  0008               	return
  1067  00E3                     __end_of_toggle_RA2:	
  1068                           
  1069                           	psect	text7
  1070  00E3                     __ptext7:	
  1071 ;; *************** function _toggle_RA1 *****************
  1072 ;; Defined at:
  1073 ;;		line 9 in file "fncts.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		status,0
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMMON   BANK0   BANK1
  1087 ;;      Params:         0       0       0
  1088 ;;      Locals:         0       0       0
  1089 ;;      Temps:          0       0       0
  1090 ;;      Totals:         0       0       0
  1091 ;;Total ram usage:        0 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_fixedUpdate
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           
  1101                           ;psect for function _toggle_RA1
  1102  00E3                     _toggle_RA1:	
  1103                           
  1104                           ;fncts.c: 10:     LATAbits.LATA1 = !LATAbits.LATA1;
  1105                           
  1106                           ;incstack = 0
  1107                           ; Regs used in _toggle_RA1: [status,0]
  1108  00E3  1003               	clrc
  1109  00E4  0022               	movlb	2	; select bank2
  1110  00E5  1C8C               	btfss	12,1	;volatile
  1111  00E6  1403               	setc
  1112  00E7  1C03               	btfss	3,0
  1113  00E8  28EC               	goto	u7_20
  1114  00E9  0022               	movlb	2	; select bank2
  1115  00EA  148C               	bsf	12,1	;volatile
  1116  00EB  0008               	return
  1117  00EC                     u7_20:	
  1118  00EC  0022               	movlb	2	; select bank2
  1119  00ED  108C               	bcf	12,1	;volatile
  1120  00EE  0008               	return
  1121  00EF                     __end_of_toggle_RA1:	
  1122                           
  1123                           	psect	text8
  1124  00EF                     __ptext8:	
  1125 ;; *************** function _btn_ch *****************
  1126 ;; Defined at:
  1127 ;;		line 42 in file "loops.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;		None
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;		None
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, status,2, status,0, pclath, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMMON   BANK0   BANK1
  1141 ;;      Params:         0       0       0
  1142 ;;      Locals:         0       0       0
  1143 ;;      Temps:          0       0       0
  1144 ;;      Totals:         0       0       0
  1145 ;;Total ram usage:        0 bytes
  1146 ;; Hardware stack levels used:    1
  1147 ;; Hardware stack levels required when called:    1
  1148 ;; This function calls:
  1149 ;;		_btn_dn
  1150 ;;		_btn_up
  1151 ;; This function is called by:
  1152 ;;		_fixedUpdate
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           
  1157                           ;psect for function _btn_ch
  1158  00EF                     _btn_ch:	
  1159                           
  1160                           ;loops.c: 43:     if (PORTAbits.RA4 == 0){
  1161                           
  1162                           ;incstack = 0
  1163                           ; Regs used in _btn_ch: [wreg+status,2+status,0+pclath+cstack]
  1164  00EF  0020               	movlb	0	; select bank0
  1165  00F0  1A0C               	btfsc	12,4	;volatile
  1166  00F1  28F4               	goto	i1l111
  1167                           
  1168                           ;loops.c: 44:         btn_dn ();
  1169  00F2  20B6               	fcall	_btn_dn
  1170                           
  1171                           ;loops.c: 45:     }
  1172  00F3  0008               	return
  1173  00F4                     i1l111:	
  1174                           ;loops.c: 46:     else if (PORTAbits.RA4 == 1){
  1175                           
  1176  00F4  1E0C               	btfss	12,4	;volatile
  1177  00F5  0008               	return
  1178                           
  1179                           ;loops.c: 47:         btn_up ();
  1180  00F6  20A1               	fcall	_btn_up
  1181  00F7  0008               	return
  1182  00F8                     __end_of_btn_ch:	
  1183                           
  1184                           	psect	text9
  1185  00A1                     __ptext9:	
  1186 ;; *************** function _btn_up *****************
  1187 ;; Defined at:
  1188 ;;		line 42 in file "fncts.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMMON   BANK0   BANK1
  1202 ;;      Params:         0       0       0
  1203 ;;      Locals:         0       0       0
  1204 ;;      Temps:          1       0       0
  1205 ;;      Totals:         1       0       0
  1206 ;;Total ram usage:        1 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; This function calls:
  1209 ;;		Nothing
  1210 ;; This function is called by:
  1211 ;;		_btn_ch
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           
  1216                           ;psect for function _btn_up
  1217  00A1                     _btn_up:	
  1218                           
  1219                           ;fncts.c: 45:     if (btn_state == 0){
  1220                           
  1221                           ;incstack = 0
  1222                           ; Regs used in _btn_up: [wreg+status,2+status,0]
  1223  00A1  087B               	movf	_btn_state,w
  1224  00A2  1D03               	btfss	3,2
  1225  00A3  28AF               	goto	i1l656
  1226                           
  1227                           ;fncts.c: 46:         btn_streak ++;
  1228  00A4  3001               	movlw	1
  1229  00A5  00F0               	movwf	??_btn_up
  1230  00A6  0870               	movf	??_btn_up,w
  1231  00A7  07FA               	addwf	_btn_streak,f
  1232                           
  1233                           ;fncts.c: 48:         if (btn_streak == 10){
  1234  00A8  300A               	movlw	10
  1235  00A9  067A               	xorwf	_btn_streak,w
  1236  00AA  1D03               	btfss	3,2
  1237  00AB  0008               	return
  1238                           
  1239                           ;fncts.c: 49:             LATAbits.LATA1 = 0;
  1240  00AC  0022               	movlb	2	; select bank2
  1241  00AD  108C               	bcf	12,1	;volatile
  1242  00AE  0008               	return
  1243  00AF                     i1l656:	
  1244                           
  1245                           ;fncts.c: 54:         btn_state = btn_state ^ 0x01;
  1246  00AF  087B               	movf	_btn_state,w
  1247  00B0  3A01               	xorlw	1
  1248  00B1  00F0               	movwf	??_btn_up
  1249  00B2  0870               	movf	??_btn_up,w
  1250  00B3  00FB               	movwf	_btn_state
  1251                           
  1252                           ;fncts.c: 56:         btn_streak = 0;
  1253  00B4  01FA               	clrf	_btn_streak
  1254  00B5  0008               	return
  1255  00B6                     __end_of_btn_up:	
  1256                           
  1257                           	psect	text10
  1258  00B6                     __ptext10:	
  1259 ;; *************** function _btn_dn *****************
  1260 ;; Defined at:
  1261 ;;		line 23 in file "fncts.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, status,0
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1
  1275 ;;      Params:         0       0       0
  1276 ;;      Locals:         0       0       0
  1277 ;;      Temps:          1       0       0
  1278 ;;      Totals:         1       0       0
  1279 ;;Total ram usage:        1 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		_btn_ch
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           
  1289                           ;psect for function _btn_dn
  1290  00B6                     _btn_dn:	
  1291                           
  1292                           ;fncts.c: 26:     if (btn_state == 1){
  1293                           
  1294                           ;incstack = 0
  1295                           ; Regs used in _btn_dn: [wreg+status,2+status,0]
  1296  00B6  037B               	decf	_btn_state,w
  1297  00B7  1D03               	btfss	3,2
  1298  00B8  28C4               	goto	i1l646
  1299                           
  1300                           ;fncts.c: 27:         btn_streak ++;
  1301  00B9  3001               	movlw	1
  1302  00BA  00F0               	movwf	??_btn_dn
  1303  00BB  0870               	movf	??_btn_dn,w
  1304  00BC  07FA               	addwf	_btn_streak,f
  1305                           
  1306                           ;fncts.c: 29:         if (btn_streak == 10){
  1307  00BD  300A               	movlw	10
  1308  00BE  067A               	xorwf	_btn_streak,w
  1309  00BF  1D03               	btfss	3,2
  1310  00C0  0008               	return
  1311                           
  1312                           ;fncts.c: 30:             LATAbits.LATA1 = 1;
  1313  00C1  0022               	movlb	2	; select bank2
  1314  00C2  148C               	bsf	12,1	;volatile
  1315  00C3  0008               	return
  1316  00C4                     i1l646:	
  1317                           
  1318                           ;fncts.c: 36:         btn_state = btn_state ^ 0x01;
  1319  00C4  087B               	movf	_btn_state,w
  1320  00C5  3A01               	xorlw	1
  1321  00C6  00F0               	movwf	??_btn_dn
  1322  00C7  0870               	movf	??_btn_dn,w
  1323  00C8  00FB               	movwf	_btn_state
  1324                           
  1325                           ;fncts.c: 38:         btn_streak = 0;
  1326  00C9  01FA               	clrf	_btn_streak
  1327  00CA  0008               	return
  1328  00CB                     __end_of_btn_dn:	
  1329                           
  1330                           	psect	text11
  1331  0019                     __ptext11:	
  1332 ;; *************** function ___awmod *****************
  1333 ;; Defined at:
  1334 ;;		line 5 in file "D:\Programs\Compilers\8 bit\pic\sources\c99\common\awmod.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  divisor         2    0[COMMON] int 
  1337 ;;  dividend        2    2[COMMON] int 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  sign            1    6[COMMON] unsigned char 
  1340 ;;  counter         1    5[COMMON] unsigned char 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  2    0[COMMON] int 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMMON   BANK0   BANK1
  1350 ;;      Params:         4       0       0
  1351 ;;      Locals:         2       0       0
  1352 ;;      Temps:          1       0       0
  1353 ;;      Totals:         7       0       0
  1354 ;;Total ram usage:        7 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; This function calls:
  1357 ;;		Nothing
  1358 ;; This function is called by:
  1359 ;;		_fixedUpdate
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           
  1364                           ;psect for function ___awmod
  1365  0019                     ___awmod:	
  1366                           
  1367                           ;incstack = 0
  1368                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1369  0019  01F6               	clrf	___awmod@sign
  1370  001A  1FF3               	btfss	___awmod@dividend+1,7
  1371  001B  2823               	goto	i1l794
  1372  001C  09F2               	comf	___awmod@dividend,f
  1373  001D  09F3               	comf	___awmod@dividend+1,f
  1374  001E  0AF2               	incf	___awmod@dividend,f
  1375  001F  1903               	skipnz
  1376  0020  0AF3               	incf	___awmod@dividend+1,f
  1377  0021  01F6               	clrf	___awmod@sign
  1378  0022  0AF6               	incf	___awmod@sign,f
  1379  0023                     i1l794:	
  1380  0023  1FF1               	btfss	___awmod@divisor+1,7
  1381  0024  282A               	goto	i1l798
  1382  0025  09F0               	comf	___awmod@divisor,f
  1383  0026  09F1               	comf	___awmod@divisor+1,f
  1384  0027  0AF0               	incf	___awmod@divisor,f
  1385  0028  1903               	skipnz
  1386  0029  0AF1               	incf	___awmod@divisor+1,f
  1387  002A                     i1l798:	
  1388  002A  0870               	movf	___awmod@divisor,w
  1389  002B  0471               	iorwf	___awmod@divisor+1,w
  1390  002C  1903               	btfsc	3,2
  1391  002D  2851               	goto	i1l816
  1392  002E  01F5               	clrf	___awmod@counter
  1393  002F  0AF5               	incf	___awmod@counter,f
  1394  0030                     i1l806:	
  1395  0030  1BF1               	btfsc	___awmod@divisor+1,7
  1396  0031  283C               	goto	i1l808
  1397  0032  3001               	movlw	1
  1398  0033                     u32_25:	
  1399  0033  35F0               	lslf	___awmod@divisor,f
  1400  0034  0DF1               	rlf	___awmod@divisor+1,f
  1401  0035  0B89               	decfsz	9,f
  1402  0036  2833               	goto	u32_25
  1403  0037  3001               	movlw	1
  1404  0038  00F4               	movwf	??___awmod
  1405  0039  0874               	movf	??___awmod,w
  1406  003A  07F5               	addwf	___awmod@counter,f
  1407  003B  2830               	goto	i1l806
  1408  003C                     i1l808:	
  1409  003C  0871               	movf	___awmod@divisor+1,w
  1410  003D  0273               	subwf	___awmod@dividend+1,w
  1411  003E  1D03               	skipz
  1412  003F  2842               	goto	u34_25
  1413  0040  0870               	movf	___awmod@divisor,w
  1414  0041  0272               	subwf	___awmod@dividend,w
  1415  0042                     u34_25:	
  1416  0042  1C03               	skipc
  1417  0043  2848               	goto	i1l812
  1418  0044  0870               	movf	___awmod@divisor,w
  1419  0045  02F2               	subwf	___awmod@dividend,f
  1420  0046  0871               	movf	___awmod@divisor+1,w
  1421  0047  3BF3               	subwfb	___awmod@dividend+1,f
  1422  0048                     i1l812:	
  1423  0048  3001               	movlw	1
  1424  0049                     u35_25:	
  1425  0049  36F1               	lsrf	___awmod@divisor+1,f
  1426  004A  0CF0               	rrf	___awmod@divisor,f
  1427  004B  0B89               	decfsz	9,f
  1428  004C  2849               	goto	u35_25
  1429  004D  3001               	movlw	1
  1430  004E  02F5               	subwf	___awmod@counter,f
  1431  004F  1D03               	btfss	3,2
  1432  0050  283C               	goto	i1l808
  1433  0051                     i1l816:	
  1434  0051  0876               	movf	___awmod@sign,w
  1435  0052  1903               	btfsc	3,2
  1436  0053  2859               	goto	i1l820
  1437  0054  09F2               	comf	___awmod@dividend,f
  1438  0055  09F3               	comf	___awmod@dividend+1,f
  1439  0056  0AF2               	incf	___awmod@dividend,f
  1440  0057  1903               	skipnz
  1441  0058  0AF3               	incf	___awmod@dividend+1,f
  1442  0059                     i1l820:	
  1443  0059  0873               	movf	___awmod@dividend+1,w
  1444  005A  00F1               	movwf	?___awmod+1
  1445  005B  0872               	movf	___awmod@dividend,w
  1446  005C  00F0               	movwf	?___awmod
  1447  005D  0008               	return
  1448  005E                     __end_of___awmod:	
  1449  007E                     btemp	set	126	;btemp
  1450  007E                     int$flags	set	126
  1451  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interruptHandler in COMMON

    _interruptHandler->_fixedUpdate
    _fixedUpdate->___awmod
    _btn_ch->_btn_dn
    _btn_ch->_btn_up

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
                             _update
 ---------------------------------------------------------------------------------
 (1) _update                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _interruptHandler                                     0     0      0     448
                        _fixedUpdate
                         _toggle_RA2
 ---------------------------------------------------------------------------------
 (3) _fixedUpdate                                          2     2      0     448
                                              7 COMMON     2     2      0
                            ___awmod
                             _btn_ch
                         _toggle_RA1
                         _toggle_RA2
                         _toggle_RA3
 ---------------------------------------------------------------------------------
 (4) _toggle_RA3                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _toggle_RA2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _toggle_RA1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _btn_ch                                               0     0      0       0
                             _btn_dn
                             _btn_up
 ---------------------------------------------------------------------------------
 (5) _btn_up                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _btn_dn                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _update

 _interruptHandler (ROOT)
   _fixedUpdate
     ___awmod
     _btn_ch
       _btn_dn
       _btn_up
     _toggle_RA1
     _toggle_RA2
     _toggle_RA3
   _toggle_RA2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       C       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jun 05 15:17:20 2019

              __CFG_CP$OFF 0000                        l898 00F9               ?_fixedUpdate 0070  
             ___awmod@sign 0076               __CFG_BORV$LO 0000                        wreg 0009  
             __CFG_IESO$ON 0000               __CFG_LVP$OFF 0000                       _T0IE 005D  
                     _T0IF 005A                       _LATA 010C                       _LATB 010D  
                     _LATC 010E                       i1l45 0010                       _TMR0 0015  
                     u5_20 00E0                       u7_20 00EC                       u9_20 00D4  
             __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000                       _main 00F8  
 __end_of_interruptHandler 0012                       _init 005E                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 0012              __CFG_MCLRE$ON 0000  
                    ?_main 0070                      ?_init 0070              __CFG_WDTE$OFF 0000  
          __end_of___awmod 005E                      i1l111 00F4                      i1l820 0059  
                    i1l812 0048                      i1l806 0030                      i1l646 00C4  
                    i1l830 0089                      i1l808 003C                      i1l816 0051  
                    i1l656 00AF                      i1l834 009A                      i1l794 0023  
                    i1l798 002A                      i1l888 000B                      u32_25 0033  
                    u34_25 0042                      u35_25 0049                      _TRISA 008C  
                    _TRISB 008D                      _TRISC 008E                      status 0003  
                    wtemp0 007E            __initialization 0013               __end_of_main 00FB  
             __end_of_init 0080             __CFG_LPBOR$OFF 0000                     ??_main 0000  
                   ??_init 0000                     _ANSELA 018C                     _ANSELB 018D  
                   _ANSELC 018E             __CFG_PWRTE$OFF 0000             __CFG_STVREN$ON 0000  
                ??___awmod 0074                     _btn_ch 00EF                     _btn_dn 00B6  
                   _btn_up 00A1            ___awmod@divisor 0070            ___awmod@counter 0075  
                   _update 00FB       __size_of_fixedUpdate 0021    __end_of__initialization 0016  
           __pcstackCOMMON 0070             _OPTION_REGbits 0095            __CFG_VCAPEN$OFF 0000  
        ?_interruptHandler 0070         ??_interruptHandler 0079                 __pmaintext 00F8  
               __pintentry 0004                    ?_btn_ch 0070                    ?_btn_dn 0070  
                  ?_btn_up 0070                    ?_update 0070                 _btn_streak 007A  
                  ___awmod 0019            __size_of_btn_ch 0009            __size_of_btn_dn 0015  
          __size_of_btn_up 0015                    __ptext1 00FB                    __ptext2 005E  
                  __ptext4 0080                    __ptext5 00CB                    __ptext6 00D7  
                  __ptext7 00E3                    __ptext8 00EF                    __ptext9 00A1  
          __size_of_update 0001                    _counter 0079           ___awmod@dividend 0072  
     end_of_initialization 0016                  _PORTAbits 000C                 _toggle_RA1 00E3  
               _toggle_RA2 00D7                 _toggle_RA3 00CB           __CFG_FOSC$INTOSC 0000  
           __end_of_btn_ch 00F8             __end_of_btn_dn 00CB             __end_of_btn_up 00B6  
            ??_fixedUpdate 0077             __end_of_update 00FC        start_initialization 0013  
                 ??_btn_ch 0071                   ??_btn_dn 0070                   ??_btn_up 0070  
                 ??_update 0000  __size_of_interruptHandler 000E                ?_toggle_RA1 0070  
              ?_toggle_RA2 0070                ?_toggle_RA3 0070                __pbssCOMMON 0079  
                ___latbits 0000              __pcstackBANK0 0000        __end_of_fixedUpdate 00A1  
                 ?___awmod 0070                  _btn_state 007B                   _LATAbits 010C  
      __size_of_toggle_RA1 000C        __size_of_toggle_RA2 000C        __size_of_toggle_RA3 000C  
              _fixedUpdate 0080           __size_of___awmod 0045           _interruptHandler 0004  
                 __ptext10 00B6                   __ptext11 0019              __size_of_main 0003  
            __size_of_init 0022                   int$flags 007E               ??_toggle_RA1 0070  
             ??_toggle_RA2 0070               ??_toggle_RA3 0070                 _INTCONbits 000B  
                 intlevel1 0000          __CFG_CLKOUTEN$OFF 0000                 _OSCCONbits 0099  
       __end_of_toggle_RA1 00EF         __end_of_toggle_RA2 00E3         __end_of_toggle_RA3 00D7  
               _OPTION_REG 0095  
