

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Aug 07 02:51:03 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1512
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.05
    14                           ; Generated 20/12/2018 GMT
    15                           ; 
    16                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F1512 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  008C                     	;# 
    75  008D                     	;# 
    76  008E                     	;# 
    77  0090                     	;# 
    78  0091                     	;# 
    79  0092                     	;# 
    80  0095                     	;# 
    81  0096                     	;# 
    82  0097                     	;# 
    83  0099                     	;# 
    84  009A                     	;# 
    85  009B                     	;# 
    86  009B                     	;# 
    87  009B                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  010C                     	;# 
    94  010D                     	;# 
    95  010E                     	;# 
    96  0116                     	;# 
    97  0117                     	;# 
    98  011D                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101  018E                     	;# 
   102  0191                     	;# 
   103  0191                     	;# 
   104  0192                     	;# 
   105  0193                     	;# 
   106  0193                     	;# 
   107  0194                     	;# 
   108  0195                     	;# 
   109  0196                     	;# 
   110  0197                     	;# 
   111  0199                     	;# 
   112  019A                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019B                     	;# 
   117  019C                     	;# 
   118  019C                     	;# 
   119  019D                     	;# 
   120  019E                     	;# 
   121  019F                     	;# 
   122  020D                     	;# 
   123  0210                     	;# 
   124  0211                     	;# 
   125  0211                     	;# 
   126  0212                     	;# 
   127  0212                     	;# 
   128  0213                     	;# 
   129  0213                     	;# 
   130  0214                     	;# 
   131  0214                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0216                     	;# 
   136  0216                     	;# 
   137  0217                     	;# 
   138  0217                     	;# 
   139  0291                     	;# 
   140  0291                     	;# 
   141  0292                     	;# 
   142  0293                     	;# 
   143  0298                     	;# 
   144  0298                     	;# 
   145  0299                     	;# 
   146  029A                     	;# 
   147  0394                     	;# 
   148  0395                     	;# 
   149  0396                     	;# 
   150  0FE4                     	;# 
   151  0FE5                     	;# 
   152  0FE6                     	;# 
   153  0FE7                     	;# 
   154  0FE8                     	;# 
   155  0FE9                     	;# 
   156  0FEA                     	;# 
   157  0FEB                     	;# 
   158  0FED                     	;# 
   159  0FEE                     	;# 
   160  0FEF                     	;# 
   161  0711                     	;# 
   162  0712                     	;# 
   163  0713                     	;# 
   164  0714                     	;# 
   165  0715                     	;# 
   166  0716                     	;# 
   167  0717                     	;# 
   168  0718                     	;# 
   169  0719                     	;# 
   170  071A                     	;# 
   171  071A                     	;# 
   172  071A                     	;# 
   173  071B                     	;# 
   174  071C                     	;# 
   175  071C                     	;# 
   176  071C                     	;# 
   177  071D                     	;# 
   178  0011                     _PIR1bits	set	17
   179  005E                     _PEIE	set	94
   180  005F                     _GIE	set	95
   181  008B                     _SSPIF	set	139
   182  008E                     _TRISCbits	set	142
   183  008D                     _TRISB	set	141
   184  008C                     _TRISA	set	140
   185  0099                     _OSCCONbits	set	153
   186  048B                     _SSPIE	set	1163
   187  010D                     _LATBbits	set	269
   188  010C                     _LATA	set	268
   189  018E                     _ANSELC	set	398
   190  018D                     _ANSELB	set	397
   191  018C                     _ANSELA	set	396
   192  0214                     _SSPSTATbits	set	532
   193  0211                     _SSPBUF	set	529
   194  0216                     _SSPCON2	set	534
   195  0215                     _SSPCON1	set	533
   196  0214                     _SSPSTAT	set	532
   197  0212                     _SSPADD	set	530
   198  10AC                     _CKP	set	4268
   199                           
   200                           ; #config settings
   201  0000                     
   202                           	psect	cinit
   203  000F                     start_initialization:	
   204  000F                     __initialization:	
   205                           
   206                           ; Clear objects allocated to COMMON
   207  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   208  0010                     end_of_initialization:	
   209                           ;End of C runtime variable initialization code
   210                           
   211  0010                     __end_of__initialization:	
   212  0010  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   213  0011  0020               	movlb	0
   214  0012  2813               	ljmp	_main	;jump to C main() function
   215                           
   216                           	psect	bssCOMMON
   217  0074                     __pbssCOMMON:	
   218  0074                     _readData:	
   219  0074                     	ds	1
   220                           
   221                           	psect	cstackCOMMON
   222  0070                     __pcstackCOMMON:	
   223  0070                     ?_i2c_interrupt:	
   224  0070                     ?_PicRead:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0070                     ??_PicRead:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     ?_interrupt_handler:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ?_main:	
   234                           ; 1 bytes @ 0x0
   235                           
   236                           
   237                           ; 1 bytes @ 0x0
   238  0070                     	ds	2
   239  0072                     PicRead@tempData:	
   240                           
   241                           ; 1 bytes @ 0x2
   242  0072                     	ds	1
   243  0073                     ??_i2c_interrupt:	
   244                           
   245                           ; 1 bytes @ 0x3
   246  0073                     	ds	1
   247  0074                     ??_interrupt_handler:	
   248  0074                     ??_main:	
   249                           ; 1 bytes @ 0x4
   250                           
   251                           
   252                           	psect	maintext
   253  0013                     __pmaintext:	
   254                           ; 1 bytes @ 0x4
   255 ;;
   256 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   257 ;;
   258 ;; *************** function _main *****************
   259 ;; Defined at:
   260 ;;		line 48 in file "slave.c"
   261 ;; Parameters:    Size  Location     Type
   262 ;;		None
   263 ;; Auto vars:     Size  Location     Type
   264 ;;  x               2    0        int 
   265 ;; Return value:  Size  Location     Type
   266 ;;                  1    wreg      void 
   267 ;; Registers used:
   268 ;;		wreg, status,2, status,0
   269 ;; Tracked objects:
   270 ;;		On entry : B1F/0
   271 ;;		On exit  : 0/0
   272 ;;		Unchanged: 0/0
   273 ;; Data sizes:     COMMON   BANK0   BANK1
   274 ;;      Params:         0       0       0
   275 ;;      Locals:         0       0       0
   276 ;;      Temps:          0       0       0
   277 ;;      Totals:         0       0       0
   278 ;;Total ram usage:        0 bytes
   279 ;; Hardware stack levels required when called:    3
   280 ;; This function calls:
   281 ;;		Nothing
   282 ;; This function is called by:
   283 ;;		Startup code after reset
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           
   288                           ;psect for function _main
   289  0013                     _main:	
   290                           
   291                           ;slave.c: 49:     int x;;slave.c: 52:     OSCCONbits.IRCF = 0b1100;
   292                           
   293                           ;incstack = 0
   294                           ; Regs used in _main: [wreg+status,2+status,0]
   295  0013  0021               	movlb	1	; select bank1
   296  0014  0819               	movf	25,w	;volatile
   297  0015  3987               	andlw	-121
   298  0016  3860               	iorlw	96
   299  0017  0099               	movwf	25	;volatile
   300                           
   301                           ;slave.c: 55:     ANSELA = 0;
   302  0018  0023               	movlb	3	; select bank3
   303  0019  018C               	clrf	12	;volatile
   304                           
   305                           ;slave.c: 56:     TRISA = 0;
   306  001A  0021               	movlb	1	; select bank1
   307  001B  018C               	clrf	12	;volatile
   308                           
   309                           ;slave.c: 57:     LATA = 0;
   310  001C  0022               	movlb	2	; select bank2
   311  001D  018C               	clrf	12	;volatile
   312                           
   313                           ;slave.c: 59:     ANSELB = 0;
   314  001E  0023               	movlb	3	; select bank3
   315  001F  018D               	clrf	13	;volatile
   316                           
   317                           ;slave.c: 60:     TRISB = 0;
   318  0020  0021               	movlb	1	; select bank1
   319  0021  018D               	clrf	13	;volatile
   320                           
   321                           ;slave.c: 61:     LATBbits.LATB0 = 1;
   322  0022  0022               	movlb	2	; select bank2
   323  0023  140D               	bsf	13,0	;volatile
   324                           
   325                           ;slave.c: 63:     ANSELC = 0;
   326  0024  0023               	movlb	3	; select bank3
   327  0025  018E               	clrf	14	;volatile
   328                           
   329                           ;slave.c: 64:     TRISCbits.TRISC3 = 1;
   330  0026  0021               	movlb	1	; select bank1
   331  0027  158E               	bsf	14,3	;volatile
   332                           
   333                           ;slave.c: 65:     TRISCbits.TRISC4 = 1;
   334  0028  160E               	bsf	14,4	;volatile
   335                           
   336                           ;slave.c: 69:     SSPADD = 0x30;
   337  0029  3030               	movlw	48
   338  002A  0024               	movlb	4	; select bank4
   339  002B  0092               	movwf	18	;volatile
   340                           
   341                           ;slave.c: 71:     SSPSTAT = 0x80;
   342  002C  3080               	movlw	128
   343  002D  0094               	movwf	20	;volatile
   344                           
   345                           ;slave.c: 72:     SSPCON1 = 0x36;
   346  002E  3036               	movlw	54
   347  002F  0095               	movwf	21	;volatile
   348                           
   349                           ;slave.c: 73:     SSPCON2 = 0x00;
   350  0030  0196               	clrf	22	;volatile
   351                           
   352                           ;slave.c: 75:     GIE = 1;
   353  0031  178B               	bsf	11,7	;volatile
   354                           
   355                           ;slave.c: 76:     PEIE = 1;
   356  0032  170B               	bsf	11,6	;volatile
   357                           
   358                           ;slave.c: 77:     SSPIF = 0;
   359  0033  0020               	movlb	0	; select bank0
   360  0034  1191               	bcf	17,3	;volatile
   361                           
   362                           ;slave.c: 78:     SSPIE = 1;
   363  0035  0021               	movlb	1	; select bank1
   364  0036  1591               	bsf	17,3	;volatile
   365  0037                     l59:	
   366                           ;slave.c: 81:     while (1);
   367                           
   368  0037  2837               	goto	l59
   369  0038                     __end_of_main:	
   370                           
   371                           	psect	intentry
   372  0004                     __pintentry:	
   373 ;; *************** function _interrupt_handler *****************
   374 ;; Defined at:
   375 ;;		line 39 in file "slave.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2, status,0, pclath, cstack
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0   BANK1
   389 ;;      Params:         0       0       0
   390 ;;      Locals:         0       0       0
   391 ;;      Temps:          0       0       0
   392 ;;      Totals:         0       0       0
   393 ;;Total ram usage:        0 bytes
   394 ;; Hardware stack levels used:    1
   395 ;; Hardware stack levels required when called:    2
   396 ;; This function calls:
   397 ;;		_i2c_interrupt
   398 ;; This function is called by:
   399 ;;		Interrupt level 1
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403  0004                     _interrupt_handler:	
   404                           
   405                           ;incstack = 0
   406  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   407                           
   408                           ; Regs used in _interrupt_handler: [wreg+status,2+status,0+pclath+cstack]
   409  0005  3180               	pagesel	$
   410                           
   411                           ;slave.c: 41:     if (SSPIF){
   412  0006  0020               	movlb	0	; select bank0
   413  0007  1D91               	btfss	17,3	;volatile
   414  0008  280C               	goto	i1l54
   415                           
   416                           ;slave.c: 42:         i2c_interrupt();
   417  0009  2052               	fcall	_i2c_interrupt
   418                           
   419                           ;slave.c: 43:         PIR1bits.SSPIF = 0;
   420  000A  0020               	movlb	0	; select bank0
   421  000B  1191               	bcf	17,3	;volatile
   422  000C                     i1l54:	
   423  000C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   424  000D  0009               	retfie
   425  000E                     __end_of_interrupt_handler:	
   426                           
   427                           	psect	text2
   428  0052                     __ptext2:	
   429 ;; *************** function _i2c_interrupt *****************
   430 ;; Defined at:
   431 ;;		line 85 in file "slave.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;		None
   434 ;; Auto vars:     Size  Location     Type
   435 ;;		None
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, status,2, status,0, pclath, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMMON   BANK0   BANK1
   445 ;;      Params:         0       0       0
   446 ;;      Locals:         0       0       0
   447 ;;      Temps:          1       0       0
   448 ;;      Totals:         1       0       0
   449 ;;Total ram usage:        1 bytes
   450 ;; Hardware stack levels used:    1
   451 ;; Hardware stack levels required when called:    1
   452 ;; This function calls:
   453 ;;		_PicRead
   454 ;; This function is called by:
   455 ;;		_interrupt_handler
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459                           
   460                           ;psect for function _i2c_interrupt
   461  0052                     _i2c_interrupt:	
   462                           
   463                           ;slave.c: 86:     LATBbits.LATB1 ^= 1;
   464                           
   465                           ;incstack = 0
   466                           ; Regs used in _i2c_interrupt: [wreg+status,2+status,0+pclath+cstack]
   467  0052  0022               	movlb	2	; select bank2
   468  0053  0C0D               	rrf	13,w	;volatile
   469  0054  3901               	andlw	1
   470  0055  00F3               	movwf	??_i2c_interrupt
   471  0056  3001               	movlw	1
   472  0057  06F3               	xorwf	??_i2c_interrupt,f
   473  0058  0DF3               	rlf	??_i2c_interrupt,f
   474  0059  080D               	movf	13,w	;volatile
   475  005A  0673               	xorwf	??_i2c_interrupt,w
   476  005B  39FD               	andlw	-3
   477  005C  0673               	xorwf	??_i2c_interrupt,w
   478  005D  008D               	movwf	13	;volatile
   479                           
   480                           ;slave.c: 87:     readData = PicRead ();
   481  005E  2038               	fcall	_PicRead
   482  005F  00F3               	movwf	??_i2c_interrupt
   483  0060  0873               	movf	??_i2c_interrupt,w
   484  0061  00F4               	movwf	_readData	;volatile
   485                           
   486                           ;slave.c: 88:     LATA = readData;
   487  0062  0874               	movf	_readData,w	;volatile
   488  0063  0022               	movlb	2	; select bank2
   489  0064  008C               	movwf	12	;volatile
   490  0065  0008               	return
   491  0066                     __end_of_i2c_interrupt:	
   492                           
   493                           	psect	text3
   494  0038                     __ptext3:	
   495 ;; *************** function _PicRead *****************
   496 ;; Defined at:
   497 ;;		line 91 in file "slave.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;  tempData        1    2[COMMON] unsigned char 
   502 ;;  add             1    0        unsigned char 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      unsigned char 
   505 ;; Registers used:
   506 ;;		wreg
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1
   512 ;;      Params:         0       0       0
   513 ;;      Locals:         2       0       0
   514 ;;      Temps:          1       0       0
   515 ;;      Totals:         3       0       0
   516 ;;Total ram usage:        3 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; This function calls:
   519 ;;		Nothing
   520 ;; This function is called by:
   521 ;;		_i2c_interrupt
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _PicRead
   527  0038                     _PicRead:	
   528                           
   529                           ;slave.c: 92:     char tempData;;slave.c: 93:     char add;;slave.c: 96:     PIR1bits.SS
      +                          PIF = 0;
   530                           
   531                           ;incstack = 0
   532                           ; Regs used in _PicRead: [wreg]
   533  0038  0020               	movlb	0	; select bank0
   534  0039  1191               	bcf	17,3	;volatile
   535  003A  0024               	movlb	4	; select bank4
   536  003B  0811               	movf	17,w	;volatile
   537                           
   538                           ;slave.c: 100:     CKP = 1;
   539  003C  1615               	bsf	21,4	;volatile
   540                           
   541                           ;slave.c: 102:     LATBbits.LATB3 = 1;
   542  003D  0022               	movlb	2	; select bank2
   543  003E  158D               	bsf	13,3	;volatile
   544  003F                     i1l68:	
   545                           ;slave.c: 104:     while (!SSPIF);
   546                           
   547  003F  0020               	movlb	0	; select bank0
   548  0040  1D91               	btfss	17,3	;volatile
   549  0041  283F               	goto	i1l68
   550                           
   551                           ;slave.c: 105:     SSPIF = 0;
   552  0042  1191               	bcf	17,3	;volatile
   553                           
   554                           ;slave.c: 106:     LATBbits.LATB4 = 1;
   555  0043  0022               	movlb	2	; select bank2
   556  0044  160D               	bsf	13,4	;volatile
   557  0045                     i1l71:	
   558                           ;slave.c: 109:     while (!SSPSTATbits.BF);
   559                           
   560  0045  0024               	movlb	4	; select bank4
   561  0046  1C14               	btfss	20,0	;volatile
   562  0047  2845               	goto	i1l71
   563                           
   564                           ;slave.c: 110:     tempData = SSPBUF;
   565  0048  0811               	movf	17,w	;volatile
   566  0049  00F0               	movwf	??_PicRead
   567  004A  0870               	movf	??_PicRead,w
   568  004B  00F2               	movwf	PicRead@tempData
   569                           
   570                           ;slave.c: 111:     LATBbits.LATB5 = 1;
   571  004C  0022               	movlb	2	; select bank2
   572  004D  168D               	bsf	13,5	;volatile
   573                           
   574                           ;slave.c: 113:     CKP = 1;
   575  004E  0024               	movlb	4	; select bank4
   576  004F  1615               	bsf	21,4	;volatile
   577                           
   578                           ;slave.c: 115:     return tempData;
   579  0050  0872               	movf	PicRead@tempData,w
   580  0051  0008               	return
   581  0052                     __end_of_PicRead:	
   582  007E                     btemp	set	126	;btemp
   583  007E                     int$flags	set	126
   584  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_handler in COMMON

    _interrupt_handler->_i2c_interrupt
    _i2c_interrupt->_PicRead

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _interrupt_handler                                    0     0      0      15
                      _i2c_interrupt
 ---------------------------------------------------------------------------------
 (2) _i2c_interrupt                                        1     1      0      15
                                              3 COMMON     1     1      0
                            _PicRead
 ---------------------------------------------------------------------------------
 (3) _PicRead                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _interrupt_handler (ROOT)
   _i2c_interrupt
     _PicRead

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       5       2       35.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       5       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       5       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Aug 07 02:51:03 2019

               __CFG_CP$OFF 0000                 _SSPSTATbits 0214                          l59 0037  
                       _CKP 10AC                         _GIE 005F                __CFG_BORV$LO 0000  
              __CFG_IESO$ON 0000                __CFG_LVP$OFF 0000                        _LATA 010C  
                      _PEIE 005E                        i1l54 000C                        i1l71 0045  
                      i1l68 003F                __CFG_WRT$OFF 0000               __CFG_FCMEN$ON 0000  
                      _main 0013                        btemp 007E               __CFG_BOREN$ON 0000  
                      start 000E               _i2c_interrupt 0052               __CFG_MCLRE$ON 0000  
           __end_of_PicRead 0052                       ?_main 0070               __CFG_WDTE$OFF 0000  
                     _TRISA 008C                       _TRISB 008D                       _SSPIE 048B  
                     _SSPIF 008B                       wtemp0 007E              ?_i2c_interrupt 0070  
           __initialization 000F                __end_of_main 0038              __CFG_LPBOR$OFF 0000  
                    ??_main 0074                      _ANSELA 018C                      _ANSELB 018D  
                    _ANSELC 018E                      _SSPADD 0212                      _SSPBUF 0211  
                 ??_PicRead 0070              __CFG_PWRTE$OFF 0000              __CFG_STVREN$ON 0000  
           ??_i2c_interrupt 0073     __end_of__initialization 0010              __pcstackCOMMON 0070  
           __CFG_VCAPEN$OFF 0000                  __pmaintext 0013                  __pintentry 0004  
           PicRead@tempData 0072                     _SSPCON1 0215                     _SSPCON2 0216  
                   _SSPSTAT 0214                     _PicRead 0038                     __ptext2 0052  
                   __ptext3 0038        end_of_initialization 0010            __CFG_FOSC$INTOSC 0000  
                 _TRISCbits 008E         start_initialization 000F       __end_of_i2c_interrupt 0066  
               __pbssCOMMON 0074                   ___latbits 0000                    ?_PicRead 0070  
         _interrupt_handler 0004          ?_interrupt_handler 0070         ??_interrupt_handler 0074  
                  _LATBbits 010D                    _PIR1bits 0011   __end_of_interrupt_handler 000E  
          __size_of_PicRead 001A                    _readData 0074               __size_of_main 0025  
                  int$flags 007E  __size_of_interrupt_handler 000A                    intlevel1 0000  
         __CFG_CLKOUTEN$OFF 0000                  _OSCCONbits 0099      __size_of_i2c_interrupt 0014  
